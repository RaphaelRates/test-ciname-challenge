<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.7 on win32)" generated="2025-10-28T15:42:20.369214" rpa="false" schemaversion="5">
<suite id="s1" name="Server" source="C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\tests\server">
<suite id="s1-s1" name="Auth" source="C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\tests\server\auth.robot">
<test id="s1-s1-t1" name="TC001 - Cadastro de Usuário com Email Já Existente" line="9">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:20.716253" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-28T15:42:20.716253" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-28T15:42:20.716253" elapsed="0.000000"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-28T15:42:20.718366" level="INFO">${timestamp} = 1761676940</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-28T15:42:20.718366" elapsed="0.000000"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-28T15:42:20.718366" level="INFO">${existing_email} = teste_existente_1761676940@email.com</msg>
<var>${existing_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_existente_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-28T15:42:20.718366" elapsed="0.000000"/>
</kw>
<kw name="Register And Perform Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:20.719371" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:20.719371" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:20.719371" level="INFO">${body} = {'email': 'teste_existente_1761676940@email.com', 'password': 'senha456', 'name': 'New Test User', 'role': 'user # &lt;-- INCLUA ROLE NO BODY'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>name=${name}</arg>
<arg>role=${role} # &lt;-- INCLUA ROLE NO BODY</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:20.719371" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:20.917827" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '140'} 
 body=b'{"email": "teste_existente_1761676940@email.com", "password": "senha456", "name": "New Test User", "role": "user # &lt;-- INCLUA ROLE NO BODY"}' 
 </msg>
<msg time="2025-10-28T15:42:20.917827" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '324', 'ETag': 'W/"144-SwNwPGFHOtIRtRD7ggXFwIyORnY"', 'Date': 'Tue, 28 Oct 2025 18:42:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69010e8cb07ad8ec5dda4eac","name":"New Test User","email":"teste_existente_1761676940@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThjYjA3YWQ4ZWM1ZGRhNGVhYyIsImlhdCI6MTc2MTY3Njk0MCwiZXhwIjoxNzYxNzYzMzQwfQ.AfatM6_Fjo3TcKoZxEK9Pw_g0Hz0y23My9l0hx0M_fM"}} 
 </msg>
<msg time="2025-10-28T15:42:20.917827" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:20.720372" elapsed="0.197455"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:20.917827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:20.917827" elapsed="0.000000"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:20.917827" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:20.917827" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:20.917827" level="INFO">${body} = {'email': 'teste_existente_1761676940@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:20.917827" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.042554" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"email": "teste_existente_1761676940@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-28T15:42:21.042554" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '324', 'ETag': 'W/"144-qZuoN2lnAOI3jU2GaaG+2TR/UrQ"', 'Date': 'Tue, 28 Oct 2025 18:42:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69010e8cb07ad8ec5dda4eac","name":"New Test User","email":"teste_existente_1761676940@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThjYjA3YWQ4ZWM1ZGRhNGVhYyIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.-24W9UW_dpWuJ3oWu2p4Va3AsiNnpTc1jKLSyyoOiGg"}} 
 </msg>
<msg time="2025-10-28T15:42:21.042554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:20.917827" elapsed="0.124727"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.042554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.042554" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.042554" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.042554" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.042554" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThjYjA3YWQ4ZWM1ZGRhNGVhYyIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.-24W9UW_dpWuJ3oWu2p4Va3AsiNnpTc1jKLSyyoOiGg</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-28T15:42:21.042554" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-28T15:42:21.042554" elapsed="0.000000"/>
</return>
<msg time="2025-10-28T15:42:21.042554" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThjYjA3YWQ4ZWM1ZGRhNGVhYyIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.-24W9UW_dpWuJ3oWu2p4Va3AsiNnpTc1jKLSyyoOiGg</msg>
<var>${token}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-28T15:42:20.917827" elapsed="0.124727"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-28T15:42:21.042554" elapsed="0.000000"/>
</return>
<msg time="2025-10-28T15:42:21.042554" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThjYjA3YWQ4ZWM1ZGRhNGVhYyIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.-24W9UW_dpWuJ3oWu2p4Va3AsiNnpTc1jKLSyyoOiGg</msg>
<var>${token}</var>
<arg>${existing_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Registra um novo usuário e faz login imediatamente.</doc>
<status status="PASS" start="2025-10-28T15:42:20.719371" elapsed="0.323183"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.042554" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.042554" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.042554" level="INFO">${body} = {'name': 'Duplicate User', 'email': 'teste_existente_1761676940@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>name=Duplicate User</arg>
<arg>email=${existing_email}</arg>
<arg>password=${NEW_USER_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.042554" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.105051" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '99'} 
 body=b'{"name": "Duplicate User", "email": "teste_existente_1761676940@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-28T15:42:21.105051" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '49', 'ETag': 'W/"31-WKEMg8zALB1Ko0WjUHi/6RBGHVc"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"User already exists"} 
 </msg>
<msg time="2025-10-28T15:42:21.105051" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.042554" elapsed="0.069461"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.112015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.112015" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.112015" level="INFO">Response da duplicação: {'success': False, 'message': 'User already exists'}</msg>
<arg>Response da duplicação: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:21.112015" elapsed="0.000000"/>
</kw>
<doc>Tenta cadastrar usuário com email já registrado - CORRIGIDO</doc>
<status status="PASS" start="2025-10-28T15:42:20.713786" elapsed="0.398229"/>
</test>
<test id="s1-s1-t2" name="TC002 - Cadastro com Dados Inválidos" line="21">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.112015" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-28T15:42:21.112015" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-28T15:42:21.112015" elapsed="0.000000"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.112015" level="INFO">${timestamp} = 1761676941</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-28T15:42:21.112015" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.118958" level="INFO">@{test_cases} = [ {'name': '', 'email': 'teste1761676941@email.com', 'password': '123456'} | {'name': 'Test User', 'email': 'email-invalido', 'password': '123456'} | {'name': 'Test User', 'email': 'teste17616769412@e...</msg>
<var>@{test_cases}</var>
<arg>${{{"name": "", "email": "teste${timestamp}@email.com", "password": "123456"}}}</arg>
<arg>${{{"name": "Test User", "email": "email-invalido", "password": "123456"}}}</arg>
<arg>${{{"name": "Test User", "email": "teste${timestamp}2@email.com", "password": "123"}}}</arg>
<arg>${{{"name": "Test User", "email": "", "password": "123456"}}}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-28T15:42:21.112015" elapsed="0.006943"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.122156" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.122156" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.188649" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '72'} 
 body=b'{"name": "", "email": "teste1761676941@email.com", "password": "123456"}' 
 </msg>
<msg time="2025-10-28T15:42:21.188649" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '84', 'ETag': 'W/"54-ngttIdQLZ4eaUkzci3s3HkS64jw"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"name":"Name is required"}} 
 </msg>
<msg time="2025-10-28T15:42:21.188649" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.122156" elapsed="0.066493"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.188649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.188649" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.195388" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'name': 'Name is required'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:21.188649" elapsed="0.006739"/>
</kw>
<var name="${test_case}">{'name': '', 'email': 'teste1761676941@email.com', 'password': '123456'}</var>
<status status="PASS" start="2025-10-28T15:42:21.118958" elapsed="0.076430"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.195388" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.195388" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.258083" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '70'} 
 body=b'{"name": "Test User", "email": "email-invalido", "password": "123456"}' 
 </msg>
<msg time="2025-10-28T15:42:21.258083" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '97', 'ETag': 'W/"61-Krv9gnZpw94ZcTkLQB5OMXVuBok"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"email":"Please provide a valid email"}} 
 </msg>
<msg time="2025-10-28T15:42:21.258083" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.196641" elapsed="0.061442"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.258083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.258083" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.258083" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'email': 'Please provide a valid email'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:21.258083" elapsed="0.000000"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': 'email-invalido', 'password': '123456'}</var>
<status status="PASS" start="2025-10-28T15:42:21.195388" elapsed="0.062695"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.258083" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.258083" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.324076" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"name": "Test User", "email": "teste17616769412@email.com", "password": "123"}' 
 </msg>
<msg time="2025-10-28T15:42:21.324076" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '115', 'ETag': 'W/"73-2kjRr4xheMpIIlrrmnuX+9CkBCA"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"password":"Password must be at least 6 characters long"}} 
 </msg>
<msg time="2025-10-28T15:42:21.324076" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.258083" elapsed="0.065993"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.326074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.324076" elapsed="0.001998"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.327074" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'password': 'Password must be at least 6 characters long'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:21.326074" elapsed="0.001000"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': 'teste17616769412@email.com', 'password': '123'}</var>
<status status="PASS" start="2025-10-28T15:42:21.258083" elapsed="0.068991"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.328076" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.327074" elapsed="0.001002"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.390769" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"name": "Test User", "email": "", "password": "123456"}' 
 </msg>
<msg time="2025-10-28T15:42:21.390769" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '86', 'ETag': 'W/"56-2AeNYjR8esCaF35ZnD5LBawWrNs"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"email":"Email is required"}} 
 </msg>
<msg time="2025-10-28T15:42:21.390769" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.328076" elapsed="0.062693"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.390769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.390769" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.390769" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'email': 'Email is required'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:21.390769" elapsed="0.000000"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': '', 'password': '123456'}</var>
<status status="PASS" start="2025-10-28T15:42:21.327074" elapsed="0.063695"/>
</iter>
<var>${test_case}</var>
<value>@{test_cases}</value>
<status status="PASS" start="2025-10-28T15:42:21.118958" elapsed="0.271811"/>
</for>
<doc>Testa registro com dados faltantes/inválidos - CORRIGIDO</doc>
<status status="PASS" start="2025-10-28T15:42:21.112015" elapsed="0.278754"/>
</test>
<test id="s1-s1-t3" name="TC003 - Login com Credenciais Inválidas" line="38">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.390769" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-28T15:42:21.390769" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-28T15:42:21.390769" elapsed="0.000000"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.397768" level="INFO">${timestamp} = 1761676941</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-28T15:42:21.397768" elapsed="0.000000"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.397768" level="INFO">${valid_email} = teste_login_invalido_1761676941@email.com</msg>
<var>${valid_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_login_invalido_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-28T15:42:21.397768" elapsed="0.000000"/>
</kw>
<kw name="Register And Perform Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.399037" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.399037" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.399037" level="INFO">${body} = {'email': 'teste_login_invalido_1761676941@email.com', 'password': 'senha456', 'name': 'New Test User', 'role': 'user # &lt;-- INCLUA ROLE NO BODY'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>name=${name}</arg>
<arg>role=${role} # &lt;-- INCLUA ROLE NO BODY</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.399037" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.584498" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '145'} 
 body=b'{"email": "teste_login_invalido_1761676941@email.com", "password": "senha456", "name": "New Test User", "role": "user # &lt;-- INCLUA ROLE NO BODY"}' 
 </msg>
<msg time="2025-10-28T15:42:21.584498" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '329', 'ETag': 'W/"149-3sKFJ+sknIurCbCJacy6WT7mm/I"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69010e8db07ad8ec5dda4eb9","name":"New Test User","email":"teste_login_invalido_1761676941@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViOSIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.aa0nvx1VS05RcXnpiAGke3U1hHv4HZ_qmFKcdzM2dns"}} 
 </msg>
<msg time="2025-10-28T15:42:21.584498" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.399037" elapsed="0.185461"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.584498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.584498" elapsed="0.000000"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.584498" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.584498" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.584498" level="INFO">${body} = {'email': 'teste_login_invalido_1761676941@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.584498" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.709975" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '78'} 
 body=b'{"email": "teste_login_invalido_1761676941@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-28T15:42:21.709975" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '329', 'ETag': 'W/"149-3sKFJ+sknIurCbCJacy6WT7mm/I"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69010e8db07ad8ec5dda4eb9","name":"New Test User","email":"teste_login_invalido_1761676941@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViOSIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.aa0nvx1VS05RcXnpiAGke3U1hHv4HZ_qmFKcdzM2dns"}} 
 </msg>
<msg time="2025-10-28T15:42:21.709975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.584498" elapsed="0.125477"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.712952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.709975" elapsed="0.002977"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.712952" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.712952" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.714959" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViOSIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.aa0nvx1VS05RcXnpiAGke3U1hHv4HZ_qmFKcdzM2dns</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-28T15:42:21.712952" elapsed="0.002007"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-28T15:42:21.714959" elapsed="0.000000"/>
</return>
<msg time="2025-10-28T15:42:21.714959" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViOSIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.aa0nvx1VS05RcXnpiAGke3U1hHv4HZ_qmFKcdzM2dns</msg>
<var>${token}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-28T15:42:21.584498" elapsed="0.130461"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-28T15:42:21.714959" elapsed="0.000000"/>
</return>
<msg time="2025-10-28T15:42:21.714959" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViOSIsImlhdCI6MTc2MTY3Njk0MSwiZXhwIjoxNzYxNzYzMzQxfQ.aa0nvx1VS05RcXnpiAGke3U1hHv4HZ_qmFKcdzM2dns</msg>
<var>${token}</var>
<arg>${valid_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Registra um novo usuário e faz login imediatamente.</doc>
<status status="PASS" start="2025-10-28T15:42:21.397768" elapsed="0.318503"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.716271" level="INFO">@{invalid_credentials} = [ {'email': 'naoexiste@email.com', 'password': 'senha456'} | {'email': 'teste_login_invalido_1761676941@email.com', 'password': 'senhaerrada'} ]</msg>
<var>@{invalid_credentials}</var>
<arg>${{{"email": "naoexiste@email.com", "password": "${NEW_USER_PASSWORD}"}}}</arg>
<arg>${{{"email": "${valid_email}", "password": "senhaerrada"}}}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-28T15:42:21.716271" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.716271" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.716271" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.778965" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"email": "naoexiste@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-28T15:42:21.778965" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-28T15:42:21.778965" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${credentials}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.716271" elapsed="0.062694"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.778965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.778965" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.778965" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.778965" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.778965" level="INFO">Response login inválido: {'success': False, 'message': 'Invalid email or password'}</msg>
<arg>Response login inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:21.778965" elapsed="0.000000"/>
</kw>
<var name="${credentials}">{'email': 'naoexiste@email.com', 'password': 'senha456'}</var>
<status status="PASS" start="2025-10-28T15:42:21.716271" elapsed="0.062694"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.778965" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.778965" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.903715" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '81'} 
 body=b'{"email": "teste_login_invalido_1761676941@email.com", "password": "senhaerrada"}' 
 </msg>
<msg time="2025-10-28T15:42:21.903715" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-28T15:42:21.903715" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${credentials}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.778965" elapsed="0.124750"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.909762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.903715" elapsed="0.007118"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.910833" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.910833" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.910833" level="INFO">Response login inválido: {'success': False, 'message': 'Invalid email or password'}</msg>
<arg>Response login inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:21.910833" elapsed="0.000000"/>
</kw>
<var name="${credentials}">{'email': 'teste_login_invalido_1761676941@email.com', 'password': 'senhaerrada'}</var>
<status status="PASS" start="2025-10-28T15:42:21.778965" elapsed="0.131868"/>
</iter>
<var>${credentials}</var>
<value>@{invalid_credentials}</value>
<status status="PASS" start="2025-10-28T15:42:21.716271" elapsed="0.194562"/>
</for>
<doc>Testa login com email/senha incorretos - CORRIGIDO</doc>
<status status="PASS" start="2025-10-28T15:42:21.390769" elapsed="0.520064"/>
</test>
<test id="s1-s1-t4" name="TC004 - Acesso ao Perfil com Token Inválido" line="57">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.910833" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-28T15:42:21.910833" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-28T15:42:21.910833" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.910833" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer token_invalido_123'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer token_invalido_123</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.910833" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.919492" level="INFO">GET Request : url=http://localhost:3000/api/v1/auth/me 
 path_url=/api/v1/auth/me 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer token_invalido_123'} 
 body=None 
 </msg>
<msg time="2025-10-28T15:42:21.919492" level="INFO">GET Response : url=http://localhost:3000/api/v1/auth/me 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '65', 'ETag': 'W/"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs"', 'Date': 'Tue, 28 Oct 2025 18:42:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Not authorized to access this route"} 
 </msg>
<msg time="2025-10-28T15:42:21.919492" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/me</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.910833" elapsed="0.008659"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.921105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.920028" elapsed="0.001077"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.922164" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:21.921105" elapsed="0.001059"/>
</kw>
<doc>Tenta acessar /auth/me com token inválido - CORRIGIDO</doc>
<status status="PASS" start="2025-10-28T15:42:21.910833" elapsed="0.011864"/>
</test>
<test id="s1-s1-t5" name="TC005 - Fluxo Completo de Autenticação" line="69">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:21.923748" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-28T15:42:21.923748" elapsed="0.000533"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-28T15:42:21.923228" elapsed="0.001053"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.924605" level="INFO">${timestamp} = 1761676941</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-28T15:42:21.924605" elapsed="0.000000"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.924605" level="INFO">${flow_email} = teste_fluxo_1761676941@email.com</msg>
<var>${flow_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_fluxo_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-28T15:42:21.924605" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.925368" level="INFO">${new_name} = Usuário Fluxo Completo</msg>
<var>${new_name}</var>
<arg>Usuário Fluxo Completo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-28T15:42:21.925368" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.925880" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.925368" elapsed="0.000512"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:21.925880" level="INFO">${register_body} = {'name': 'Usuario Inicial', 'email': 'teste_fluxo_1761676941@email.com', 'password': 'senha456'}</msg>
<var>${register_body}</var>
<arg>name=Usuario Inicial</arg>
<arg>email=${flow_email}</arg>
<arg>password=${NEW_USER_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:21.925880" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:22.105290" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"name": "Usuario Inicial", "email": "teste_fluxo_1761676941@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-28T15:42:22.105290" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '322', 'ETag': 'W/"142-z1b7TW5ZzfamcH0goG/0xjxNV34"', 'Date': 'Tue, 28 Oct 2025 18:42:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69010e8db07ad8ec5dda4ebf","name":"Usuario Inicial","email":"teste_fluxo_1761676941@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViZiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.4ABfIKl8Xy9x159k7g3EvkfPJCKu_UQ6kyAvc_Crkro"}} 
 </msg>
<msg time="2025-10-28T15:42:22.105290" level="INFO">${register_response} = &lt;Response [201]&gt;</msg>
<var>${register_response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${register_body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:21.926562" elapsed="0.178728"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.112030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${register_response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.112030" elapsed="0.000000"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.112030" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:22.112030" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.112030" level="INFO">${body} = {'email': 'teste_fluxo_1761676941@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:22.112030" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:22.237229" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '69'} 
 body=b'{"email": "teste_fluxo_1761676941@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-28T15:42:22.237229" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '322', 'ETag': 'W/"142-z1b7TW5ZzfamcH0goG/0xjxNV34"', 'Date': 'Tue, 28 Oct 2025 18:42:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69010e8db07ad8ec5dda4ebf","name":"Usuario Inicial","email":"teste_fluxo_1761676941@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViZiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.4ABfIKl8Xy9x159k7g3EvkfPJCKu_UQ6kyAvc_Crkro"}} 
 </msg>
<msg time="2025-10-28T15:42:22.237229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:22.112030" elapsed="0.125199"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.237229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.237229" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.237229" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.237229" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.244264" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViZiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.4ABfIKl8Xy9x159k7g3EvkfPJCKu_UQ6kyAvc_Crkro</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-28T15:42:22.237229" elapsed="0.007035"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-28T15:42:22.244264" elapsed="0.000000"/>
</return>
<msg time="2025-10-28T15:42:22.244264" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViZiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.4ABfIKl8Xy9x159k7g3EvkfPJCKu_UQ6kyAvc_Crkro</msg>
<var>${token}</var>
<arg>${flow_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-28T15:42:22.112030" elapsed="0.132234"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.244264" level="INFO">Length is 171.</msg>
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-28T15:42:22.244264" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.244264" level="INFO">${profile_headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViZiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.4ABfIKl8Xy...</msg>
<var>${profile_headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:22.244264" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:22.362309" level="INFO">GET Request : url=http://localhost:3000/api/v1/auth/me 
 path_url=/api/v1/auth/me 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViZiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.4ABfIKl8Xy9x159k7g3EvkfPJCKu_UQ6kyAvc_Crkro'} 
 body=None 
 </msg>
<msg time="2025-10-28T15:42:22.362309" level="INFO">GET Response : url=http://localhost:3000/api/v1/auth/me 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '140', 'ETag': 'W/"8c-ekAFKRJNW0dI3Sg5c/hN+cYTY2Q"', 'Date': 'Tue, 28 Oct 2025 18:42:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69010e8db07ad8ec5dda4ebf","name":"Usuario Inicial","email":"teste_fluxo_1761676941@email.com","role":"user"}} 
 </msg>
<msg time="2025-10-28T15:42:22.362309" level="INFO">${profile_response} = &lt;Response [200]&gt;</msg>
<var>${profile_response}</var>
<arg>cinema_api</arg>
<arg>/auth/me</arg>
<arg>headers=${profile_headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:22.244264" elapsed="0.118045"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.369041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${profile_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.362309" elapsed="0.006732"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${profile_response.json()}[data][email]</arg>
<arg>${flow_email}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.369041" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.369041" level="INFO">${update_body} = {'name': 'Usuário Fluxo Completo'}</msg>
<var>${update_body}</var>
<arg>name=${new_name}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:22.369041" elapsed="0.000000"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:22.549785" level="INFO">PUT Request : url=http://localhost:3000/api/v1/auth/profile 
 path_url=/api/v1/auth/profile 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViZiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.4ABfIKl8Xy9x159k7g3EvkfPJCKu_UQ6kyAvc_Crkro', 'Content-Length': '39'} 
 body=b'{"name": "Usu\\u00e1rio Fluxo Completo"}' 
 </msg>
<msg time="2025-10-28T15:42:22.549785" level="INFO">PUT Response : url=http://localhost:3000/api/v1/auth/profile 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '372', 'ETag': 'W/"174-g7V9q11Gn7bftzo3PlOBDrtyeCk"', 'Date': 'Tue, 28 Oct 2025 18:42:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"message":"Perfil atualizado com sucesso","data":{"_id":"69010e8db07ad8ec5dda4ebf","name":"Usuário Fluxo Completo","email":"teste_fluxo_1761676941@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDEwZThkYjA3YWQ4ZWM1ZGRhNGViZiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.4ABfIKl8Xy9x159k7g3EvkfPJCKu_UQ6kyAvc_Crkro"}} 
 </msg>
<msg time="2025-10-28T15:42:22.549785" level="INFO">${update_response} = &lt;Response [200]&gt;</msg>
<var>${update_response}</var>
<arg>cinema_api</arg>
<arg>/auth/profile</arg>
<arg>json=${update_body}</arg>
<arg>headers=${profile_headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:22.369041" elapsed="0.180744"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.556968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${update_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.549785" elapsed="0.007183"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${update_response.json()}[data][name]</arg>
<arg>${new_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.556968" level="INFO">Fluxo completo de autenticação executado com sucesso!</msg>
<arg>Fluxo completo de autenticação executado com sucesso!</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.000000"/>
</kw>
<doc>Testa fluxo completo: registro → login → perfil → update → CORRIGIDO</doc>
<status status="PASS" start="2025-10-28T15:42:21.922697" elapsed="0.634271"/>
</test>
<test id="s1-s1-t6" name="TC006 - Login com Credenciais do Raphael" line="97">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:22.556968" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.556968" level="INFO">${specific_email} = raphaelrates.dev@gmail.com</msg>
<var>${specific_email}</var>
<arg>raphaelrates.dev@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.556968" level="INFO">${specific_password} = 12345678</msg>
<var>${specific_password}</var>
<arg>12345678</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.000000"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.556968" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.563663" level="INFO">${body} = {'email': 'raphaelrates.dev@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-28T15:42:22.563663" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-28T15:42:22.681610" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '63'} 
 body=b'{"email": "raphaelrates.dev@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-28T15:42:22.681610" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '319', 'ETag': 'W/"13f-4l87aroenlgDhHx8uTptdN3JybQ"', 'Date': 'Tue, 28 Oct 2025 18:42:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"68fbbd1d5127a80a9600b456","name":"Raphael Susa Silva","email":"raphaelrates.dev@gmail.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.JiG1nPoUA4MRn2qOjAAXNdy6JMpx__IZ2ipkRsRlnlY"}} 
 </msg>
<msg time="2025-10-28T15:42:22.681610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-28T15:42:22.563663" elapsed="0.117947"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.688647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.688647" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.688647" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-28T15:42:22.688647" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.688647" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.JiG1nPoUA4MRn2qOjAAXNdy6JMpx__IZ2ipkRsRlnlY</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-28T15:42:22.688647" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-28T15:42:22.688647" elapsed="0.000000"/>
</return>
<msg time="2025-10-28T15:42:22.688647" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.JiG1nPoUA4MRn2qOjAAXNdy6JMpx__IZ2ipkRsRlnlY</msg>
<var>${token}</var>
<arg>${specific_email}</arg>
<arg>${specific_password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.131679"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.688647" level="INFO">Length is 171.</msg>
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-28T15:42:22.688647" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-28T15:42:22.688647" level="INFO">Login realizado com sucesso! Token obtido: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTY3Njk0MiwiZXhwIjoxNzYxNzYzMzQyfQ.JiG1nPoUA4MRn2qOjAAXNdy6JMpx__IZ2ipkRsRlnlY</msg>
<arg>Login realizado com sucesso! Token obtido: ${token}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-28T15:42:22.688647" elapsed="0.000000"/>
</kw>
<doc>Testa login com email: raphaelrates.dev@gmail.com e senha: 12345678</doc>
<status status="PASS" start="2025-10-28T15:42:22.556968" elapsed="0.131679"/>
</test>
<status status="PASS" start="2025-10-28T15:42:20.396852" elapsed="2.291795"/>
</suite>
<status status="PASS" start="2025-10-28T15:42:20.369214" elapsed="2.319433"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Server" id="s1" pass="6" fail="0" skip="0">Server</stat>
<stat name="Auth" id="s1-s1" pass="6" fail="0" skip="0">Server.Auth</stat>
</suite>
</statistics>
<errors>
<msg time="2025-10-28T15:42:20.702416" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 28: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-28T15:42:20.702416" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 43: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-28T15:42:20.709287" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 79: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-28T15:42:20.709287" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 89: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-28T15:42:20.709287" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 101: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
</errors>
</robot>
