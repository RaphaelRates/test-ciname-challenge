<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.7 on win32)" generated="2025-10-29T16:34:06.830579" rpa="false" schemaversion="5">
<suite id="s1" name="Server" source="C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\tests\server">
<suite id="s1-s1" name="Auth" source="C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\tests\server\auth.robot">
<test id="s1-s1-t1" name="TC001 - Cadastro de Usuário com Email Já Existente" line="9">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.154915" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T16:34:07.154915" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T16:34:07.153916" elapsed="0.000999"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.155927" level="INFO">${timestamp} = 1761766447</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:07.154915" elapsed="0.001012"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.155927" level="INFO">${existing_email} = teste_existente_1761766447@email.com</msg>
<var>${existing_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_existente_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-29T16:34:07.155927" elapsed="0.000000"/>
</kw>
<kw name="Register And Perform Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.156913" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.156913" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.156913" level="INFO">${body} = {'email': 'teste_existente_1761766447@email.com', 'password': 'senha456', 'name': 'New Test User', 'role': 'user # &lt;-- INCLUA ROLE NO BODY'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>name=${name}</arg>
<arg>role=${role} # &lt;-- INCLUA ROLE NO BODY</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.156913" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.369103" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '140'} 
 body=b'{"email": "teste_existente_1761766447@email.com", "password": "senha456", "name": "New Test User", "role": "user # &lt;-- INCLUA ROLE NO BODY"}' 
 </msg>
<msg time="2025-10-29T16:34:07.369103" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '324', 'ETag': 'W/"144-jWqwCCpj6U6ewX40fz588C3XEh4"', 'Date': 'Wed, 29 Oct 2025 19:34:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69026c2f735d793ab0538a79","name":"New Test User","email":"teste_existente_1761766447@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE3OSIsImlhdCI6MTc2MTc2NjQ0NywiZXhwIjoxNzYxODUyODQ3fQ.1U5nf1WnYhf3A2B-e2DU2fZ_OhBcZouY558rNGPbemQ"}} 
 </msg>
<msg time="2025-10-29T16:34:07.370206" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:07.156913" elapsed="0.213293"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.371213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:07.370206" elapsed="0.001007"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.372210" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.371213" elapsed="0.000997"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.372210" level="INFO">${body} = {'email': 'teste_existente_1761766447@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.372210" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.500080" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"email": "teste_existente_1761766447@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T16:34:07.500080" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '324', 'ETag': 'W/"144-jWqwCCpj6U6ewX40fz588C3XEh4"', 'Date': 'Wed, 29 Oct 2025 19:34:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69026c2f735d793ab0538a79","name":"New Test User","email":"teste_existente_1761766447@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE3OSIsImlhdCI6MTc2MTc2NjQ0NywiZXhwIjoxNzYxODUyODQ3fQ.1U5nf1WnYhf3A2B-e2DU2fZ_OhBcZouY558rNGPbemQ"}} 
 </msg>
<msg time="2025-10-29T16:34:07.500080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:07.372210" elapsed="0.127870"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.502031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:07.500080" elapsed="0.001951"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.503036" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:07.502031" elapsed="0.001005"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.504553" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE3OSIsImlhdCI6MTc2MTc2NjQ0NywiZXhwIjoxNzYxODUyODQ3fQ.1U5nf1WnYhf3A2B-e2DU2fZ_OhBcZouY558rNGPbemQ</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:07.503036" elapsed="0.001517"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:07.504553" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:07.504553" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE3OSIsImlhdCI6MTc2MTc2NjQ0NywiZXhwIjoxNzYxODUyODQ3fQ.1U5nf1WnYhf3A2B-e2DU2fZ_OhBcZouY558rNGPbemQ</msg>
<var>${token}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-29T16:34:07.371213" elapsed="0.133340"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:07.504553" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:07.504553" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE3OSIsImlhdCI6MTc2MTc2NjQ0NywiZXhwIjoxNzYxODUyODQ3fQ.1U5nf1WnYhf3A2B-e2DU2fZ_OhBcZouY558rNGPbemQ</msg>
<var>${token}</var>
<arg>${existing_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Registra um novo usuário e faz login imediatamente.</doc>
<status status="PASS" start="2025-10-29T16:34:07.155927" elapsed="0.348626"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.505261" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.505261" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.505914" level="INFO">${body} = {'name': 'Duplicate User', 'email': 'teste_existente_1761766447@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>name=Duplicate User</arg>
<arg>email=${existing_email}</arg>
<arg>password=${NEW_USER_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.505914" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.571554" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '99'} 
 body=b'{"name": "Duplicate User", "email": "teste_existente_1761766447@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T16:34:07.571554" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '49', 'ETag': 'W/"31-WKEMg8zALB1Ko0WjUHi/6RBGHVc"', 'Date': 'Wed, 29 Oct 2025 19:34:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"User already exists"} 
 </msg>
<msg time="2025-10-29T16:34:07.571554" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:07.505914" elapsed="0.065640"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.573555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:07.572559" elapsed="0.000996"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.574554" level="INFO">Response da duplicação: {'success': False, 'message': 'User already exists'}</msg>
<arg>Response da duplicação: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:07.573555" elapsed="0.000999"/>
</kw>
<doc>Tenta cadastrar usuário com email já registrado - CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T16:34:07.152920" elapsed="0.421634"/>
</test>
<test id="s1-s1-t2" name="TC002 - Cadastro com Dados Inválidos" line="20">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.576555" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T16:34:07.576555" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T16:34:07.575554" elapsed="0.001001"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.576555" level="INFO">${timestamp} = 1761766447</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:07.576555" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.580450" level="INFO">@{test_cases} = [ {'name': '', 'email': 'teste1761766447@email.com', 'password': '123456'} | {'name': 'Test User', 'email': 'email-invalido', 'password': '123456'} | {'name': 'Test User', 'email': 'teste17617664472@e...</msg>
<var>@{test_cases}</var>
<arg>${{{"name": "", "email": "teste${timestamp}@email.com", "password": "123456"}}}</arg>
<arg>${{{"name": "Test User", "email": "email-invalido", "password": "123456"}}}</arg>
<arg>${{{"name": "Test User", "email": "teste${timestamp}2@email.com", "password": "123"}}}</arg>
<arg>${{{"name": "Test User", "email": "", "password": "123456"}}}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-29T16:34:07.577351" elapsed="0.003099"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.581444" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.581444" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.647913" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '72'} 
 body=b'{"name": "", "email": "teste1761766447@email.com", "password": "123456"}' 
 </msg>
<msg time="2025-10-29T16:34:07.647913" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '84', 'ETag': 'W/"54-ngttIdQLZ4eaUkzci3s3HkS64jw"', 'Date': 'Wed, 29 Oct 2025 19:34:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"name":"Name is required"}} 
 </msg>
<msg time="2025-10-29T16:34:07.647913" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:07.581444" elapsed="0.066469"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.649919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:07.647913" elapsed="0.002006"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.650919" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'name': 'Name is required'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:07.649919" elapsed="0.001000"/>
</kw>
<var name="${test_case}">{'name': '', 'email': 'teste1761766447@email.com', 'password': '123456'}</var>
<status status="PASS" start="2025-10-29T16:34:07.580450" elapsed="0.070469"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.650919" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.650919" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.715222" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '70'} 
 body=b'{"name": "Test User", "email": "email-invalido", "password": "123456"}' 
 </msg>
<msg time="2025-10-29T16:34:07.715222" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '97', 'ETag': 'W/"61-Krv9gnZpw94ZcTkLQB5OMXVuBok"', 'Date': 'Wed, 29 Oct 2025 19:34:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"email":"Please provide a valid email"}} 
 </msg>
<msg time="2025-10-29T16:34:07.715222" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:07.650919" elapsed="0.064303"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.716221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:07.715222" elapsed="0.002115"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.718351" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'email': 'Please provide a valid email'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:07.717337" elapsed="0.001014"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': 'email-invalido', 'password': '123456'}</var>
<status status="PASS" start="2025-10-29T16:34:07.650919" elapsed="0.067432"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.718351" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.718351" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.785734" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"name": "Test User", "email": "teste17617664472@email.com", "password": "123"}' 
 </msg>
<msg time="2025-10-29T16:34:07.785734" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '115', 'ETag': 'W/"73-2kjRr4xheMpIIlrrmnuX+9CkBCA"', 'Date': 'Wed, 29 Oct 2025 19:34:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"password":"Password must be at least 6 characters long"}} 
 </msg>
<msg time="2025-10-29T16:34:07.785734" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:07.718351" elapsed="0.067383"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.786842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:07.785734" elapsed="0.001108"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.787838" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'password': 'Password must be at least 6 characters long'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:07.786842" elapsed="0.000996"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': 'teste17617664472@email.com', 'password': '123'}</var>
<status status="PASS" start="2025-10-29T16:34:07.718351" elapsed="0.069487"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.788842" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.787838" elapsed="0.001004"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.855223" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"name": "Test User", "email": "", "password": "123456"}' 
 </msg>
<msg time="2025-10-29T16:34:07.855223" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '86', 'ETag': 'W/"56-2AeNYjR8esCaF35ZnD5LBawWrNs"', 'Date': 'Wed, 29 Oct 2025 19:34:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"email":"Email is required"}} 
 </msg>
<msg time="2025-10-29T16:34:07.855223" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:07.788842" elapsed="0.066381"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.857291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:07.855223" elapsed="0.002068"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.858362" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'email': 'Email is required'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:07.857291" elapsed="0.001071"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': '', 'password': '123456'}</var>
<status status="PASS" start="2025-10-29T16:34:07.787838" elapsed="0.070524"/>
</iter>
<var>${test_case}</var>
<value>@{test_cases}</value>
<status status="PASS" start="2025-10-29T16:34:07.580450" elapsed="0.277912"/>
</for>
<doc>Testa registro com dados faltantes/inválidos - CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T16:34:07.575554" elapsed="0.282808"/>
</test>
<test id="s1-s1-t3" name="TC003 - Login com Credenciais Inválidas" line="37">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:07.860303" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T16:34:07.860303" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T16:34:07.859286" elapsed="0.001017"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.860303" level="INFO">${timestamp} = 1761766447</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:07.860303" elapsed="0.000000"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.861284" level="INFO">${valid_email} = teste_login_invalido_1761766447@email.com</msg>
<var>${valid_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_login_invalido_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-29T16:34:07.860303" elapsed="0.000981"/>
</kw>
<kw name="Register And Perform Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.861284" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.861284" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:07.862288" level="INFO">${body} = {'email': 'teste_login_invalido_1761766447@email.com', 'password': 'senha456', 'name': 'New Test User', 'role': 'user # &lt;-- INCLUA ROLE NO BODY'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>name=${name}</arg>
<arg>role=${role} # &lt;-- INCLUA ROLE NO BODY</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:07.861284" elapsed="0.001004"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.067760" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '145'} 
 body=b'{"email": "teste_login_invalido_1761766447@email.com", "password": "senha456", "name": "New Test User", "role": "user # &lt;-- INCLUA ROLE NO BODY"}' 
 </msg>
<msg time="2025-10-29T16:34:08.067760" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '329', 'ETag': 'W/"149-yrNUZInbhvYRz2gOMWMj+cJOL9M"', 'Date': 'Wed, 29 Oct 2025 19:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69026c2f735d793ab0538a86","name":"New Test User","email":"teste_login_invalido_1761766447@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE4NiIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.uFeG3F2RqlK_g6qSJHO513NjUrPUAxdfotvkSjmKP10"}} 
 </msg>
<msg time="2025-10-29T16:34:08.067760" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:07.862288" elapsed="0.205472"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.069755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.068761" elapsed="0.000994"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.070453" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.070453" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.070453" level="INFO">${body} = {'email': 'teste_login_invalido_1761766447@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.070453" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.199560" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '78'} 
 body=b'{"email": "teste_login_invalido_1761766447@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T16:34:08.199560" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '329', 'ETag': 'W/"149-yrNUZInbhvYRz2gOMWMj+cJOL9M"', 'Date': 'Wed, 29 Oct 2025 19:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69026c2f735d793ab0538a86","name":"New Test User","email":"teste_login_invalido_1761766447@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE4NiIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.uFeG3F2RqlK_g6qSJHO513NjUrPUAxdfotvkSjmKP10"}} 
 </msg>
<msg time="2025-10-29T16:34:08.199560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:08.070453" elapsed="0.129107"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.200559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.199560" elapsed="0.001999"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.202529" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.201559" elapsed="0.000970"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.203604" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE4NiIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.uFeG3F2RqlK_g6qSJHO513NjUrPUAxdfotvkSjmKP10</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:08.202529" elapsed="0.001075"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:08.203604" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:08.203604" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE4NiIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.uFeG3F2RqlK_g6qSJHO513NjUrPUAxdfotvkSjmKP10</msg>
<var>${token}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-29T16:34:08.069755" elapsed="0.133849"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:08.203604" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:08.203604" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzJmNzM1ZDc5M2FiMDUzOGE4NiIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.uFeG3F2RqlK_g6qSJHO513NjUrPUAxdfotvkSjmKP10</msg>
<var>${token}</var>
<arg>${valid_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Registra um novo usuário e faz login imediatamente.</doc>
<status status="PASS" start="2025-10-29T16:34:07.861284" elapsed="0.342320"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.205604" level="INFO">@{invalid_credentials} = [ {'email': 'naoexiste@email.com', 'password': 'senha456'} | {'email': 'teste_login_invalido_1761766447@email.com', 'password': 'senhaerrada'} ]</msg>
<var>@{invalid_credentials}</var>
<arg>${{{"email": "naoexiste@email.com", "password": "${NEW_USER_PASSWORD}"}}}</arg>
<arg>${{{"email": "${valid_email}", "password": "senhaerrada"}}}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-29T16:34:08.204605" elapsed="0.000999"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.206603" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.205604" elapsed="0.000999"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.275231" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"email": "naoexiste@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T16:34:08.275231" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 19:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T16:34:08.275231" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${credentials}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:08.206603" elapsed="0.068628"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.276233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.275231" elapsed="0.001002"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.278231" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.277232" elapsed="0.000999"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.279231" level="INFO">Response login inválido: {'success': False, 'message': 'Invalid email or password'}</msg>
<arg>Response login inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:08.278231" elapsed="0.001000"/>
</kw>
<var name="${credentials}">{'email': 'naoexiste@email.com', 'password': 'senha456'}</var>
<status status="PASS" start="2025-10-29T16:34:08.205604" elapsed="0.073627"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.279231" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.279231" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.404890" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '81'} 
 body=b'{"email": "teste_login_invalido_1761766447@email.com", "password": "senhaerrada"}' 
 </msg>
<msg time="2025-10-29T16:34:08.404890" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 19:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T16:34:08.404890" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${credentials}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:08.279231" elapsed="0.125659"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.405889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.404890" elapsed="0.000999"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.406888" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.405889" elapsed="0.000999"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.407888" level="INFO">Response login inválido: {'success': False, 'message': 'Invalid email or password'}</msg>
<arg>Response login inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:08.406888" elapsed="0.001000"/>
</kw>
<var name="${credentials}">{'email': 'teste_login_invalido_1761766447@email.com', 'password': 'senhaerrada'}</var>
<status status="PASS" start="2025-10-29T16:34:08.279231" elapsed="0.128657"/>
</iter>
<var>${credentials}</var>
<value>@{invalid_credentials}</value>
<status status="PASS" start="2025-10-29T16:34:08.205604" elapsed="0.202284"/>
</for>
<doc>Testa login com email/senha incorretos - CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T16:34:07.859286" elapsed="0.549602"/>
</test>
<test id="s1-s1-t4" name="TC004 - Acesso ao Perfil com Token Inválido" line="56">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.410737" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T16:34:08.410737" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T16:34:08.410393" elapsed="0.000344"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.410737" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer token_invalido_123'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer token_invalido_123</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.410737" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.413982" level="INFO">GET Request : url=http://localhost:3000/api/v1/auth/me 
 path_url=/api/v1/auth/me 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer token_invalido_123'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:08.413982" level="INFO">GET Response : url=http://localhost:3000/api/v1/auth/me 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '65', 'ETag': 'W/"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs"', 'Date': 'Wed, 29 Oct 2025 19:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Not authorized to access this route"} 
 </msg>
<msg time="2025-10-29T16:34:08.413982" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/me</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:08.410737" elapsed="0.004243"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.416083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.415052" elapsed="0.001031"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.417084" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.416083" elapsed="0.001001"/>
</kw>
<doc>Tenta acessar /auth/me com token inválido - CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T16:34:08.409887" elapsed="0.007197"/>
</test>
<test id="s1-s1-t5" name="TC005 - Fluxo Completo de Autenticação" line="68">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.418789" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T16:34:08.417750" elapsed="0.001039"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T16:34:08.417750" elapsed="0.001039"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.419788" level="INFO">${timestamp} = 1761766448</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:08.418789" elapsed="0.000999"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.419788" level="INFO">${flow_email} = teste_fluxo_1761766448@email.com</msg>
<var>${flow_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_fluxo_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-29T16:34:08.419788" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.419788" level="INFO">${new_name} = Usuário Fluxo Completo</msg>
<var>${new_name}</var>
<arg>Usuário Fluxo Completo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:08.419788" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.419788" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.419788" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.420786" level="INFO">${register_body} = {'name': 'Usuario Inicial', 'email': 'teste_fluxo_1761766448@email.com', 'password': 'senha456'}</msg>
<var>${register_body}</var>
<arg>name=Usuario Inicial</arg>
<arg>email=${flow_email}</arg>
<arg>password=${NEW_USER_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.420786" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.616980" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"name": "Usuario Inicial", "email": "teste_fluxo_1761766448@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T16:34:08.616980" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '322', 'ETag': 'W/"142-hulSwO+UGF1SR5uUWnBO3nB0iJs"', 'Date': 'Wed, 29 Oct 2025 19:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69026c30735d793ab0538a8c","name":"Usuario Inicial","email":"teste_fluxo_1761766448@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzMwNzM1ZDc5M2FiMDUzOGE4YyIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.1KIs3RxfGjzh0e0r1QtrKUu34pUdKuK--l98Ur4v_2I"}} 
 </msg>
<msg time="2025-10-29T16:34:08.616980" level="INFO">${register_response} = &lt;Response [201]&gt;</msg>
<var>${register_response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${register_body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:08.420786" elapsed="0.196194"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.618982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${register_response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.617979" elapsed="0.001003"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.618982" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.618982" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.620132" level="INFO">${body} = {'email': 'teste_fluxo_1761766448@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.618982" elapsed="0.001150"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.746220" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '69'} 
 body=b'{"email": "teste_fluxo_1761766448@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T16:34:08.746220" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '322', 'ETag': 'W/"142-hulSwO+UGF1SR5uUWnBO3nB0iJs"', 'Date': 'Wed, 29 Oct 2025 19:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69026c30735d793ab0538a8c","name":"Usuario Inicial","email":"teste_fluxo_1761766448@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzMwNzM1ZDc5M2FiMDUzOGE4YyIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.1KIs3RxfGjzh0e0r1QtrKUu34pUdKuK--l98Ur4v_2I"}} 
 </msg>
<msg time="2025-10-29T16:34:08.746220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:08.620132" elapsed="0.126088"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.747215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.746220" elapsed="0.001994"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.749214" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.748214" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.750214" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzMwNzM1ZDc5M2FiMDUzOGE4YyIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.1KIs3RxfGjzh0e0r1QtrKUu34pUdKuK--l98Ur4v_2I</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:08.749214" elapsed="0.001000"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:08.750214" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:08.750214" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzMwNzM1ZDc5M2FiMDUzOGE4YyIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.1KIs3RxfGjzh0e0r1QtrKUu34pUdKuK--l98Ur4v_2I</msg>
<var>${token}</var>
<arg>${flow_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-29T16:34:08.618982" elapsed="0.131232"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.751216" level="INFO">Length is 171.</msg>
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-29T16:34:08.751216" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.751216" level="INFO">${profile_headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzMwNzM1ZDc5M2FiMDUzOGE4YyIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.1KIs3RxfGj...</msg>
<var>${profile_headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.751216" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:08.878008" level="INFO">GET Request : url=http://localhost:3000/api/v1/auth/me 
 path_url=/api/v1/auth/me 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzMwNzM1ZDc5M2FiMDUzOGE4YyIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.1KIs3RxfGjzh0e0r1QtrKUu34pUdKuK--l98Ur4v_2I'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:08.878008" level="INFO">GET Response : url=http://localhost:3000/api/v1/auth/me 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '140', 'ETag': 'W/"8c-2KTUUGqk1m1SfOHKtrCRHoInegI"', 'Date': 'Wed, 29 Oct 2025 19:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69026c30735d793ab0538a8c","name":"Usuario Inicial","email":"teste_fluxo_1761766448@email.com","role":"user"}} 
 </msg>
<msg time="2025-10-29T16:34:08.878998" level="INFO">${profile_response} = &lt;Response [200]&gt;</msg>
<var>${profile_response}</var>
<arg>cinema_api</arg>
<arg>/auth/me</arg>
<arg>headers=${profile_headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:08.751216" elapsed="0.127782"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.879996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${profile_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.878998" elapsed="0.000998"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${profile_response.json()}[data][email]</arg>
<arg>${flow_email}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:08.879996" elapsed="0.001000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:08.881995" level="INFO">${update_body} = {'name': 'Usuário Fluxo Completo'}</msg>
<var>${update_body}</var>
<arg>name=${new_name}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:08.880996" elapsed="0.000999"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:09.075356" level="INFO">PUT Request : url=http://localhost:3000/api/v1/auth/profile 
 path_url=/api/v1/auth/profile 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzMwNzM1ZDc5M2FiMDUzOGE4YyIsImlhdCI6MTc2MTc2NjQ0OCwiZXhwIjoxNzYxODUyODQ4fQ.1KIs3RxfGjzh0e0r1QtrKUu34pUdKuK--l98Ur4v_2I', 'Content-Length': '39'} 
 body=b'{"name": "Usu\\u00e1rio Fluxo Completo"}' 
 </msg>
<msg time="2025-10-29T16:34:09.075356" level="INFO">PUT Response : url=http://localhost:3000/api/v1/auth/profile 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '372', 'ETag': 'W/"174-il832q4LP0MfUjxTStGdZIQaXC8"', 'Date': 'Wed, 29 Oct 2025 19:34:09 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"message":"Perfil atualizado com sucesso","data":{"_id":"69026c30735d793ab0538a8c","name":"Usuário Fluxo Completo","email":"teste_fluxo_1761766448@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI2YzMwNzM1ZDc5M2FiMDUzOGE4YyIsImlhdCI6MTc2MTc2NjQ0OSwiZXhwIjoxNzYxODUyODQ5fQ.b_-91dy1yK4H2GDCkTyuQestqudG1v72b7Va6IwhoXM"}} 
 </msg>
<msg time="2025-10-29T16:34:09.075356" level="INFO">${update_response} = &lt;Response [200]&gt;</msg>
<var>${update_response}</var>
<arg>cinema_api</arg>
<arg>/auth/profile</arg>
<arg>json=${update_body}</arg>
<arg>headers=${profile_headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:08.881995" elapsed="0.193361"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.077351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${update_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:09.075356" elapsed="0.001995"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${update_response.json()}[data][name]</arg>
<arg>${new_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:09.077351" elapsed="0.001140"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.078491" level="INFO">Fluxo completo de autenticação executado com sucesso!</msg>
<arg>Fluxo completo de autenticação executado com sucesso!</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:09.078491" elapsed="0.000994"/>
</kw>
<doc>Testa fluxo completo: registro → login → perfil → update → CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T16:34:08.417750" elapsed="0.661735"/>
</test>
<test id="s1-s1-t6" name="TC006 - Login com Credenciais do Raphael" line="96">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:09.080484" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T16:34:09.080484" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T16:34:09.080484" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.080484" level="INFO">${specific_email} = raphaelrates.dev@gmail.com</msg>
<var>${specific_email}</var>
<arg>raphaelrates.dev@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:09.080484" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.081492" level="INFO">${specific_password} = 12345678</msg>
<var>${specific_password}</var>
<arg>12345678</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:09.081492" elapsed="0.000000"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.081492" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:09.081492" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.081492" level="INFO">${body} = {'email': 'raphaelrates.dev@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:09.081492" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:09.210402" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '63'} 
 body=b'{"email": "raphaelrates.dev@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:09.210402" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '319', 'ETag': 'W/"13f-7m+ZSFHiUTAMV/b0H83ngYkdgRE"', 'Date': 'Wed, 29 Oct 2025 19:34:09 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"68fbbd1d5127a80a9600b456","name":"Raphael Susa Silva","email":"raphaelrates.dev@gmail.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTc2NjQ0OSwiZXhwIjoxNzYxODUyODQ5fQ.e037kVDbew36GRg_9z0V2Mnnc_jWoBL9IXLZoukboOg"}} 
 </msg>
<msg time="2025-10-29T16:34:09.210402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:09.082492" elapsed="0.127910"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.211396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:09.210402" elapsed="0.000994"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.212911" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:09.211396" elapsed="0.001515"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.213927" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTc2NjQ0OSwiZXhwIjoxNzYxODUyODQ5fQ.e037kVDbew36GRg_9z0V2Mnnc_jWoBL9IXLZoukboOg</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:09.212911" elapsed="0.001016"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:09.213927" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:09.213927" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTc2NjQ0OSwiZXhwIjoxNzYxODUyODQ5fQ.e037kVDbew36GRg_9z0V2Mnnc_jWoBL9IXLZoukboOg</msg>
<var>${token}</var>
<arg>${specific_email}</arg>
<arg>${specific_password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-29T16:34:09.081492" elapsed="0.132435"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.213927" level="INFO">Length is 171.</msg>
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-29T16:34:09.213927" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.214925" level="INFO">Login realizado com sucesso! Token obtido: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTc2NjQ0OSwiZXhwIjoxNzYxODUyODQ5fQ.e037kVDbew36GRg_9z0V2Mnnc_jWoBL9IXLZoukboOg</msg>
<arg>Login realizado com sucesso! Token obtido: ${token}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T16:34:09.214925" elapsed="0.000000"/>
</kw>
<doc>Testa login com email: raphaelrates.dev@gmail.com e senha: 12345678</doc>
<status status="PASS" start="2025-10-29T16:34:09.079485" elapsed="0.135440"/>
</test>
<status status="PASS" start="2025-10-29T16:34:06.857544" elapsed="2.358777"/>
</suite>
<suite id="s1-s2" name="Theater" source="C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\tests\server\theater.robot">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:09.660950" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T16:34:09.659974" elapsed="0.000976"/>
</kw>
<kw name="Setup Test Environment" owner="setup">
<kw name="Create Test Users" owner="setup">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.661959" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:09.661959" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:09.789666" level="INFO">POST Request : url=http://localhost:3000/api/v1/setup/test-users 
 path_url=/api/v1/setup/test-users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:09.789666" level="INFO">POST Response : url=http://localhost:3000/api/v1/setup/test-users 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '167', 'ETag': 'W/"a7-Bosz+W/Q6GA0UjzJOObg/A7XvX4"', 'Date': 'Wed, 29 Oct 2025 19:34:09 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"message":"All test users already exist","data":{"existing":[{"email":"test@example.com","role":"user"},{"email":"admin@example.com","role":"admin"}]}} 
 </msg>
<msg time="2025-10-29T16:34:09.790676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/setup/test-users</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:09.661959" elapsed="0.128717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:09.790676" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:09.790676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<doc>Cria usuários de teste via endpoint /setup/test-users</doc>
<status status="PASS" start="2025-10-29T16:34:09.661959" elapsed="0.128717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:09.790676" elapsed="0.000000"/>
</return>
<doc>Cria ambiente de teste com usuários padrão</doc>
<status status="PASS" start="2025-10-29T16:34:09.660950" elapsed="0.129726"/>
</kw>
<arg>Create Session</arg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>AND</arg>
<arg>Setup Test Environment</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2025-10-29T16:34:09.659974" elapsed="0.130702"/>
</kw>
<test id="s1-s2-t1" name="Get All Theaters Successfully" line="16">
<kw name="Get All Theaters" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:09.859652" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:09.859652" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '9028', 'ETag': 'W/"2344-cWnpFrtci0dAtFME8YTg8QfrD7U"', 'Date': 'Wed, 29 Oct 2025 19:34:09 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"count":42,"data":[{"_id":"68f7ec484bc189e5600e8f8a","name":"Theater 1","capacity":120,"type":"standard","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8a"},{"_id":"68f7ec484bc189e5600e8f8b","name":"Theater 2","capacity":80,"type":"3D","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8b"},{"_id":"68f7ec484bc189e5600e8f8c","name":"Theater 3","capacity":60,"type":"IMAX","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8c"},{"_id":"690263c1735d793ab05388fa","name":"Theater_1761764289_5","capacity":87,"type":"standard","createdAt":"2025-10-29T18:58:09.918Z","updatedAt":"2025-10-29T18:58:09.918Z","__v":0,"id":"690263c1735d793ab05388fa"},{"_id":"690263c2735d793ab05388fe","name":"Theater_1761764290_3","capacity":106,"type":"standard","createdAt":"2025-10-29T18:58:10.206Z","updatedAt":"2025-10-29T18:58:10.206Z","__v":0,"id":"690263c2735d793ab05388fe"},{"_id":"690263c2735d793ab0538905","name":"Duplicate Theater","capacity":196,"type":"standard","createdAt":"2025-10-29T18:58:10.708Z","updatedAt":"2025-10-29T18:58:10.708Z","__v":0,"id":"690263c2735d793ab0538905"},{"_id":"690263c3735d793ab053890d","name":"Theater_1761764291_2","capacity":87,"type":"standard","createdAt":"2025-10-29T18:58:11.253Z","updatedAt":"2025-10-29T18:58:11.253Z","__v":0,"id":"690263c3735d793ab053890d"},{"_id":"690263c3735d793ab0538911","name":"Theater_1761764291_9","capacity":85,"type":"standard","createdAt":"2025-10-29T18:58:11.538Z","updatedAt":"2025-10-29T18:58:11.538Z","__v":0,"id":"690263c3735d793ab0538911"},{"_id":"690263c4735d793ab053891b","name":"Theater_1761764292_5","capacity":231,"type":"standard","createdAt":"2025-10-29T18:58:12.319Z","updatedAt":"2025-10-29T18:58:12.319Z","__v":0,"id":"690263c4735d793ab053891b"},{"_id":"690263c4735d793ab0538921","name":"Theater_1761764292_6","capacity":67,"type":"standard","createdAt":"2025-10-29T18:58:12.816Z","updatedAt":"2025-10-29T18:58:12.816Z","__v":0,"id":"690263c4735d793ab0538921"},{"_id":"690263c5735d793ab0538925","name":"Theater_1761764292_1","capacity":10,"type":"standard","createdAt":"2025-10-29T18:58:13.120Z","updatedAt":"2025-10-29T18:58:13.120Z","__v":0,"id":"690263c5735d793ab0538925"},{"_id":"69026947735d793ab053892a","name":"meu","capacity":2,"type":"standard","createdAt":"2025-10-29T19:21:43.944Z","updatedAt":"2025-10-29T19:21:43.944Z","__v":0,"id":"69026947735d793ab053892a"},{"_id":"69026ab9735d793ab0538952","name":"Theater_1761766073_5","capacity":219,"type":"standard","createdAt":"2025-10-29T19:27:53.887Z","updatedAt":"2025-10-29T19:27:53.887Z","__v":0,"id":"69026ab9735d793ab0538952"},{"_id":"69026abb735d793ab0538965","name":"Theater_1761766074_8","capacity":271,"type":"standard","createdAt":"2025-10-29T19:27:55.196Z","updatedAt":"2025-10-29T19:27:55.196Z","__v":0,"id":"69026abb735d793ab0538965"},{"_id":"69026abb735d793ab0538969","name":"Theater_1761766075_7","capacity":89,"type":"standard","createdAt":"2025-10-29T19:27:55.478Z","updatedAt":"2025-10-29T19:27:55.478Z","__v":0,"id":"69026abb735d793ab0538969"},{"_id":"69026abb735d793ab053896f","name":"Theater_1761766075_2","capacity":141,"type":"standard","createdAt":"2025-10-29T19:27:55.975Z","updatedAt":"2025-10-29T19:27:55.975Z","__v":0,"id":"69026abb735d793ab053896f"},{"_id":"69026abc735d793ab0538973","name":"Theater_1761766076_8","capacity":172,"type":"standard","createdAt":"2025-10-29T19:27:56.273Z","updatedAt":"2025-10-29T19:27:56.273Z","__v":0,"id":"69026abc735d793ab0538973"},{"_id":"69026abc735d793ab0538979","name":"Theater_1761766076_4","capacity":109,"type":"standard","createdAt":"2025-10-29T19:27:56.787Z","updatedAt":"2025-10-29T19:27:56.787Z","__v":0,"id":"69026abc735d793ab0538979"},{"_id":"69026abd735d793ab053897d","name":"Theater_1761766076_7","capacity":10,"type":"standard","createdAt":"2025-10-29T19:27:57.077Z","updatedAt":"2025-10-29T19:27:57.077Z","__v":0,"id":"69026abd735d793ab053897d"},{"_id":"69026bb0735d793ab05389a5","name":"Theater_1761766320_5","capacity":156,"type":"standard","createdAt":"2025-10-29T19:32:00.900Z","updatedAt":"2025-10-29T19:32:00.900Z","__v":0,"id":"69026bb0735d793ab05389a5"},{"_id":"69026bb1735d793ab05389a9","name":"Theater_1761766320_7","capacity":70,"type":"standard","createdAt":"2025-10-29T19:32:01.200Z","updatedAt":"2025-10-29T19:32:01.200Z","__v":0,"id":"69026bb1735d793ab05389a9"},{"_id":"69026bb2735d793ab05389b8","name":"Theater_1761766322_7","capacity":186,"type":"standard","createdAt":"2025-10-29T19:32:02.319Z","updatedAt":"2025-10-29T19:32:02.319Z","__v":0,"id":"69026bb2735d793ab05389b8"},{"_id":"69026bb2735d793ab05389bc","name":"Theater_1761766322_1","capacity":289,"type":"standard","createdAt":"2025-10-29T19:32:02.619Z","updatedAt":"2025-10-29T19:32:02.619Z","__v":0,"id":"69026bb2735d793ab05389bc"},{"_id":"69026bb3735d793ab05389c6","name":"Theater_1761766323_6","capacity":187,"type":"standard","createdAt":"2025-10-29T19:32:03.469Z","updatedAt":"2025-10-29T19:32:03.469Z","__v":0,"id":"69026bb3735d793ab05389c6"},{"_id":"69026bb4735d793ab05389cc","name":"Theater_1761766323_7","capacity":93,"type":"standard","createdAt":"2025-10-29T19:32:04.026Z","updatedAt":"2025-10-29T19:32:04.026Z","__v":0,"id":"69026bb4735d793ab05389cc"},{"_id":"69026bb4735d793ab05389d0","name":"Theater_1761766324_8","capacity":10,"type":"standard","createdAt":"2025-10-29T19:32:04.359Z","updatedAt":"2025-10-29T19:32:04.359Z","__v":0,"id":"69026bb4735d793ab05389d0"},{"_id":"69026bec735d793ab05389f8","name":"Theater_1761766379_2","capacity":207,"type":"standard","createdAt":"2025-10-29T19:33:00.088Z","updatedAt":"2025-10-29T19:33:00.088Z","__v":0,"id":"69026bec735d793ab05389f8"},{"_id":"69026bec735d793ab05389fc","name":"Theater_1761766380_2","capacity":231,"type":"standard","createdAt":"2025-10-29T19:33:00.376Z","updatedAt":"2025-10-29T19:33:00.376Z","__v":0,"id":"69026bec735d793ab05389fc"},{"_id":"69026bed735d793ab0538a0b","name":"Theater_1761766381_10","capacity":242,"type":"standard","createdAt":"2025-10-29T19:33:01.428Z","updatedAt":"2025-10-29T19:33:01.428Z","__v":0,"id":"69026bed735d793ab0538a0b"},{"_id":"69026bed735d793ab0538a0f","name":"Theater_1761766381_9","capacity":281,"type":"standard","createdAt":"2025-10-29T19:33:01.715Z","updatedAt":"2025-10-29T19:33:01.715Z","__v":0,"id":"69026bed735d793ab0538a0f"},{"_id":"69026bee735d793ab0538a15","name":"Theater_1761766382_1","capacity":156,"type":"standard","createdAt":"2025-10-29T19:33:02.219Z","updatedAt":"2025-10-29T19:33:02.219Z","__v":0,"id":"69026bee735d793ab0538a15"},{"_id":"69026bee735d793ab0538a19","name":"Theater_1761766382_9","capacity":141,"type":"standard","createdAt":"2025-10-29T19:33:02.516Z","updatedAt":"2025-10-29T19:33:02.516Z","__v":0,"id":"69026bee735d793ab0538a19"},{"_id":"69026bef735d793ab0538a1f","name":"Theater_1761766382_5","capacity":91,"type":"standard","createdAt":"2025-10-29T19:33:03.011Z","updatedAt":"2025-10-29T19:33:03.011Z","__v":0,"id":"69026bef735d793ab0538a1f"},{"_id":"69026bef735d793ab0538a23","name":"Theater_1761766383_4","capacity":10,"type":"standard","createdAt":"2025-10-29T19:33:03.313Z","updatedAt":"2025-10-29T19:33:03.313Z","__v":0,"id":"69026bef735d793ab0538a23"},{"_id":"69026c1e735d793ab0538a4b","name":"Theater_1761766430_3","capacity":192,"type":"standard","createdAt":"2025-10-29T19:33:50.368Z","updatedAt":"2025-10-29T19:33:50.368Z","__v":0,"id":"69026c1e735d793ab0538a4b"},{"_id":"69026c1e735d793ab0538a4f","name":"Theater_1761766430_10","capacity":178,"type":"standard","createdAt":"2025-10-29T19:33:50.657Z","updatedAt":"2025-10-29T19:33:50.657Z","__v":0,"id":"69026c1e735d793ab0538a4f"},{"_id":"69026c1f735d793ab0538a5e","name":"Theater_1761766431_6","capacity":189,"type":"standard","createdAt":"2025-10-29T19:33:51.724Z","updatedAt":"2025-10-29T19:33:51.724Z","__v":0,"id":"69026c1f735d793ab0538a5e"},{"_id":"69026c20735d793ab0538a62","name":"Theater_1761766431_7","capacity":89,"type":"standard","createdAt":"2025-10-29T19:33:52.009Z","updatedAt":"2025-10-29T19:33:52.009Z","__v":0,"id":"69026c20735d793ab0538a62"},{"_id":"69026c20735d793ab0538a68","name":"Theater_1761766432_1","capacity":55,"type":"standard","createdAt":"2025-10-29T19:33:52.517Z","updatedAt":"2025-10-29T19:33:52.517Z","__v":0,"id":"69026c20735d793ab0538a68"},{"_id":"69026c20735d793ab0538a6c","name":"Theater_1761766432_8","capacity":117,"type":"standard","createdAt":"2025-10-29T19:33:52.805Z","updatedAt":"2025-10-29T19:33:52.805Z","__v":0,"id":"69026c20735d793ab0538a6c"},{"_id":"69026c21735d793ab0538a72","name":"Theater_1761766433_7","capacity":172,"type":"standard","createdAt":"2025-10-29T19:33:53.298Z","updatedAt":"2025-10-29T19:33:53.298Z","__v":0,"id":"69026c21735d793ab0538a72"},{"_id":"69026c21735d793ab0538a76","name":"Theater_1761766433_4","capacity":10,"type":"standard","createdAt":"2025-10-29T19:33:53.590Z","updatedAt":"2025-10-29T19:33:53.590Z","__v":0,"id":"69026c21735d793ab0538a76"}]} 
 </msg>
<msg time="2025-10-29T16:34:09.860647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:09.792589" elapsed="0.068058"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:09.860647" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:09.860647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<doc>Busca todos os theaters</doc>
<status status="PASS" start="2025-10-29T16:34:09.791672" elapsed="0.068975"/>
</kw>
<kw name="Verify Theater List Structure" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.863640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:09.861641" elapsed="0.001999"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:09.864655" level="INFO">${json} = {'success': True, 'count': 42, 'data': [{'_id': '68f7ec484bc189e5600e8f8a', 'name': 'Theater 1', 'capacity': 120, 'type': 'standard', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '2...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:09.863640" elapsed="0.001015"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:09.864655" elapsed="0.000993"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>count</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:09.865648" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica estrutura da lista de theaters</doc>
<status status="PASS" start="2025-10-29T16:34:09.861641" elapsed="0.004007"/>
</kw>
<msg time="2025-10-29T16:34:09.890735" level="INFO">Starting Browser process C:\Users\raphael\anaconda3\Lib\site-packages\Browser\wrapper\index.js using at 127.0.0.1:65436</msg>
<doc>Test GET /theaters returns theaters list</doc>
<status status="PASS" start="2025-10-29T16:34:09.790676" elapsed="0.074972"/>
</test>
<test id="s1-s2-t2" name="Get Theaters With Type Filter" line="21">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:10.944668" level="INFO">${params} = {'type': 'IMAX'}</msg>
<var>${params}</var>
<arg>type=IMAX</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:10.944668" elapsed="0.000000"/>
</kw>
<kw name="Get All Theaters" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:11.011979" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters?type=IMAX 
 path_url=/api/v1/theaters?type=IMAX 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:11.011979" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters?type=IMAX 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '9028', 'ETag': 'W/"2344-cWnpFrtci0dAtFME8YTg8QfrD7U"', 'Date': 'Wed, 29 Oct 2025 19:34:11 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"count":42,"data":[{"_id":"68f7ec484bc189e5600e8f8a","name":"Theater 1","capacity":120,"type":"standard","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8a"},{"_id":"68f7ec484bc189e5600e8f8b","name":"Theater 2","capacity":80,"type":"3D","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8b"},{"_id":"68f7ec484bc189e5600e8f8c","name":"Theater 3","capacity":60,"type":"IMAX","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8c"},{"_id":"690263c1735d793ab05388fa","name":"Theater_1761764289_5","capacity":87,"type":"standard","createdAt":"2025-10-29T18:58:09.918Z","updatedAt":"2025-10-29T18:58:09.918Z","__v":0,"id":"690263c1735d793ab05388fa"},{"_id":"690263c2735d793ab05388fe","name":"Theater_1761764290_3","capacity":106,"type":"standard","createdAt":"2025-10-29T18:58:10.206Z","updatedAt":"2025-10-29T18:58:10.206Z","__v":0,"id":"690263c2735d793ab05388fe"},{"_id":"690263c2735d793ab0538905","name":"Duplicate Theater","capacity":196,"type":"standard","createdAt":"2025-10-29T18:58:10.708Z","updatedAt":"2025-10-29T18:58:10.708Z","__v":0,"id":"690263c2735d793ab0538905"},{"_id":"690263c3735d793ab053890d","name":"Theater_1761764291_2","capacity":87,"type":"standard","createdAt":"2025-10-29T18:58:11.253Z","updatedAt":"2025-10-29T18:58:11.253Z","__v":0,"id":"690263c3735d793ab053890d"},{"_id":"690263c3735d793ab0538911","name":"Theater_1761764291_9","capacity":85,"type":"standard","createdAt":"2025-10-29T18:58:11.538Z","updatedAt":"2025-10-29T18:58:11.538Z","__v":0,"id":"690263c3735d793ab0538911"},{"_id":"690263c4735d793ab053891b","name":"Theater_1761764292_5","capacity":231,"type":"standard","createdAt":"2025-10-29T18:58:12.319Z","updatedAt":"2025-10-29T18:58:12.319Z","__v":0,"id":"690263c4735d793ab053891b"},{"_id":"690263c4735d793ab0538921","name":"Theater_1761764292_6","capacity":67,"type":"standard","createdAt":"2025-10-29T18:58:12.816Z","updatedAt":"2025-10-29T18:58:12.816Z","__v":0,"id":"690263c4735d793ab0538921"},{"_id":"690263c5735d793ab0538925","name":"Theater_1761764292_1","capacity":10,"type":"standard","createdAt":"2025-10-29T18:58:13.120Z","updatedAt":"2025-10-29T18:58:13.120Z","__v":0,"id":"690263c5735d793ab0538925"},{"_id":"69026947735d793ab053892a","name":"meu","capacity":2,"type":"standard","createdAt":"2025-10-29T19:21:43.944Z","updatedAt":"2025-10-29T19:21:43.944Z","__v":0,"id":"69026947735d793ab053892a"},{"_id":"69026ab9735d793ab0538952","name":"Theater_1761766073_5","capacity":219,"type":"standard","createdAt":"2025-10-29T19:27:53.887Z","updatedAt":"2025-10-29T19:27:53.887Z","__v":0,"id":"69026ab9735d793ab0538952"},{"_id":"69026abb735d793ab0538965","name":"Theater_1761766074_8","capacity":271,"type":"standard","createdAt":"2025-10-29T19:27:55.196Z","updatedAt":"2025-10-29T19:27:55.196Z","__v":0,"id":"69026abb735d793ab0538965"},{"_id":"69026abb735d793ab0538969","name":"Theater_1761766075_7","capacity":89,"type":"standard","createdAt":"2025-10-29T19:27:55.478Z","updatedAt":"2025-10-29T19:27:55.478Z","__v":0,"id":"69026abb735d793ab0538969"},{"_id":"69026abb735d793ab053896f","name":"Theater_1761766075_2","capacity":141,"type":"standard","createdAt":"2025-10-29T19:27:55.975Z","updatedAt":"2025-10-29T19:27:55.975Z","__v":0,"id":"69026abb735d793ab053896f"},{"_id":"69026abc735d793ab0538973","name":"Theater_1761766076_8","capacity":172,"type":"standard","createdAt":"2025-10-29T19:27:56.273Z","updatedAt":"2025-10-29T19:27:56.273Z","__v":0,"id":"69026abc735d793ab0538973"},{"_id":"69026abc735d793ab0538979","name":"Theater_1761766076_4","capacity":109,"type":"standard","createdAt":"2025-10-29T19:27:56.787Z","updatedAt":"2025-10-29T19:27:56.787Z","__v":0,"id":"69026abc735d793ab0538979"},{"_id":"69026abd735d793ab053897d","name":"Theater_1761766076_7","capacity":10,"type":"standard","createdAt":"2025-10-29T19:27:57.077Z","updatedAt":"2025-10-29T19:27:57.077Z","__v":0,"id":"69026abd735d793ab053897d"},{"_id":"69026bb0735d793ab05389a5","name":"Theater_1761766320_5","capacity":156,"type":"standard","createdAt":"2025-10-29T19:32:00.900Z","updatedAt":"2025-10-29T19:32:00.900Z","__v":0,"id":"69026bb0735d793ab05389a5"},{"_id":"69026bb1735d793ab05389a9","name":"Theater_1761766320_7","capacity":70,"type":"standard","createdAt":"2025-10-29T19:32:01.200Z","updatedAt":"2025-10-29T19:32:01.200Z","__v":0,"id":"69026bb1735d793ab05389a9"},{"_id":"69026bb2735d793ab05389b8","name":"Theater_1761766322_7","capacity":186,"type":"standard","createdAt":"2025-10-29T19:32:02.319Z","updatedAt":"2025-10-29T19:32:02.319Z","__v":0,"id":"69026bb2735d793ab05389b8"},{"_id":"69026bb2735d793ab05389bc","name":"Theater_1761766322_1","capacity":289,"type":"standard","createdAt":"2025-10-29T19:32:02.619Z","updatedAt":"2025-10-29T19:32:02.619Z","__v":0,"id":"69026bb2735d793ab05389bc"},{"_id":"69026bb3735d793ab05389c6","name":"Theater_1761766323_6","capacity":187,"type":"standard","createdAt":"2025-10-29T19:32:03.469Z","updatedAt":"2025-10-29T19:32:03.469Z","__v":0,"id":"69026bb3735d793ab05389c6"},{"_id":"69026bb4735d793ab05389cc","name":"Theater_1761766323_7","capacity":93,"type":"standard","createdAt":"2025-10-29T19:32:04.026Z","updatedAt":"2025-10-29T19:32:04.026Z","__v":0,"id":"69026bb4735d793ab05389cc"},{"_id":"69026bb4735d793ab05389d0","name":"Theater_1761766324_8","capacity":10,"type":"standard","createdAt":"2025-10-29T19:32:04.359Z","updatedAt":"2025-10-29T19:32:04.359Z","__v":0,"id":"69026bb4735d793ab05389d0"},{"_id":"69026bec735d793ab05389f8","name":"Theater_1761766379_2","capacity":207,"type":"standard","createdAt":"2025-10-29T19:33:00.088Z","updatedAt":"2025-10-29T19:33:00.088Z","__v":0,"id":"69026bec735d793ab05389f8"},{"_id":"69026bec735d793ab05389fc","name":"Theater_1761766380_2","capacity":231,"type":"standard","createdAt":"2025-10-29T19:33:00.376Z","updatedAt":"2025-10-29T19:33:00.376Z","__v":0,"id":"69026bec735d793ab05389fc"},{"_id":"69026bed735d793ab0538a0b","name":"Theater_1761766381_10","capacity":242,"type":"standard","createdAt":"2025-10-29T19:33:01.428Z","updatedAt":"2025-10-29T19:33:01.428Z","__v":0,"id":"69026bed735d793ab0538a0b"},{"_id":"69026bed735d793ab0538a0f","name":"Theater_1761766381_9","capacity":281,"type":"standard","createdAt":"2025-10-29T19:33:01.715Z","updatedAt":"2025-10-29T19:33:01.715Z","__v":0,"id":"69026bed735d793ab0538a0f"},{"_id":"69026bee735d793ab0538a15","name":"Theater_1761766382_1","capacity":156,"type":"standard","createdAt":"2025-10-29T19:33:02.219Z","updatedAt":"2025-10-29T19:33:02.219Z","__v":0,"id":"69026bee735d793ab0538a15"},{"_id":"69026bee735d793ab0538a19","name":"Theater_1761766382_9","capacity":141,"type":"standard","createdAt":"2025-10-29T19:33:02.516Z","updatedAt":"2025-10-29T19:33:02.516Z","__v":0,"id":"69026bee735d793ab0538a19"},{"_id":"69026bef735d793ab0538a1f","name":"Theater_1761766382_5","capacity":91,"type":"standard","createdAt":"2025-10-29T19:33:03.011Z","updatedAt":"2025-10-29T19:33:03.011Z","__v":0,"id":"69026bef735d793ab0538a1f"},{"_id":"69026bef735d793ab0538a23","name":"Theater_1761766383_4","capacity":10,"type":"standard","createdAt":"2025-10-29T19:33:03.313Z","updatedAt":"2025-10-29T19:33:03.313Z","__v":0,"id":"69026bef735d793ab0538a23"},{"_id":"69026c1e735d793ab0538a4b","name":"Theater_1761766430_3","capacity":192,"type":"standard","createdAt":"2025-10-29T19:33:50.368Z","updatedAt":"2025-10-29T19:33:50.368Z","__v":0,"id":"69026c1e735d793ab0538a4b"},{"_id":"69026c1e735d793ab0538a4f","name":"Theater_1761766430_10","capacity":178,"type":"standard","createdAt":"2025-10-29T19:33:50.657Z","updatedAt":"2025-10-29T19:33:50.657Z","__v":0,"id":"69026c1e735d793ab0538a4f"},{"_id":"69026c1f735d793ab0538a5e","name":"Theater_1761766431_6","capacity":189,"type":"standard","createdAt":"2025-10-29T19:33:51.724Z","updatedAt":"2025-10-29T19:33:51.724Z","__v":0,"id":"69026c1f735d793ab0538a5e"},{"_id":"69026c20735d793ab0538a62","name":"Theater_1761766431_7","capacity":89,"type":"standard","createdAt":"2025-10-29T19:33:52.009Z","updatedAt":"2025-10-29T19:33:52.009Z","__v":0,"id":"69026c20735d793ab0538a62"},{"_id":"69026c20735d793ab0538a68","name":"Theater_1761766432_1","capacity":55,"type":"standard","createdAt":"2025-10-29T19:33:52.517Z","updatedAt":"2025-10-29T19:33:52.517Z","__v":0,"id":"69026c20735d793ab0538a68"},{"_id":"69026c20735d793ab0538a6c","name":"Theater_1761766432_8","capacity":117,"type":"standard","createdAt":"2025-10-29T19:33:52.805Z","updatedAt":"2025-10-29T19:33:52.805Z","__v":0,"id":"69026c20735d793ab0538a6c"},{"_id":"69026c21735d793ab0538a72","name":"Theater_1761766433_7","capacity":172,"type":"standard","createdAt":"2025-10-29T19:33:53.298Z","updatedAt":"2025-10-29T19:33:53.298Z","__v":0,"id":"69026c21735d793ab0538a72"},{"_id":"69026c21735d793ab0538a76","name":"Theater_1761766433_4","capacity":10,"type":"standard","createdAt":"2025-10-29T19:33:53.590Z","updatedAt":"2025-10-29T19:33:53.590Z","__v":0,"id":"69026c21735d793ab0538a76"}]} 
 </msg>
<msg time="2025-10-29T16:34:11.011979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:10.945669" elapsed="0.066310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:11.011979" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:11.011979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>params=${params}</arg>
<doc>Busca todos os theaters</doc>
<status status="PASS" start="2025-10-29T16:34:10.944668" elapsed="0.067311"/>
</kw>
<kw name="Verify Theater List Structure" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.014818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:11.012983" elapsed="0.001835"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.016886" level="INFO">${json} = {'success': True, 'count': 42, 'data': [{'_id': '68f7ec484bc189e5600e8f8a', 'name': 'Theater 1', 'capacity': 120, 'type': 'standard', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '2...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:11.014818" elapsed="0.002068"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.016886" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>count</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.016886" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica estrutura da lista de theaters</doc>
<status status="PASS" start="2025-10-29T16:34:11.012983" elapsed="0.003903"/>
</kw>
<doc>Test filtering theaters by type</doc>
<status status="PASS" start="2025-10-29T16:34:10.941688" elapsed="0.075198"/>
</test>
<test id="s1-s2-t3" name="Get Theaters With Pagination" line="27">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.027571" level="INFO">${params} = {'limit': '5', 'page': '1'}</msg>
<var>${params}</var>
<arg>limit=5</arg>
<arg>page=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.027049" elapsed="0.000522"/>
</kw>
<kw name="Get All Theaters" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:11.096754" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters?limit=5&amp;page=1 
 path_url=/api/v1/theaters?limit=5&amp;page=1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:11.096754" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters?limit=5&amp;page=1 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '9028', 'ETag': 'W/"2344-cWnpFrtci0dAtFME8YTg8QfrD7U"', 'Date': 'Wed, 29 Oct 2025 19:34:11 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"count":42,"data":[{"_id":"68f7ec484bc189e5600e8f8a","name":"Theater 1","capacity":120,"type":"standard","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8a"},{"_id":"68f7ec484bc189e5600e8f8b","name":"Theater 2","capacity":80,"type":"3D","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8b"},{"_id":"68f7ec484bc189e5600e8f8c","name":"Theater 3","capacity":60,"type":"IMAX","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8c"},{"_id":"690263c1735d793ab05388fa","name":"Theater_1761764289_5","capacity":87,"type":"standard","createdAt":"2025-10-29T18:58:09.918Z","updatedAt":"2025-10-29T18:58:09.918Z","__v":0,"id":"690263c1735d793ab05388fa"},{"_id":"690263c2735d793ab05388fe","name":"Theater_1761764290_3","capacity":106,"type":"standard","createdAt":"2025-10-29T18:58:10.206Z","updatedAt":"2025-10-29T18:58:10.206Z","__v":0,"id":"690263c2735d793ab05388fe"},{"_id":"690263c2735d793ab0538905","name":"Duplicate Theater","capacity":196,"type":"standard","createdAt":"2025-10-29T18:58:10.708Z","updatedAt":"2025-10-29T18:58:10.708Z","__v":0,"id":"690263c2735d793ab0538905"},{"_id":"690263c3735d793ab053890d","name":"Theater_1761764291_2","capacity":87,"type":"standard","createdAt":"2025-10-29T18:58:11.253Z","updatedAt":"2025-10-29T18:58:11.253Z","__v":0,"id":"690263c3735d793ab053890d"},{"_id":"690263c3735d793ab0538911","name":"Theater_1761764291_9","capacity":85,"type":"standard","createdAt":"2025-10-29T18:58:11.538Z","updatedAt":"2025-10-29T18:58:11.538Z","__v":0,"id":"690263c3735d793ab0538911"},{"_id":"690263c4735d793ab053891b","name":"Theater_1761764292_5","capacity":231,"type":"standard","createdAt":"2025-10-29T18:58:12.319Z","updatedAt":"2025-10-29T18:58:12.319Z","__v":0,"id":"690263c4735d793ab053891b"},{"_id":"690263c4735d793ab0538921","name":"Theater_1761764292_6","capacity":67,"type":"standard","createdAt":"2025-10-29T18:58:12.816Z","updatedAt":"2025-10-29T18:58:12.816Z","__v":0,"id":"690263c4735d793ab0538921"},{"_id":"690263c5735d793ab0538925","name":"Theater_1761764292_1","capacity":10,"type":"standard","createdAt":"2025-10-29T18:58:13.120Z","updatedAt":"2025-10-29T18:58:13.120Z","__v":0,"id":"690263c5735d793ab0538925"},{"_id":"69026947735d793ab053892a","name":"meu","capacity":2,"type":"standard","createdAt":"2025-10-29T19:21:43.944Z","updatedAt":"2025-10-29T19:21:43.944Z","__v":0,"id":"69026947735d793ab053892a"},{"_id":"69026ab9735d793ab0538952","name":"Theater_1761766073_5","capacity":219,"type":"standard","createdAt":"2025-10-29T19:27:53.887Z","updatedAt":"2025-10-29T19:27:53.887Z","__v":0,"id":"69026ab9735d793ab0538952"},{"_id":"69026abb735d793ab0538965","name":"Theater_1761766074_8","capacity":271,"type":"standard","createdAt":"2025-10-29T19:27:55.196Z","updatedAt":"2025-10-29T19:27:55.196Z","__v":0,"id":"69026abb735d793ab0538965"},{"_id":"69026abb735d793ab0538969","name":"Theater_1761766075_7","capacity":89,"type":"standard","createdAt":"2025-10-29T19:27:55.478Z","updatedAt":"2025-10-29T19:27:55.478Z","__v":0,"id":"69026abb735d793ab0538969"},{"_id":"69026abb735d793ab053896f","name":"Theater_1761766075_2","capacity":141,"type":"standard","createdAt":"2025-10-29T19:27:55.975Z","updatedAt":"2025-10-29T19:27:55.975Z","__v":0,"id":"69026abb735d793ab053896f"},{"_id":"69026abc735d793ab0538973","name":"Theater_1761766076_8","capacity":172,"type":"standard","createdAt":"2025-10-29T19:27:56.273Z","updatedAt":"2025-10-29T19:27:56.273Z","__v":0,"id":"69026abc735d793ab0538973"},{"_id":"69026abc735d793ab0538979","name":"Theater_1761766076_4","capacity":109,"type":"standard","createdAt":"2025-10-29T19:27:56.787Z","updatedAt":"2025-10-29T19:27:56.787Z","__v":0,"id":"69026abc735d793ab0538979"},{"_id":"69026abd735d793ab053897d","name":"Theater_1761766076_7","capacity":10,"type":"standard","createdAt":"2025-10-29T19:27:57.077Z","updatedAt":"2025-10-29T19:27:57.077Z","__v":0,"id":"69026abd735d793ab053897d"},{"_id":"69026bb0735d793ab05389a5","name":"Theater_1761766320_5","capacity":156,"type":"standard","createdAt":"2025-10-29T19:32:00.900Z","updatedAt":"2025-10-29T19:32:00.900Z","__v":0,"id":"69026bb0735d793ab05389a5"},{"_id":"69026bb1735d793ab05389a9","name":"Theater_1761766320_7","capacity":70,"type":"standard","createdAt":"2025-10-29T19:32:01.200Z","updatedAt":"2025-10-29T19:32:01.200Z","__v":0,"id":"69026bb1735d793ab05389a9"},{"_id":"69026bb2735d793ab05389b8","name":"Theater_1761766322_7","capacity":186,"type":"standard","createdAt":"2025-10-29T19:32:02.319Z","updatedAt":"2025-10-29T19:32:02.319Z","__v":0,"id":"69026bb2735d793ab05389b8"},{"_id":"69026bb2735d793ab05389bc","name":"Theater_1761766322_1","capacity":289,"type":"standard","createdAt":"2025-10-29T19:32:02.619Z","updatedAt":"2025-10-29T19:32:02.619Z","__v":0,"id":"69026bb2735d793ab05389bc"},{"_id":"69026bb3735d793ab05389c6","name":"Theater_1761766323_6","capacity":187,"type":"standard","createdAt":"2025-10-29T19:32:03.469Z","updatedAt":"2025-10-29T19:32:03.469Z","__v":0,"id":"69026bb3735d793ab05389c6"},{"_id":"69026bb4735d793ab05389cc","name":"Theater_1761766323_7","capacity":93,"type":"standard","createdAt":"2025-10-29T19:32:04.026Z","updatedAt":"2025-10-29T19:32:04.026Z","__v":0,"id":"69026bb4735d793ab05389cc"},{"_id":"69026bb4735d793ab05389d0","name":"Theater_1761766324_8","capacity":10,"type":"standard","createdAt":"2025-10-29T19:32:04.359Z","updatedAt":"2025-10-29T19:32:04.359Z","__v":0,"id":"69026bb4735d793ab05389d0"},{"_id":"69026bec735d793ab05389f8","name":"Theater_1761766379_2","capacity":207,"type":"standard","createdAt":"2025-10-29T19:33:00.088Z","updatedAt":"2025-10-29T19:33:00.088Z","__v":0,"id":"69026bec735d793ab05389f8"},{"_id":"69026bec735d793ab05389fc","name":"Theater_1761766380_2","capacity":231,"type":"standard","createdAt":"2025-10-29T19:33:00.376Z","updatedAt":"2025-10-29T19:33:00.376Z","__v":0,"id":"69026bec735d793ab05389fc"},{"_id":"69026bed735d793ab0538a0b","name":"Theater_1761766381_10","capacity":242,"type":"standard","createdAt":"2025-10-29T19:33:01.428Z","updatedAt":"2025-10-29T19:33:01.428Z","__v":0,"id":"69026bed735d793ab0538a0b"},{"_id":"69026bed735d793ab0538a0f","name":"Theater_1761766381_9","capacity":281,"type":"standard","createdAt":"2025-10-29T19:33:01.715Z","updatedAt":"2025-10-29T19:33:01.715Z","__v":0,"id":"69026bed735d793ab0538a0f"},{"_id":"69026bee735d793ab0538a15","name":"Theater_1761766382_1","capacity":156,"type":"standard","createdAt":"2025-10-29T19:33:02.219Z","updatedAt":"2025-10-29T19:33:02.219Z","__v":0,"id":"69026bee735d793ab0538a15"},{"_id":"69026bee735d793ab0538a19","name":"Theater_1761766382_9","capacity":141,"type":"standard","createdAt":"2025-10-29T19:33:02.516Z","updatedAt":"2025-10-29T19:33:02.516Z","__v":0,"id":"69026bee735d793ab0538a19"},{"_id":"69026bef735d793ab0538a1f","name":"Theater_1761766382_5","capacity":91,"type":"standard","createdAt":"2025-10-29T19:33:03.011Z","updatedAt":"2025-10-29T19:33:03.011Z","__v":0,"id":"69026bef735d793ab0538a1f"},{"_id":"69026bef735d793ab0538a23","name":"Theater_1761766383_4","capacity":10,"type":"standard","createdAt":"2025-10-29T19:33:03.313Z","updatedAt":"2025-10-29T19:33:03.313Z","__v":0,"id":"69026bef735d793ab0538a23"},{"_id":"69026c1e735d793ab0538a4b","name":"Theater_1761766430_3","capacity":192,"type":"standard","createdAt":"2025-10-29T19:33:50.368Z","updatedAt":"2025-10-29T19:33:50.368Z","__v":0,"id":"69026c1e735d793ab0538a4b"},{"_id":"69026c1e735d793ab0538a4f","name":"Theater_1761766430_10","capacity":178,"type":"standard","createdAt":"2025-10-29T19:33:50.657Z","updatedAt":"2025-10-29T19:33:50.657Z","__v":0,"id":"69026c1e735d793ab0538a4f"},{"_id":"69026c1f735d793ab0538a5e","name":"Theater_1761766431_6","capacity":189,"type":"standard","createdAt":"2025-10-29T19:33:51.724Z","updatedAt":"2025-10-29T19:33:51.724Z","__v":0,"id":"69026c1f735d793ab0538a5e"},{"_id":"69026c20735d793ab0538a62","name":"Theater_1761766431_7","capacity":89,"type":"standard","createdAt":"2025-10-29T19:33:52.009Z","updatedAt":"2025-10-29T19:33:52.009Z","__v":0,"id":"69026c20735d793ab0538a62"},{"_id":"69026c20735d793ab0538a68","name":"Theater_1761766432_1","capacity":55,"type":"standard","createdAt":"2025-10-29T19:33:52.517Z","updatedAt":"2025-10-29T19:33:52.517Z","__v":0,"id":"69026c20735d793ab0538a68"},{"_id":"69026c20735d793ab0538a6c","name":"Theater_1761766432_8","capacity":117,"type":"standard","createdAt":"2025-10-29T19:33:52.805Z","updatedAt":"2025-10-29T19:33:52.805Z","__v":0,"id":"69026c20735d793ab0538a6c"},{"_id":"69026c21735d793ab0538a72","name":"Theater_1761766433_7","capacity":172,"type":"standard","createdAt":"2025-10-29T19:33:53.298Z","updatedAt":"2025-10-29T19:33:53.298Z","__v":0,"id":"69026c21735d793ab0538a72"},{"_id":"69026c21735d793ab0538a76","name":"Theater_1761766433_4","capacity":10,"type":"standard","createdAt":"2025-10-29T19:33:53.590Z","updatedAt":"2025-10-29T19:33:53.590Z","__v":0,"id":"69026c21735d793ab0538a76"}]} 
 </msg>
<msg time="2025-10-29T16:34:11.096754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:11.028613" elapsed="0.068141"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:11.096754" elapsed="0.000999"/>
</return>
<msg time="2025-10-29T16:34:11.097753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>params=${params}</arg>
<doc>Busca todos os theaters</doc>
<status status="PASS" start="2025-10-29T16:34:11.028092" elapsed="0.069661"/>
</kw>
<kw name="Verify Theater List Structure" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.099754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:11.098754" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.101753" level="INFO">${json} = {'success': True, 'count': 42, 'data': [{'_id': '68f7ec484bc189e5600e8f8a', 'name': 'Theater 1', 'capacity': 120, 'type': 'standard', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '2...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:11.099754" elapsed="0.001999"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.101753" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>count</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.101753" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica estrutura da lista de theaters</doc>
<status status="PASS" start="2025-10-29T16:34:11.097753" elapsed="0.004000"/>
</kw>
<doc>Test pagination parameters</doc>
<status status="PASS" start="2025-10-29T16:34:11.023880" elapsed="0.078873"/>
</test>
<test id="s1-s2-t4" name="Get Theater By Valid ID" line="33">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.113630" level="INFO">${theater_id} = 68f7ec484bc189e5600e8f8c</msg>
<var>${theater_id}</var>
<arg>68f7ec484bc189e5600e8f8c</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:11.112622" elapsed="0.001008"/>
</kw>
<kw name="Get Theater By ID" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:11.854937" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters/68f7ec484bc189e5600e8f8c 
 path_url=/api/v1/theaters/68f7ec484bc189e5600e8f8c 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:11.854937" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters/68f7ec484bc189e5600e8f8c 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '812872', 'ETag': 'W/"c6748-qbwdCMuHnBj4DwE1cyvIsrT1V7s"', 'Date': 'Wed, 29 Oct 2025 19:34:11 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"68f7ec484bc189e5600e8f8c","name":"Theater 3","capacity":60,"type":"IMAX","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","sessions":[{"_id":"68f7ec484bc189e5600e8f95","movie":"68f7ec484bc189e5600e8f86","theater":"68f7ec484bc189e5600e8f8c","datetime":"2025-10-21T19:00:00.000Z","fullPrice":15,"halfPrice":7.5,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"}],"createdAt":"2025-10-21T20:25:44.333Z","__v":0,"updatedAt":"2025-10-21T20:25:44.734Z","id":"68f7ec484bc189e5600e8f95"},{"_id":"68f7ec484bc189e5600e8f9e","movie":"68f7ec484bc189e5600e8f87","theater":"68f7ec484bc189e5600e8f8c","datetime":"2025-10-21T19:00:00.000Z","fullPrice":15,"halfPrice":7.5,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"}],"createdAt":"2025-10-21T20:25:44.356Z","__v":0,"updatedAt":"2025-10-21T20:25:44.735Z","id":"68f7ec484bc189e5600e8f9e"},{"_id":"68f7ec484bc189e5600e8fae","movie":"68f7ec484bc189e5600e8f86","theater":"68f7ec484bc189e5600e8f8c","datetime":"2025-10-22T19:00:00.000Z","fullPrice":15,"halfPrice":7.5,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"}],"createdAt":"2025-10-21T20:25:44.375Z","__v":0,"updatedAt":"2025-10-21T20:25:44.738Z","id":"68f7ec484bc189e5600e8fae"},{"_id":"68f7ec484bc189e5600e8fbf","movie":"68f7ec484bc189e5600e8f88","theater":"68f7ec484bc189e5600e8f8c","datetime":"2025-10-22T15:00:00.000Z","fullPrice":15,"halfPrice":7.5,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"av... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-10-29T16:34:11.855876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters/${theater_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:11.114634" elapsed="0.741242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:11.855876" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:11.855876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${theater_id}</arg>
<doc>Busca theater por ID</doc>
<status status="PASS" start="2025-10-29T16:34:11.114634" elapsed="0.741242"/>
</kw>
<kw name="Verify Theater Response Structure" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.857936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:11.856915" elapsed="0.001021"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.879975" level="INFO">${json} = {'success': True, 'data': {'_id': '68f7ec484bc189e5600e8f8c', 'name': 'Theater 3', 'capacity': 60, 'type': 'IMAX', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '2025-10-21T20:25:44....</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:11.857936" elapsed="0.022039"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>success</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.880963" elapsed="0.000000"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${json["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-29T16:34:11.880963" elapsed="0.002003"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.882966" elapsed="0.001010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.894970" level="INFO">${data} = {'_id': '68f7ec484bc189e5600e8f8c', 'name': 'Theater 3', 'capacity': 60, 'type': 'IMAX', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '2025-10-21T20:25:44.241Z', 'sessions': [{'_id'...</msg>
<var>${data}</var>
<arg>${json["data"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:11.883976" elapsed="0.010994"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.894970" elapsed="0.001000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.895970" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.895970" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.895970" elapsed="0.000995"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.896965" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica estrutura da resposta de theater</doc>
<status status="PASS" start="2025-10-29T16:34:11.856915" elapsed="0.040050"/>
</kw>
<doc>Test GET /theaters/{id} with valid theater ID</doc>
<status status="PASS" start="2025-10-29T16:34:11.109268" elapsed="0.787697"/>
</test>
<test id="s1-s2-t5" name="Get Theater By Invalid ID" line="39">
<kw name="Get Theater By ID" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:11.909019" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters/invalid_theater_id 
 path_url=/api/v1/theaters/invalid_theater_id 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:11.909019" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters/invalid_theater_id 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1810', 'ETag': 'W/"712-KT4tOivtWW9UezALsYmH0rzGwpc"', 'Date': 'Wed, 29 Oct 2025 19:34:11 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Resource not found","stack":"CastError: Cast to ObjectId failed for value \"invalid_theater_id\" (type string) at path \"_id\" for model \"Theater\"\n    at SchemaObjectId.cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async exports.getTheaterById (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\src\\controllers\\theaterController.js:29:21)"} 
 </msg>
<msg time="2025-10-29T16:34:11.909019" level="FAIL">HTTPError: 400 Client Error: Bad Request for url: http://localhost:3000/api/v1/theaters/invalid_theater_id</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters/${theater_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T16:34:11.905100" elapsed="0.005506">HTTPError: 400 Client Error: Bad Request for url: http://localhost:3000/api/v1/theaters/invalid_theater_id</status>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T16:34:11.910606" elapsed="0.001090"/>
</return>
<var>${response}</var>
<arg>invalid_theater_id</arg>
<doc>Busca theater por ID</doc>
<status status="FAIL" start="2025-10-29T16:34:11.904020" elapsed="0.007676">HTTPError: 400 Client Error: Bad Request for url: http://localhost:3000/api/v1/theaters/invalid_theater_id</status>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>404</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T16:34:11.911696" elapsed="0.000000"/>
</kw>
<doc>Test GET /theaters/{id} with non-existent theater ID</doc>
<status status="FAIL" start="2025-10-29T16:34:11.902017" elapsed="0.011184">HTTPError: 400 Client Error: Bad Request for url: http://localhost:3000/api/v1/theaters/invalid_theater_id</status>
</test>
<test id="s1-s2-t6" name="Create Theater As Admin Successfully" line="44">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.922735" level="INFO">${timestamp} = 1761766451</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:11.922735" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.923736" level="INFO">${random_num} = 4</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:11.923736" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:11.923736" elapsed="0.001003"/>
</kw>
<msg time="2025-10-29T16:34:11.924739" level="INFO">${fake_name} = Theater_1761766451_4</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:11.923736" elapsed="0.001003"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:11.924739" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:11.925737" level="INFO">${fake_capacity} = 299</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:11.924739" elapsed="0.000998"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.925737" level="INFO">${theater_data} = {'name': 'Theater_1761766451_4', 'capacity': 299, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.925737" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:11.925737" elapsed="0.000998"/>
</return>
<msg time="2025-10-29T16:34:11.926735" level="INFO">${theater_data} = {'name': 'Theater_1761766451_4', 'capacity': 299, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:11.922735" elapsed="0.004000"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.928742" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.928742" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:11.928742" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:11.928742" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:12.057546" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:12.057546" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-etfY8Yky2E90+pIODwvJuUvJnag"', 'Date': 'Wed, 29 Oct 2025 19:34:11 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA"}} 
 </msg>
<msg time="2025-10-29T16:34:12.057546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:11.929741" elapsed="0.127805"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.059578" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:12.057546" elapsed="0.002032"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.059578" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.059578" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:11.928742" elapsed="0.130836"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.059578" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.059578" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:11.927741" elapsed="0.131837"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.059578" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.060577" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:11.927741" elapsed="0.132836"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.060577" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS5...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.060577" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:12.192723" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA', 'Content-Length': '69'} 
 body=b'{"name": "Theater_1761766451_4", "capacity": 299, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:12.192723" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '239', 'ETag': 'W/"ef-HPFKshFshDedqLQ1qwcnyaA1s3A"', 'Date': 'Wed, 29 Oct 2025 19:34:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater_1761766451_4","capacity":299,"type":"standard","_id":"69026c34735d793ab0538a9e","createdAt":"2025-10-29T19:34:12.126Z","updatedAt":"2025-10-29T19:34:12.126Z","__v":0,"id":"69026c34735d793ab0538a9e"}} 
 </msg>
<msg time="2025-10-29T16:34:12.192723" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:12.060577" elapsed="0.132146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:12.193716" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.193716" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:11.926735" elapsed="0.266981"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.195385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:12.194709" elapsed="0.000676"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.197462" level="INFO">${json} = {'success': True, 'data': {'name': 'Theater_1761766451_4', 'capacity': 299, 'type': 'standard', '_id': '69026c34735d793ab0538a9e', 'createdAt': '2025-10-29T19:34:12.126Z', 'updatedAt': '2025-10-29T19:...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:12.196453" elapsed="0.001009"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<msg time="2025-10-29T16:34:12.197462" level="FAIL">Dictionary does not contain key 'id'.</msg>
<arg>${json}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="FAIL" start="2025-10-29T16:34:12.197462" elapsed="0.000000">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:12.197462" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:12.198458" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:12.198458" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:12.198458" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="FAIL" start="2025-10-29T16:34:12.193716" elapsed="0.004742">Dictionary does not contain key 'id'.</status>
</kw>
<doc>Test POST /theaters with valid admin token</doc>
<status status="FAIL" start="2025-10-29T16:34:11.919212" elapsed="0.279246">Dictionary does not contain key 'id'.</status>
</test>
<test id="s1-s2-t7" name="Create Theater Without Authentication" line="50">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.209543" level="INFO">${timestamp} = 1761766452</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:12.208538" elapsed="0.001005"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.211542" level="INFO">${random_num} = 2</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:12.210540" elapsed="0.001002"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:12.211542" elapsed="0.001012"/>
</kw>
<msg time="2025-10-29T16:34:12.212554" level="INFO">${fake_name} = Theater_1761766452_2</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:12.211542" elapsed="0.001012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:12.212554" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:12.213545" level="INFO">${fake_capacity} = 209</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:12.212554" elapsed="0.000991"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.213545" level="INFO">${theater_data} = {'name': 'Theater_1761766452_2', 'capacity': 209, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.213545" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:12.213545" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.213545" level="INFO">${theater_data} = {'name': 'Theater_1761766452_2', 'capacity': 209, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:12.207539" elapsed="0.006006"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.215544" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.215544" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.216542" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.216542" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:12.346367" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:12.346367" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-etfY8Yky2E90+pIODwvJuUvJnag"', 'Date': 'Wed, 29 Oct 2025 19:34:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA"}} 
 </msg>
<msg time="2025-10-29T16:34:12.346367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:12.216542" elapsed="0.129825"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.348281" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:12.346367" elapsed="0.001914"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.348281" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.348281" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:12.215544" elapsed="0.132737"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.348281" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.349349" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:12.214537" elapsed="0.134812"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.349349" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.349349" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:12.214537" elapsed="0.134812"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.349349" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS5...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.349349" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:12.485110" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA', 'Content-Length': '69'} 
 body=b'{"name": "Theater_1761766452_2", "capacity": 209, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:12.485110" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '239', 'ETag': 'W/"ef-RV88M9AV+pzg6a+OVT1LIcIYlpU"', 'Date': 'Wed, 29 Oct 2025 19:34:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater_1761766452_2","capacity":209,"type":"standard","_id":"69026c34735d793ab0538aa2","createdAt":"2025-10-29T19:34:12.414Z","updatedAt":"2025-10-29T19:34:12.414Z","__v":0,"id":"69026c34735d793ab0538aa2"}} 
 </msg>
<msg time="2025-10-29T16:34:12.485110" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:12.349349" elapsed="0.135761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:12.486117" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.486117" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${theater_data}</arg>
<arg>${None}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:12.214537" elapsed="0.271580"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.491243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-10-29T16:34:12.491243" level="FAIL">201 != 401</msg>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-10-29T16:34:12.489253" elapsed="0.001990">201 != 401</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:12.491243" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>success</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:12.491243" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${json}[success]</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:12.491243" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<arg>401</arg>
<doc>Verifica resposta de erro</doc>
<status status="FAIL" start="2025-10-29T16:34:12.486117" elapsed="0.005126">201 != 401</status>
</kw>
<doc>Test POST /theaters without admin token</doc>
<status status="FAIL" start="2025-10-29T16:34:12.204535" elapsed="0.287701">201 != 401</status>
</test>
<test id="s1-s2-t8" name="Create Theater With Invalid Data" line="56">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.499862" level="INFO">${invalid_data} = {'name': 'Invalid Theater'}</msg>
<var>${invalid_data}</var>
<arg>name=Invalid Theater</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.499862" elapsed="0.000000"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.503976" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.502996" elapsed="0.000980"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.503976" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.503976" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:12.630635" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:12.630635" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-etfY8Yky2E90+pIODwvJuUvJnag"', 'Date': 'Wed, 29 Oct 2025 19:34:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA"}} 
 </msg>
<msg time="2025-10-29T16:34:12.630635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:12.503976" elapsed="0.126659"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.631635" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:12.630635" elapsed="0.001000"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.631635" elapsed="0.000999"/>
</return>
<msg time="2025-10-29T16:34:12.632634" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:12.502996" elapsed="0.129638"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.632634" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.632634" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:12.501975" elapsed="0.130659"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.632634" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.632634" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:12.501975" elapsed="0.130659"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.633631" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS5...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.633631" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:12.703398" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA', 'Content-Length': '27'} 
 body=b'{"name": "Invalid Theater"}' 
 </msg>
<msg time="2025-10-29T16:34:12.703398" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '92', 'ETag': 'W/"5c-0UM+bRd6iCvCRYc3ZjQi+MkTaLk"', 'Date': 'Wed, 29 Oct 2025 19:34:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"capacity":"Capacity is required"}} 
 </msg>
<msg time="2025-10-29T16:34:12.703398" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:12.633631" elapsed="0.069767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:12.704412" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.704412" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>${invalid_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:12.500861" elapsed="0.203551"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.706046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:12.704965" elapsed="0.001081"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.707045" level="INFO">${json} = {'success': False, 'message': 'Validation failed', 'errors': {'capacity': 'Capacity is required'}}</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:12.706046" elapsed="0.000999"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>success</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.708113" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${json}[success]</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-10-29T16:34:12.708113" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<arg>400</arg>
<doc>Verifica resposta de erro</doc>
<status status="PASS" start="2025-10-29T16:34:12.704965" elapsed="0.003148"/>
</kw>
<doc>Test POST /theaters with missing required fields</doc>
<status status="PASS" start="2025-10-29T16:34:12.496856" elapsed="0.211257"/>
</test>
<test id="s1-s2-t9" name="Create Theater With Duplicate Name" line="63">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.717492" level="INFO">${timestamp} = 1761766452</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:12.716492" elapsed="0.001000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.717492" level="INFO">${random_num} = 10</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:12.717492" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:12.718503" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:12.718503" level="INFO">${fake_name} = Duplicate Theater</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:12.718503" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:12.719504" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:12.719504" level="INFO">${fake_capacity} = 128</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:12.718503" elapsed="0.001001"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.719504" level="INFO">${theater_data} = {'name': 'Duplicate Theater', 'capacity': 128, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.719504" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:12.720490" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.720490" level="INFO">${theater_data} = {'name': 'Duplicate Theater', 'capacity': 128, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=Duplicate Theater</arg>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:12.715491" elapsed="0.004999"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.721997" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.721997" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.723004" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.723004" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:12.849344" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:12.849344" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-etfY8Yky2E90+pIODwvJuUvJnag"', 'Date': 'Wed, 29 Oct 2025 19:34:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA"}} 
 </msg>
<msg time="2025-10-29T16:34:12.849344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:12.723004" elapsed="0.126340"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.850342" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:12.849344" elapsed="0.000998"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.850342" elapsed="0.001000"/>
</return>
<msg time="2025-10-29T16:34:12.851342" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:12.721997" elapsed="0.129345"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.851342" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.851342" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:12.721997" elapsed="0.129345"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:12.851342" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.851342" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:12.720490" elapsed="0.130852"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.852342" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS5...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.851342" elapsed="0.001000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:12.985511" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MiwiZXhwIjoxNzYxODUyODUyfQ.Uf3ci5GRS58ApD_w9qh-63txJ9KbgE_ol9k_NSk05OA', 'Content-Length': '66'} 
 body=b'{"name": "Duplicate Theater", "capacity": 128, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:12.985511" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '96', 'ETag': 'W/"60-xoBEFfljxtxNEDpoavr/HNCL8CI"', 'Date': 'Wed, 29 Oct 2025 19:34:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Duplicate field value entered","field":{"name":"Duplicate Theater"}} 
 </msg>
<msg time="2025-10-29T16:34:12.985511" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:12.852342" elapsed="0.133169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:12.985511" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:12.986519" level="INFO">${response1} = &lt;Response [400]&gt;</msg>
<var>${response1}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:12.720490" elapsed="0.266029"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.988510" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.988510" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:12.989509" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:12.988510" elapsed="0.000999"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:13.121080" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:13.121080" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-rRvTq7Dq/zbflaedmgntRekzC9g"', 'Date': 'Wed, 29 Oct 2025 19:34:13 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY"}} 
 </msg>
<msg time="2025-10-29T16:34:13.121080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:12.989509" elapsed="0.131571"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.122589" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:13.121080" elapsed="0.001509"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.122589" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.123599" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:12.988510" elapsed="0.135089"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.123599" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.123599" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:12.987515" elapsed="0.136084"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.123599" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.123599" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:12.987515" elapsed="0.136084"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.124599" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.123599" elapsed="0.001000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:13.254658" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY', 'Content-Length': '66'} 
 body=b'{"name": "Duplicate Theater", "capacity": 128, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:13.254658" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '96', 'ETag': 'W/"60-xoBEFfljxtxNEDpoavr/HNCL8CI"', 'Date': 'Wed, 29 Oct 2025 19:34:13 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Duplicate field value entered","field":{"name":"Duplicate Theater"}} 
 </msg>
<msg time="2025-10-29T16:34:13.254658" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:13.124599" elapsed="0.130059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:13.254658" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.254658" level="INFO">${response2} = &lt;Response [400]&gt;</msg>
<var>${response2}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:12.986519" elapsed="0.268139"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.257652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-10-29T16:34:13.257652" level="FAIL">400 != 409</msg>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-10-29T16:34:13.255659" elapsed="0.001993">400 != 409</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.257652" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>success</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.257652" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${json}[success]</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.257652" elapsed="0.000000"/>
</kw>
<arg>${response2}</arg>
<arg>409</arg>
<doc>Verifica resposta de erro</doc>
<status status="FAIL" start="2025-10-29T16:34:13.255659" elapsed="0.001993">400 != 409</status>
</kw>
<doc>Test POST /theaters with existing theater name</doc>
<status status="FAIL" start="2025-10-29T16:34:12.713484" elapsed="0.545399">400 != 409</status>
</test>
<test id="s1-s2-t10" name="Update Theater Successfully" line="70">
<kw name="Create Theater And Get ID" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.268891" level="INFO">${timestamp} = 1761766453</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:13.268891" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.268891" level="INFO">${random_num} = 3</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:13.268891" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:13.269880" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:13.269880" level="INFO">${fake_name} = Theater_1761766453_3</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:13.268891" elapsed="0.000989"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:13.269880" elapsed="0.001004"/>
</kw>
<msg time="2025-10-29T16:34:13.270884" level="INFO">${fake_capacity} = 63</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:13.269880" elapsed="0.001004"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.271884" level="INFO">${theater_data} = {'name': 'Theater_1761766453_3', 'capacity': 63, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.270884" elapsed="0.001000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:13.271884" elapsed="0.000000"/>
</return>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:13.267900" elapsed="0.003984"/>
</kw>
<msg time="2025-10-29T16:34:13.271884" level="INFO">${theater_data} = {'name': 'Theater_1761766453_3', 'capacity': 63, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>$theater_data is ${None}</arg>
<arg>Generate Fake Theater Data</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${theater_data}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:13.267900" elapsed="0.003984"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.273882" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.273882" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.273882" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.273882" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:13.401721" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:13.401721" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-rRvTq7Dq/zbflaedmgntRekzC9g"', 'Date': 'Wed, 29 Oct 2025 19:34:13 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY"}} 
 </msg>
<msg time="2025-10-29T16:34:13.402716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:13.273882" elapsed="0.128834"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.403709" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:13.402716" elapsed="0.002098"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.404814" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.404814" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:13.272883" elapsed="0.131931"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.404814" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.404814" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:13.272883" elapsed="0.131931"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.404814" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.404814" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:13.272883" elapsed="0.131931"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.405820" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.405820" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:13.534745" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY', 'Content-Length': '68'} 
 body=b'{"name": "Theater_1761766453_3", "capacity": 63, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:13.534745" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '238', 'ETag': 'W/"ee-DoSSQf1diiBw8FUdvq6qsc7RXVM"', 'Date': 'Wed, 29 Oct 2025 19:34:13 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater_1761766453_3","capacity":63,"type":"standard","_id":"69026c35735d793ab0538ab1","createdAt":"2025-10-29T19:34:13.469Z","updatedAt":"2025-10-29T19:34:13.469Z","__v":0,"id":"69026c35735d793ab0538ab1"}} 
 </msg>
<msg time="2025-10-29T16:34:13.534745" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:13.405820" elapsed="0.128925"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:13.534745" elapsed="0.001012"/>
</return>
<msg time="2025-10-29T16:34:13.535757" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:13.271884" elapsed="0.263873"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.537762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:13.536756" elapsed="0.001006"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.538761" level="INFO">${json} = {'success': True, 'data': {'name': 'Theater_1761766453_3', 'capacity': 63, 'type': 'standard', '_id': '69026c35735d793ab0538ab1', 'createdAt': '2025-10-29T19:34:13.469Z', 'updatedAt': '2025-10-29T19:3...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:13.537762" elapsed="0.000999"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<msg time="2025-10-29T16:34:13.538761" level="FAIL">Dictionary does not contain key 'id'.</msg>
<arg>${json}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="FAIL" start="2025-10-29T16:34:13.538761" elapsed="0.000000">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.539761" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.539761" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.539761" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.539761" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="FAIL" start="2025-10-29T16:34:13.535757" elapsed="0.004004">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.539761" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_id}</value>
<status status="NOT RUN" start="2025-10-29T16:34:13.539761" elapsed="0.001000"/>
</return>
<var>${theater_id}</var>
<doc>Cria theater e retorna o ID</doc>
<status status="FAIL" start="2025-10-29T16:34:13.266876" elapsed="0.273885">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${update_data}</var>
<arg>capacity=200</arg>
<arg>type=VIP</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.540761" elapsed="0.000000"/>
</kw>
<kw name="Update Theater" owner="theater">
<var>${response}</var>
<arg>${theater_id}</arg>
<arg>${update_data}</arg>
<doc>Atualiza um theater existente</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.541756" elapsed="0.000000"/>
</kw>
<kw name="Verify Theater Response Structure" owner="theater">
<arg>${response}</arg>
<doc>Verifica estrutura da resposta de theater</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.541756" elapsed="0.000000"/>
</kw>
<doc>Test PUT /theaters/{id} with valid data</doc>
<status status="FAIL" start="2025-10-29T16:34:13.263876" elapsed="0.277880">Dictionary does not contain key 'id'.</status>
</test>
<test id="s1-s2-t11" name="Update Theater Without Authentication" line="77">
<kw name="Create Theater And Get ID" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.552065" level="INFO">${timestamp} = 1761766453</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:13.552065" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.553058" level="INFO">${random_num} = 4</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:13.552065" elapsed="0.000993"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:13.553058" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:13.553058" level="INFO">${fake_name} = Theater_1761766453_4</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:13.553058" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:13.554052" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:13.554052" level="INFO">${fake_capacity} = 69</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:13.554052" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.555051" level="INFO">${theater_data} = {'name': 'Theater_1761766453_4', 'capacity': 69, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.554052" elapsed="0.000999"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:13.555051" elapsed="0.000000"/>
</return>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:13.552065" elapsed="0.002986"/>
</kw>
<msg time="2025-10-29T16:34:13.555051" level="INFO">${theater_data} = {'name': 'Theater_1761766453_4', 'capacity': 69, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>$theater_data is ${None}</arg>
<arg>Generate Fake Theater Data</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${theater_data}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:13.551053" elapsed="0.003998"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.557053" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.557053" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.557053" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.557053" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:13.686515" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:13.686515" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-rRvTq7Dq/zbflaedmgntRekzC9g"', 'Date': 'Wed, 29 Oct 2025 19:34:13 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY"}} 
 </msg>
<msg time="2025-10-29T16:34:13.686515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:13.557053" elapsed="0.129462"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.688443" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:13.686515" elapsed="0.001928"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.688443" elapsed="0.000999"/>
</return>
<msg time="2025-10-29T16:34:13.689442" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:13.556059" elapsed="0.133383"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.689442" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.689442" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:13.556059" elapsed="0.133383"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.689442" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.689442" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:13.555051" elapsed="0.134391"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.690442" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.689442" elapsed="0.001000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:13.822528" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY', 'Content-Length': '68'} 
 body=b'{"name": "Theater_1761766453_4", "capacity": 69, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:13.822528" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '238', 'ETag': 'W/"ee-aiZDXrz8hQ4M7QLDA1eXVEdy3Es"', 'Date': 'Wed, 29 Oct 2025 19:34:13 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater_1761766453_4","capacity":69,"type":"standard","_id":"69026c35735d793ab0538ab5","createdAt":"2025-10-29T19:34:13.754Z","updatedAt":"2025-10-29T19:34:13.754Z","__v":0,"id":"69026c35735d793ab0538ab5"}} 
 </msg>
<msg time="2025-10-29T16:34:13.822528" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:13.690442" elapsed="0.132086"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:13.822528" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.822528" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:13.555051" elapsed="0.267477"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.825057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:13.822528" elapsed="0.002529"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.826055" level="INFO">${json} = {'success': True, 'data': {'name': 'Theater_1761766453_4', 'capacity': 69, 'type': 'standard', '_id': '69026c35735d793ab0538ab5', 'createdAt': '2025-10-29T19:34:13.754Z', 'updatedAt': '2025-10-29T19:3...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:13.825057" elapsed="0.000998"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<msg time="2025-10-29T16:34:13.826055" level="FAIL">Dictionary does not contain key 'id'.</msg>
<arg>${json}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="FAIL" start="2025-10-29T16:34:13.826055" elapsed="0.000000">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.826055" elapsed="0.001000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.827055" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.827382" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.827382" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="FAIL" start="2025-10-29T16:34:13.822528" elapsed="0.004854">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.827382" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_id}</value>
<status status="NOT RUN" start="2025-10-29T16:34:13.827382" elapsed="0.001016"/>
</return>
<var>${theater_id}</var>
<doc>Cria theater e retorna o ID</doc>
<status status="FAIL" start="2025-10-29T16:34:13.551053" elapsed="0.277345">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${update_data}</var>
<arg>capacity=200</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.828398" elapsed="0.000000"/>
</kw>
<kw name="Update Theater" owner="theater">
<var>${response}</var>
<arg>${theater_id}</arg>
<arg>${update_data}</arg>
<arg>${None}</arg>
<doc>Atualiza um theater existente</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.829394" elapsed="0.000000"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>401</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T16:34:13.829394" elapsed="0.000000"/>
</kw>
<doc>Test PUT /theaters/{id} without admin token</doc>
<status status="FAIL" start="2025-10-29T16:34:13.547046" elapsed="0.283342">Dictionary does not contain key 'id'.</status>
</test>
<test id="s1-s2-t12" name="Update Non-Existent Theater" line="84">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.839341" level="INFO">${update_data} = {'capacity': '200'}</msg>
<var>${update_data}</var>
<arg>capacity=200</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.839341" elapsed="0.000000"/>
</kw>
<kw name="Update Theater" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.843240" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.843240" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.844237" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.843240" elapsed="0.000997"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:13.971113" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:13.971113" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-rRvTq7Dq/zbflaedmgntRekzC9g"', 'Date': 'Wed, 29 Oct 2025 19:34:13 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY"}} 
 </msg>
<msg time="2025-10-29T16:34:13.971113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:13.844237" elapsed="0.126876"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.973106" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:13.971113" elapsed="0.001993"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.973106" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.973106" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:13.842238" elapsed="0.130868"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.973106" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:13.973106" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:13.841165" elapsed="0.133110"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:13.974275" elapsed="0.000000"/>
</return>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:13.841165" elapsed="0.133110"/>
</kw>
<msg time="2025-10-29T16:34:13.974275" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY</msg>
<var>${token}</var>
<arg>$auth_token is ${None}</arg>
<arg>Get Admin Token For Theaters</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:13.841165" elapsed="0.133110"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:13.974275" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:13.974275" elapsed="0.000000"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:14.041081" level="INFO">PUT Request : url=http://localhost:3000/api/v1/theaters/invalid_theater_id 
 path_url=/api/v1/theaters/invalid_theater_id 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1MywiZXhwIjoxNzYxODUyODUzfQ.BHTwty4kKn4R9hNh_NUASdccMNCb8U99GOnX_pOf-DY', 'Content-Length': '19'} 
 body=b'{"capacity": "200"}' 
 </msg>
<msg time="2025-10-29T16:34:14.041081" level="INFO">PUT Response : url=http://localhost:3000/api/v1/theaters/invalid_theater_id 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1809', 'ETag': 'W/"711-A7AkJqih9NGpUJXMj3pnAa8sE6A"', 'Date': 'Wed, 29 Oct 2025 19:34:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Resource not found","stack":"CastError: Cast to ObjectId failed for value \"invalid_theater_id\" (type string) at path \"_id\" for model \"Theater\"\n    at SchemaObjectId.cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async exports.updateTheater (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\src\\controllers\\theaterController.js:72:21)"} 
 </msg>
<msg time="2025-10-29T16:34:14.041081" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters/${theater_id}</arg>
<arg>json=${update_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:13.974275" elapsed="0.067815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:14.042090" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.042556" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>invalid_theater_id</arg>
<arg>${update_data}</arg>
<doc>Atualiza um theater existente</doc>
<status status="PASS" start="2025-10-29T16:34:13.840345" elapsed="0.202211"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.044606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-10-29T16:34:14.044606" level="FAIL">400 != 404</msg>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-10-29T16:34:14.043615" elapsed="0.000991">400 != 404</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.044606" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>success</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.044606" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${json}[success]</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.044606" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<arg>404</arg>
<doc>Verifica resposta de erro</doc>
<status status="FAIL" start="2025-10-29T16:34:14.042556" elapsed="0.002050">400 != 404</status>
</kw>
<doc>Test PUT /theaters/{id} with invalid theater ID</doc>
<status status="FAIL" start="2025-10-29T16:34:13.836343" elapsed="0.209254">400 != 404</status>
</test>
<test id="s1-s2-t13" name="Delete Theater Successfully" line="90">
<kw name="Create Theater And Get ID" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.055605" level="INFO">${timestamp} = 1761766454</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:14.054611" elapsed="0.000994"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.055605" level="INFO">${random_num} = 3</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:14.055605" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:14.056480" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:14.056480" level="INFO">${fake_name} = Theater_1761766454_3</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.055605" elapsed="0.000875"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:14.057535" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:14.057535" level="INFO">${fake_capacity} = 84</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.056480" elapsed="0.001055"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.058545" level="INFO">${theater_data} = {'name': 'Theater_1761766454_3', 'capacity': 84, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.058545" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:14.058545" elapsed="0.000000"/>
</return>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:14.054611" elapsed="0.003934"/>
</kw>
<msg time="2025-10-29T16:34:14.058545" level="INFO">${theater_data} = {'name': 'Theater_1761766454_3', 'capacity': 84, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>$theater_data is ${None}</arg>
<arg>Generate Fake Theater Data</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${theater_data}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.054611" elapsed="0.003934"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.060538" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.060538" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.060538" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.060538" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:14.189411" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:14.189411" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-OPHgPS9Vava15MlfsftcSNTaM1Y"', 'Date': 'Wed, 29 Oct 2025 19:34:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo"}} 
 </msg>
<msg time="2025-10-29T16:34:14.189411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:14.060538" elapsed="0.128873"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.191413" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:14.189411" elapsed="0.002002"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.191413" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.191413" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:14.059538" elapsed="0.131875"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.191413" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.192414" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:14.059538" elapsed="0.132876"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.192414" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.192414" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:14.059538" elapsed="0.132876"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.192414" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.192414" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:14.324596" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo', 'Content-Length': '68'} 
 body=b'{"name": "Theater_1761766454_3", "capacity": 84, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:14.324596" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '238', 'ETag': 'W/"ee-otT3y08mj71MxArx3Poi1UWaaFM"', 'Date': 'Wed, 29 Oct 2025 19:34:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater_1761766454_3","capacity":84,"type":"standard","_id":"69026c36735d793ab0538abb","createdAt":"2025-10-29T19:34:14.258Z","updatedAt":"2025-10-29T19:34:14.258Z","__v":0,"id":"69026c36735d793ab0538abb"}} 
 </msg>
<msg time="2025-10-29T16:34:14.324596" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:14.192414" elapsed="0.132182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:14.324596" elapsed="0.000998"/>
</return>
<msg time="2025-10-29T16:34:14.325594" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:14.058545" elapsed="0.267049"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.327107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:14.325594" elapsed="0.001513"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.329125" level="INFO">${json} = {'success': True, 'data': {'name': 'Theater_1761766454_3', 'capacity': 84, 'type': 'standard', '_id': '69026c36735d793ab0538abb', 'createdAt': '2025-10-29T19:34:14.258Z', 'updatedAt': '2025-10-29T19:3...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:14.328120" elapsed="0.001005"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<msg time="2025-10-29T16:34:14.329125" level="FAIL">Dictionary does not contain key 'id'.</msg>
<arg>${json}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="FAIL" start="2025-10-29T16:34:14.329125" elapsed="0.000000">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.330122" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.330122" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.330122" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.330122" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="FAIL" start="2025-10-29T16:34:14.325594" elapsed="0.004528">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.330122" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_id}</value>
<status status="NOT RUN" start="2025-10-29T16:34:14.330122" elapsed="0.000000"/>
</return>
<var>${theater_id}</var>
<doc>Cria theater e retorna o ID</doc>
<status status="FAIL" start="2025-10-29T16:34:14.053601" elapsed="0.277521">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Delete Theater" owner="theater">
<var>${response}</var>
<arg>${theater_id}</arg>
<doc>Deleta um theater</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.331122" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.331122" elapsed="0.000994"/>
</kw>
<doc>Test DELETE /theaters/{id} with valid theater ID</doc>
<status status="FAIL" start="2025-10-29T16:34:14.050612" elapsed="0.281504">Dictionary does not contain key 'id'.</status>
</test>
<test id="s1-s2-t14" name="Delete Theater Without Authentication" line="96">
<kw name="Create Theater And Get ID" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.344128" level="INFO">${timestamp} = 1761766454</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:14.344128" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.345129" level="INFO">${random_num} = 3</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:14.345129" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:14.345129" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:14.345129" level="INFO">${fake_name} = Theater_1761766454_3</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.345129" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:14.346129" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:14.346129" level="INFO">${fake_capacity} = 138</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.346129" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.346129" level="INFO">${theater_data} = {'name': 'Theater_1761766454_3', 'capacity': 138, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.346129" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:14.347128" elapsed="0.000000"/>
</return>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:14.344128" elapsed="0.003000"/>
</kw>
<msg time="2025-10-29T16:34:14.347128" level="INFO">${theater_data} = {'name': 'Theater_1761766454_3', 'capacity': 138, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>$theater_data is ${None}</arg>
<arg>Generate Fake Theater Data</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${theater_data}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.342121" elapsed="0.005007"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.349130" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.349130" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.349130" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.349130" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:14.478447" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:14.478447" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-OPHgPS9Vava15MlfsftcSNTaM1Y"', 'Date': 'Wed, 29 Oct 2025 19:34:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo"}} 
 </msg>
<msg time="2025-10-29T16:34:14.478447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:14.350134" elapsed="0.128313"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.480430" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:14.479431" elapsed="0.000999"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.480430" elapsed="0.001000"/>
</return>
<msg time="2025-10-29T16:34:14.481430" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:14.348129" elapsed="0.133301"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.481430" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.481430" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:14.348129" elapsed="0.133301"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.481430" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.481430" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:14.347128" elapsed="0.134302"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.482429" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.481430" elapsed="0.000999"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:14.610297" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo', 'Content-Length': '69'} 
 body=b'{"name": "Theater_1761766454_3", "capacity": 138, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:14.610297" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '99', 'ETag': 'W/"63-xww0KoX6vSntKhIPlxUN0licAkA"', 'Date': 'Wed, 29 Oct 2025 19:34:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Duplicate field value entered","field":{"name":"Theater_1761766454_3"}} 
 </msg>
<msg time="2025-10-29T16:34:14.611303" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:14.482429" elapsed="0.128874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:14.611303" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.611303" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:14.347128" elapsed="0.264175"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.613035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-10-29T16:34:14.613035" level="FAIL">400 != 201</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-10-29T16:34:14.612005" elapsed="0.001030">400 != 201</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.613035" elapsed="0.001009"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.614044" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.614044" elapsed="0.000592"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.614636" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.614636" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.614636" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="FAIL" start="2025-10-29T16:34:14.612005" elapsed="0.002631">400 != 201</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.615232" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_id}</value>
<status status="NOT RUN" start="2025-10-29T16:34:14.615232" elapsed="0.000000"/>
</return>
<var>${theater_id}</var>
<doc>Cria theater e retorna o ID</doc>
<status status="FAIL" start="2025-10-29T16:34:14.341118" elapsed="0.274114">400 != 201</status>
</kw>
<kw name="Delete Theater" owner="theater">
<var>${response}</var>
<arg>${theater_id}</arg>
<arg>${None}</arg>
<doc>Deleta um theater</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.615232" elapsed="0.000000"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>401</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.615232" elapsed="0.000000"/>
</kw>
<doc>Test DELETE /theaters/{id} without admin token</doc>
<status status="FAIL" start="2025-10-29T16:34:14.338117" elapsed="0.277115">400 != 201</status>
</test>
<test id="s1-s2-t15" name="Delete Non-Existent Theater" line="102">
<kw name="Delete Theater" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.625838" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.624975" elapsed="0.000863"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.625838" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.625838" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:14.757770" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:14.757770" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-OPHgPS9Vava15MlfsftcSNTaM1Y"', 'Date': 'Wed, 29 Oct 2025 19:34:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo"}} 
 </msg>
<msg time="2025-10-29T16:34:14.757770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:14.625838" elapsed="0.131932"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.758900" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:14.757770" elapsed="0.001130"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.758900" elapsed="0.001009"/>
</return>
<msg time="2025-10-29T16:34:14.759909" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:14.624975" elapsed="0.134934"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.759909" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.759909" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:14.624975" elapsed="0.134934"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.759909" elapsed="0.000000"/>
</return>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:14.623961" elapsed="0.135948"/>
</kw>
<msg time="2025-10-29T16:34:14.759909" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>$auth_token is ${None}</arg>
<arg>Get Admin Token For Theaters</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.623961" elapsed="0.135948"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.760905" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo'}</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.759909" elapsed="0.000996"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:14.826953" level="INFO">DELETE Request : url=http://localhost:3000/api/v1/theaters/invalid_theater_id 
 path_url=/api/v1/theaters/invalid_theater_id 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-29T16:34:14.826953" level="INFO">DELETE Response : url=http://localhost:3000/api/v1/theaters/invalid_theater_id 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1810', 'ETag': 'W/"712-dx7LOpQkC/sdWT7vkONDn1ukCGg"', 'Date': 'Wed, 29 Oct 2025 19:34:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Resource not found","stack":"CastError: Cast to ObjectId failed for value \"invalid_theater_id\" (type string) at path \"_id\" for model \"Theater\"\n    at SchemaObjectId.cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async exports.deleteTheater (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\src\\controllers\\theaterController.js:103:21)"} 
 </msg>
<msg time="2025-10-29T16:34:14.826953" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters/${theater_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:14.760905" elapsed="0.066048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:14.826953" elapsed="0.001310"/>
</return>
<msg time="2025-10-29T16:34:14.828263" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>invalid_theater_id</arg>
<doc>Deleta um theater</doc>
<status status="PASS" start="2025-10-29T16:34:14.622963" elapsed="0.205300"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.830270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-10-29T16:34:14.830270" level="FAIL">400 != 404</msg>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-10-29T16:34:14.829271" elapsed="0.000999">400 != 404</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.830270" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>success</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.830270" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${json}[success]</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:14.830270" elapsed="0.000999"/>
</kw>
<arg>${response}</arg>
<arg>404</arg>
<doc>Verifica resposta de erro</doc>
<status status="FAIL" start="2025-10-29T16:34:14.828263" elapsed="0.003006">400 != 404</status>
</kw>
<doc>Test DELETE /theaters/{id} with invalid theater ID</doc>
<status status="FAIL" start="2025-10-29T16:34:14.620961" elapsed="0.210477">400 != 404</status>
</test>
<test id="s1-s2-t16" name="Theater CRUD Flow" line="108">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.840349" level="INFO">${timestamp} = 1761766454</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:14.840349" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.841283" level="INFO">${random_num} = 9</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:14.840349" elapsed="0.000934"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:14.842288" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:14.842288" level="INFO">${fake_name} = Theater_1761766454_9</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.841283" elapsed="0.001005"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:14.843285" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:14.843285" level="INFO">${fake_capacity} = 61</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:14.842288" elapsed="0.000997"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.843285" level="INFO">${theater_data} = {'name': 'Theater_1761766454_9', 'capacity': 61, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.843285" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:14.843285" elapsed="0.001012"/>
</return>
<msg time="2025-10-29T16:34:14.844297" level="INFO">${theater_data} = {'name': 'Theater_1761766454_9', 'capacity': 61, 'type': 'standard'}</msg>
<var>${theater_data}</var>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:14.839278" elapsed="0.005019"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.846290" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.845283" elapsed="0.001007"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.846290" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.846290" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:14.975902" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:14.975902" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-OPHgPS9Vava15MlfsftcSNTaM1Y"', 'Date': 'Wed, 29 Oct 2025 19:34:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo"}} 
 </msg>
<msg time="2025-10-29T16:34:14.975902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:14.846290" elapsed="0.129612"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.976902" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:14.975902" elapsed="0.001000"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.976902" elapsed="0.000997"/>
</return>
<msg time="2025-10-29T16:34:14.977899" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:14.845283" elapsed="0.132616"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.977899" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.977899" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:14.845283" elapsed="0.132616"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:14.977899" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:14.977899" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:14.844297" elapsed="0.133602"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:14.978900" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:14.977899" elapsed="0.001001"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:15.105638" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NCwiZXhwIjoxNzYxODUyODU0fQ.YS2ZTpTS3-sFxYndoAvZeFrXTC1bUud-KtopHkHcDbo', 'Content-Length': '68'} 
 body=b'{"name": "Theater_1761766454_9", "capacity": 61, "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:15.106654" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '238', 'ETag': 'W/"ee-hWS34BEksVJyNZfsDvWR6LjNDjU"', 'Date': 'Wed, 29 Oct 2025 19:34:15 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater_1761766454_9","capacity":61,"type":"standard","_id":"69026c37735d793ab0538ac5","createdAt":"2025-10-29T19:34:15.041Z","updatedAt":"2025-10-29T19:34:15.041Z","__v":0,"id":"69026c37735d793ab0538ac5"}} 
 </msg>
<msg time="2025-10-29T16:34:15.106654" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:14.978900" elapsed="0.127754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:15.106654" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:15.106654" level="INFO">${create_response} = &lt;Response [201]&gt;</msg>
<var>${create_response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:14.844297" elapsed="0.262357"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.108650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:15.107643" elapsed="0.002006"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.110649" level="INFO">${json} = {'success': True, 'data': {'name': 'Theater_1761766454_9', 'capacity': 61, 'type': 'standard', '_id': '69026c37735d793ab0538ac5', 'createdAt': '2025-10-29T19:34:15.041Z', 'updatedAt': '2025-10-29T19:3...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:15.109649" elapsed="0.001000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<msg time="2025-10-29T16:34:15.110649" level="FAIL">Dictionary does not contain key 'id'.</msg>
<arg>${json}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="FAIL" start="2025-10-29T16:34:15.110649" elapsed="0.000000">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.110649" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.111650" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.111650" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.111650" elapsed="0.000000"/>
</kw>
<arg>${create_response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="FAIL" start="2025-10-29T16:34:15.107643" elapsed="0.004007">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${create_response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.111650" elapsed="0.000000"/>
</kw>
<kw name="Get Theater By ID" owner="theater">
<var>${get_response}</var>
<arg>${theater_id}</arg>
<doc>Busca theater por ID</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.112644" elapsed="0.000000"/>
</kw>
<kw name="Verify Theater Response Structure" owner="theater">
<arg>${get_response}</arg>
<doc>Verifica estrutura da resposta de theater</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.112644" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${update_data}</var>
<arg>capacity=250</arg>
<arg>type=3D</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.112644" elapsed="0.000000"/>
</kw>
<kw name="Update Theater" owner="theater">
<var>${update_response}</var>
<arg>${theater_id}</arg>
<arg>${update_data}</arg>
<doc>Atualiza um theater existente</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.112644" elapsed="0.000000"/>
</kw>
<kw name="Verify Theater Response Structure" owner="theater">
<arg>${update_response}</arg>
<doc>Verifica estrutura da resposta de theater</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.113643" elapsed="0.000000"/>
</kw>
<kw name="Delete Theater" owner="theater">
<var>${delete_response}</var>
<arg>${theater_id}</arg>
<doc>Deleta um theater</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.113643" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${delete_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.113643" elapsed="0.000000"/>
</kw>
<doc>Complete CRUD flow for theaters</doc>
<status status="FAIL" start="2025-10-29T16:34:14.837377" elapsed="0.276266">Dictionary does not contain key 'id'.</status>
</test>
<test id="s1-s2-t17" name="Create Multiple Theaters With Different Types" line="129">
<for flavor="IN">
<iter>
<kw name="Generate Fake Theater Data" owner="theater">
<var>${theater_data}</var>
<arg>type=${type}</arg>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.123668" elapsed="0.000000"/>
</kw>
<kw name="Create Theater" owner="theater">
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.124654" elapsed="0.000000"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.124654" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response.json()}[type]</arg>
<arg>${type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.124654" elapsed="0.000000"/>
</kw>
<var name="${type}"/>
<status status="NOT RUN" start="2025-10-29T16:34:15.123668" elapsed="0.000986"/>
</iter>
<msg time="2025-10-29T16:34:15.124654" level="FAIL">Value of variable '@{THEATER_TYPES}' is not list or list-like.</msg>
<var>${type}</var>
<value>@{THEATER_TYPES}</value>
<status status="FAIL" start="2025-10-29T16:34:15.122650" elapsed="0.002004">Value of variable '@{THEATER_TYPES}' is not list or list-like.</status>
</for>
<doc>Test creating theaters with all available types</doc>
<status status="FAIL" start="2025-10-29T16:34:15.119649" elapsed="0.005998">Value of variable '@{THEATER_TYPES}' is not list or list-like.</status>
</test>
<test id="s1-s2-t18" name="Theater Capacity Validation" line="138">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.134182" level="INFO">${timestamp} = 1761766455</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T16:34:15.134182" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.134182" level="INFO">${random_num} = 2</msg>
<var>${random_num}</var>
<arg>random.randint(1, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T16:34:15.134182" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:15.135194" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T16:34:15.135194" level="INFO">${fake_name} = Theater_1761766455_2</msg>
<var>${fake_name}</var>
<arg>'${name}' == '${None}'</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:15.135194" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${capacity}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:15.135194" elapsed="0.000993"/>
</kw>
<msg time="2025-10-29T16:34:15.136187" level="INFO">${fake_capacity} = 10</msg>
<var>${fake_capacity}</var>
<arg>'${capacity}' == '${None}'</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T16:34:15.135194" elapsed="0.000993"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.136187" level="INFO">${theater_data} = {'name': 'Theater_1761766455_2', 'capacity': '10', 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=standard</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:15.136187" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T16:34:15.136187" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:15.136187" level="INFO">${theater_data} = {'name': 'Theater_1761766455_2', 'capacity': '10', 'type': 'standard'}</msg>
<var>${theater_data}</var>
<arg>capacity=10</arg>
<doc>Gera dados fake para theater com type fixo 'standard'</doc>
<status status="PASS" start="2025-10-29T16:34:15.133186" elapsed="0.003993"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.138187" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:15.138187" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.139194" level="INFO">${body} = {'email': 'umadmin@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:15.139194" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:15.265787" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "umadmin@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T16:34:15.265787" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '300', 'ETag': 'W/"12c-sn13qJMOLZ28R9UuZi6ma5gOcrU"', 'Date': 'Wed, 29 Oct 2025 19:34:15 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"690259cc735d793ab0538689","name":"zuneimi","email":"umadmin@gmail.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NSwiZXhwIjoxNzYxODUyODU1fQ.LcphWZYm6AkJOQkn5gimeVJgWfMoVoeAPvjOUXdF2w0"}} 
 </msg>
<msg time="2025-10-29T16:34:15.265787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:15.139194" elapsed="0.126593"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.267790" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NSwiZXhwIjoxNzYxODUyODU1fQ.LcphWZYm6AkJOQkn5gimeVJgWfMoVoeAPvjOUXdF2w0</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:15.265787" elapsed="0.002003"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:15.267790" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:15.267790" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NSwiZXhwIjoxNzYxODUyODU1fQ.LcphWZYm6AkJOQkn5gimeVJgWfMoVoeAPvjOUXdF2w0</msg>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="PASS" start="2025-10-29T16:34:15.138187" elapsed="0.129603"/>
</kw>
<return>
<value>Bearer ${token}</value>
<status status="PASS" start="2025-10-29T16:34:15.267790" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:15.267790" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NSwiZXhwIjoxNzYxODUyODU1fQ.LcphWZYm6AkJOQkn5gimeVJgWfMoVoeAPvjOUXdF2w0</msg>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="PASS" start="2025-10-29T16:34:15.138187" elapsed="0.129603"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T16:34:15.267790" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:15.268789" level="INFO">${auth_token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NSwiZXhwIjoxNzYxODUyODU1fQ.LcphWZYm6AkJOQkn5gimeVJgWfMoVoeAPvjOUXdF2w0</msg>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="PASS" start="2025-10-29T16:34:15.137179" elapsed="0.131610"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.268789" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NSwiZXhwIjoxNzYxODUyODU1fQ.LcphWZYm6A...</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T16:34:15.268789" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T16:34:15.400990" level="INFO">POST Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1OWNjNzM1ZDc5M2FiMDUzODY4OSIsImlhdCI6MTc2MTc2NjQ1NSwiZXhwIjoxNzYxODUyODU1fQ.LcphWZYm6AkJOQkn5gimeVJgWfMoVoeAPvjOUXdF2w0', 'Content-Length': '70'} 
 body=b'{"name": "Theater_1761766455_2", "capacity": "10", "type": "standard"}' 
 </msg>
<msg time="2025-10-29T16:34:15.401551" level="INFO">POST Response : url=http://localhost:3000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '238', 'ETag': 'W/"ee-ljyd7wkmtwY4J13OelIhiEvQs5E"', 'Date': 'Wed, 29 Oct 2025 19:34:15 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater_1761766455_2","capacity":10,"type":"standard","_id":"69026c37735d793ab0538ac9","createdAt":"2025-10-29T19:34:15.334Z","updatedAt":"2025-10-29T19:34:15.334Z","__v":0,"id":"69026c37735d793ab0538ac9"}} 
 </msg>
<msg time="2025-10-29T16:34:15.401551" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T16:34:15.268789" elapsed="0.132762"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T16:34:15.401551" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T16:34:15.402099" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="PASS" start="2025-10-29T16:34:15.137179" elapsed="0.264920"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.404665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T16:34:15.402641" elapsed="0.002024"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T16:34:15.406266" level="INFO">${json} = {'success': True, 'data': {'name': 'Theater_1761766455_2', 'capacity': 10, 'type': 'standard', '_id': '69026c37735d793ab0538ac9', 'createdAt': '2025-10-29T19:34:15.334Z', 'updatedAt': '2025-10-29T19:3...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T16:34:15.404665" elapsed="0.001601"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<msg time="2025-10-29T16:34:15.406266" level="FAIL">Dictionary does not contain key 'id'.</msg>
<arg>${json}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="FAIL" start="2025-10-29T16:34:15.406266" elapsed="0.000000">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.406818" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.406818" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.406818" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.407410" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="FAIL" start="2025-10-29T16:34:15.402641" elapsed="0.004769">Dictionary does not contain key 'id'.</status>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<arg>${response.json()}[capacity]</arg>
<arg>10</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" start="2025-10-29T16:34:15.407410" elapsed="0.000562"/>
</kw>
<doc>Test theater capacity validation</doc>
<status status="FAIL" start="2025-10-29T16:34:15.130179" elapsed="0.277793">Dictionary does not contain key 'id'.</status>
</test>
<status status="FAIL" start="2025-10-29T16:34:09.217355" elapsed="6.195887"/>
</suite>
<status status="FAIL" start="2025-10-29T16:34:06.832577" elapsed="8.585982"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="13" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Server" id="s1" pass="11" fail="13" skip="0">Server</stat>
<stat name="Auth" id="s1-s1" pass="6" fail="0" skip="0">Server.Auth</stat>
<stat name="Theater" id="s1-s2" pass="5" fail="13" skip="0">Server.Theater</stat>
</suite>
</statistics>
<errors>
<msg time="2025-10-29T16:34:07.145094" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 28: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:07.145094" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 43: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:07.146087" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 79: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:07.146087" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 89: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:07.146880" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 101: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.226357" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 18: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.227381" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 24: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.227381" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 30: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.228385" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 39: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.228385" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 50: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.228385" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 59: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.229392" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 74: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.230391" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 132: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.238398" level="ERROR">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 5: Importing library 'Faker' failed: ModuleNotFoundError: No module named 'Faker'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\raphael\anaconda3\Scripts\robot.exe
  C:\Users\raphael\anaconda3\python312.zip
  C:\Users\raphael\anaconda3\DLLs
  C:\Users\raphael\anaconda3\Lib
  C:\Users\raphael\anaconda3
  C:\Users\raphael\anaconda3\Lib\site-packages
  C:\Users\raphael\anaconda3\Lib\site-packages\win32
  C:\Users\raphael\anaconda3\Lib\site-packages\win32\lib
  C:\Users\raphael\anaconda3\Lib\site-packages\Pythonwin</msg>
<msg time="2025-10-29T16:34:09.241395" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 16: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.241395" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 22: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.242389" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 31: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.242389" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 85: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.248395" level="ERROR">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 4: Importing library 'Faker' failed: ModuleNotFoundError: No module named 'Faker'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\raphael\anaconda3\Scripts\robot.exe
  C:\Users\raphael\anaconda3\python312.zip
  C:\Users\raphael\anaconda3\DLLs
  C:\Users\raphael\anaconda3\Lib
  C:\Users\raphael\anaconda3
  C:\Users\raphael\anaconda3\Lib\site-packages
  C:\Users\raphael\anaconda3\Lib\site-packages\win32
  C:\Users\raphael\anaconda3\Lib\site-packages\win32\lib
  C:\Users\raphael\anaconda3\Lib\site-packages\Pythonwin</msg>
<msg time="2025-10-29T16:34:09.258398" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 79: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.260392" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 163: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.260824" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 170: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.260824" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 180: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.260824" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 185: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.260824" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 190: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.261832" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 197: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T16:34:09.569867" level="ERROR">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 10: Importing library 'Faker' failed: ModuleNotFoundError: No module named 'Faker'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\raphael\anaconda3\Scripts\robot.exe
  C:\Users\raphael\anaconda3\python312.zip
  C:\Users\raphael\anaconda3\DLLs
  C:\Users\raphael\anaconda3\Lib
  C:\Users\raphael\anaconda3
  C:\Users\raphael\anaconda3\Lib\site-packages
  C:\Users\raphael\anaconda3\Lib\site-packages\win32
  C:\Users\raphael\anaconda3\Lib\site-packages\win32\lib
  C:\Users\raphael\anaconda3\Lib\site-packages\Pythonwin</msg>
</errors>
</robot>
