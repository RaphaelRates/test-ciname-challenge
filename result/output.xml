<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.7 on win32)" generated="2025-10-29T15:37:19.758712" rpa="false" schemaversion="5">
<suite id="s1" name="Server" source="C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\tests\server">
<suite id="s1-s1" name="Auth" source="C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\tests\server\auth.robot">
<test id="s1-s1-t1" name="TC001 - Cadastro de Usuário com Email Já Existente" line="9">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.150741" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T15:37:20.149745" elapsed="0.000996"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T15:37:20.148741" elapsed="0.003001"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.151742" level="INFO">${timestamp} = 1761763040</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:20.151742" elapsed="0.000000"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.152749" level="INFO">${existing_email} = teste_existente_1761763040@email.com</msg>
<var>${existing_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_existente_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-29T15:37:20.152749" elapsed="0.000000"/>
</kw>
<kw name="Register And Perform Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.152749" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.152749" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.154265" level="INFO">${body} = {'email': 'teste_existente_1761763040@email.com', 'password': 'senha456', 'name': 'New Test User', 'role': 'user # &lt;-- INCLUA ROLE NO BODY'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>name=${name}</arg>
<arg>role=${role} # &lt;-- INCLUA ROLE NO BODY</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.152749" elapsed="0.001516"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.380775" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '140'} 
 body=b'{"email": "teste_existente_1761763040@email.com", "password": "senha456", "name": "New Test User", "role": "user # &lt;-- INCLUA ROLE NO BODY"}' 
 </msg>
<msg time="2025-10-29T15:37:20.381782" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '324', 'ETag': 'W/"144-v1Hxfdgh93sFaYRrD6FPUhHyQuo"', 'Date': 'Wed, 29 Oct 2025 18:37:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69025ee0735d793ab0538796","name":"New Test User","email":"teste_existente_1761763040@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUwNzM1ZDc5M2FiMDUzODc5NiIsImlhdCI6MTc2MTc2MzA0MCwiZXhwIjoxNzYxODQ5NDQwfQ.6w7psOUvjxJicHY4wW0EqDKqtrkwNgz18Ul1Wyk4_cI"}} 
 </msg>
<msg time="2025-10-29T15:37:20.381782" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:20.154265" elapsed="0.227517"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.382776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:20.381782" elapsed="0.000994"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.384303" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.382776" elapsed="0.001527"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.384303" level="INFO">${body} = {'email': 'teste_existente_1761763040@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.384303" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.537734" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"email": "teste_existente_1761763040@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T15:37:20.537734" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '324', 'ETag': 'W/"144-v1Hxfdgh93sFaYRrD6FPUhHyQuo"', 'Date': 'Wed, 29 Oct 2025 18:37:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69025ee0735d793ab0538796","name":"New Test User","email":"teste_existente_1761763040@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUwNzM1ZDc5M2FiMDUzODc5NiIsImlhdCI6MTc2MTc2MzA0MCwiZXhwIjoxNzYxODQ5NDQwfQ.6w7psOUvjxJicHY4wW0EqDKqtrkwNgz18Ul1Wyk4_cI"}} 
 </msg>
<msg time="2025-10-29T15:37:20.537734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:20.384303" elapsed="0.153431"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.538734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:20.537734" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.539733" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:20.538734" elapsed="0.001998"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.541747" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUwNzM1ZDc5M2FiMDUzODc5NiIsImlhdCI6MTc2MTc2MzA0MCwiZXhwIjoxNzYxODQ5NDQwfQ.6w7psOUvjxJicHY4wW0EqDKqtrkwNgz18Ul1Wyk4_cI</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:20.540732" elapsed="0.001015"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T15:37:20.541747" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:20.541747" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUwNzM1ZDc5M2FiMDUzODc5NiIsImlhdCI6MTc2MTc2MzA0MCwiZXhwIjoxNzYxODQ5NDQwfQ.6w7psOUvjxJicHY4wW0EqDKqtrkwNgz18Ul1Wyk4_cI</msg>
<var>${token}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-29T15:37:20.382776" elapsed="0.158971"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T15:37:20.541747" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:20.541747" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUwNzM1ZDc5M2FiMDUzODc5NiIsImlhdCI6MTc2MTc2MzA0MCwiZXhwIjoxNzYxODQ5NDQwfQ.6w7psOUvjxJicHY4wW0EqDKqtrkwNgz18Ul1Wyk4_cI</msg>
<var>${token}</var>
<arg>${existing_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Registra um novo usuário e faz login imediatamente.</doc>
<status status="PASS" start="2025-10-29T15:37:20.152749" elapsed="0.388998"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.542734" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.542734" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.542734" level="INFO">${body} = {'name': 'Duplicate User', 'email': 'teste_existente_1761763040@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>name=Duplicate User</arg>
<arg>email=${existing_email}</arg>
<arg>password=${NEW_USER_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.542734" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.608529" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '99'} 
 body=b'{"name": "Duplicate User", "email": "teste_existente_1761763040@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T15:37:20.608529" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '49', 'ETag': 'W/"31-WKEMg8zALB1Ko0WjUHi/6RBGHVc"', 'Date': 'Wed, 29 Oct 2025 18:37:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"User already exists"} 
 </msg>
<msg time="2025-10-29T15:37:20.608529" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:20.542734" elapsed="0.067310"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.611060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:20.610044" elapsed="0.001016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.612049" level="INFO">Response da duplicação: {'success': False, 'message': 'User already exists'}</msg>
<arg>Response da duplicação: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:20.611060" elapsed="0.000989"/>
</kw>
<doc>Tenta cadastrar usuário com email já registrado - CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T15:37:20.147745" elapsed="0.465315"/>
</test>
<test id="s1-s1-t2" name="TC002 - Cadastro com Dados Inválidos" line="20">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.613060" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T15:37:20.613060" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T15:37:20.613060" elapsed="0.001517"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.615086" level="INFO">${timestamp} = 1761763040</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:20.614577" elapsed="0.000509"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.618631" level="INFO">@{test_cases} = [ {'name': '', 'email': 'teste1761763040@email.com', 'password': '123456'} | {'name': 'Test User', 'email': 'email-invalido', 'password': '123456'} | {'name': 'Test User', 'email': 'teste17617630402@e...</msg>
<var>@{test_cases}</var>
<arg>${{{"name": "", "email": "teste${timestamp}@email.com", "password": "123456"}}}</arg>
<arg>${{{"name": "Test User", "email": "email-invalido", "password": "123456"}}}</arg>
<arg>${{{"name": "Test User", "email": "teste${timestamp}2@email.com", "password": "123"}}}</arg>
<arg>${{{"name": "Test User", "email": "", "password": "123456"}}}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-29T15:37:20.615086" elapsed="0.004543"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.619629" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.619629" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.695873" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '72'} 
 body=b'{"name": "", "email": "teste1761763040@email.com", "password": "123456"}' 
 </msg>
<msg time="2025-10-29T15:37:20.695873" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '84', 'ETag': 'W/"54-ngttIdQLZ4eaUkzci3s3HkS64jw"', 'Date': 'Wed, 29 Oct 2025 18:37:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"name":"Name is required"}} 
 </msg>
<msg time="2025-10-29T15:37:20.696396" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:20.619629" elapsed="0.076767"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.697974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:20.696396" elapsed="0.001578"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.699552" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'name': 'Name is required'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:20.697974" elapsed="0.001578"/>
</kw>
<var name="${test_case}">{'name': '', 'email': 'teste1761763040@email.com', 'password': '123456'}</var>
<status status="PASS" start="2025-10-29T15:37:20.619629" elapsed="0.079923"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.699552" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.699552" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.777069" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '70'} 
 body=b'{"name": "Test User", "email": "email-invalido", "password": "123456"}' 
 </msg>
<msg time="2025-10-29T15:37:20.777069" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '97', 'ETag': 'W/"61-Krv9gnZpw94ZcTkLQB5OMXVuBok"', 'Date': 'Wed, 29 Oct 2025 18:37:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"email":"Please provide a valid email"}} 
 </msg>
<msg time="2025-10-29T15:37:20.777069" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:20.699552" elapsed="0.077517"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.778064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:20.777069" elapsed="0.000995"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.779065" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'email': 'Please provide a valid email'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:20.778064" elapsed="0.001001"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': 'email-invalido', 'password': '123456'}</var>
<status status="PASS" start="2025-10-29T15:37:20.699552" elapsed="0.079513"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.780064" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.780064" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.846283" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"name": "Test User", "email": "teste17617630402@email.com", "password": "123"}' 
 </msg>
<msg time="2025-10-29T15:37:20.847295" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '115', 'ETag': 'W/"73-2kjRr4xheMpIIlrrmnuX+9CkBCA"', 'Date': 'Wed, 29 Oct 2025 18:37:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"password":"Password must be at least 6 characters long"}} 
 </msg>
<msg time="2025-10-29T15:37:20.847295" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:20.780064" elapsed="0.067231"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.849289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:20.847295" elapsed="0.001994"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.850804" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'password': 'Password must be at least 6 characters long'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:20.849289" elapsed="0.001515"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': 'teste17617630402@email.com', 'password': '123'}</var>
<status status="PASS" start="2025-10-29T15:37:20.780064" elapsed="0.070740"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.850804" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.850804" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.930932" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"name": "Test User", "email": "", "password": "123456"}' 
 </msg>
<msg time="2025-10-29T15:37:20.930932" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '86', 'ETag': 'W/"56-2AeNYjR8esCaF35ZnD5LBawWrNs"', 'Date': 'Wed, 29 Oct 2025 18:37:20 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"email":"Email is required"}} 
 </msg>
<msg time="2025-10-29T15:37:20.930932" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${test_case}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:20.850804" elapsed="0.080128"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.931939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:20.930932" elapsed="0.002011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.932943" level="INFO">Response para caso inválido: {'success': False, 'message': 'Validation failed', 'errors': {'email': 'Email is required'}}</msg>
<arg>Response para caso inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:20.932943" elapsed="0.000000"/>
</kw>
<var name="${test_case}">{'name': 'Test User', 'email': '', 'password': '123456'}</var>
<status status="PASS" start="2025-10-29T15:37:20.850804" elapsed="0.082139"/>
</iter>
<var>${test_case}</var>
<value>@{test_cases}</value>
<status status="PASS" start="2025-10-29T15:37:20.619629" elapsed="0.313314"/>
</for>
<doc>Testa registro com dados faltantes/inválidos - CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T15:37:20.613060" elapsed="0.321394"/>
</test>
<test id="s1-s1-t3" name="TC003 - Login com Credenciais Inválidas" line="37">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:20.935468" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T15:37:20.935468" elapsed="0.001007"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T15:37:20.935468" elapsed="0.001007"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.936475" level="INFO">${timestamp} = 1761763040</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:20.936475" elapsed="0.000000"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.936475" level="INFO">${valid_email} = teste_login_invalido_1761763040@email.com</msg>
<var>${valid_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_login_invalido_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-29T15:37:20.936475" elapsed="0.000000"/>
</kw>
<kw name="Register And Perform Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.937485" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.937485" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:20.937485" level="INFO">${body} = {'email': 'teste_login_invalido_1761763040@email.com', 'password': 'senha456', 'name': 'New Test User', 'role': 'user # &lt;-- INCLUA ROLE NO BODY'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>name=${name}</arg>
<arg>role=${role} # &lt;-- INCLUA ROLE NO BODY</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:20.937485" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.184206" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '145'} 
 body=b'{"email": "teste_login_invalido_1761763040@email.com", "password": "senha456", "name": "New Test User", "role": "user # &lt;-- INCLUA ROLE NO BODY"}' 
 </msg>
<msg time="2025-10-29T15:37:21.184206" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '329', 'ETag': 'W/"149-gQ0TqI2qZ83p/SmSg4jo68y8OI8"', 'Date': 'Wed, 29 Oct 2025 18:37:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69025ee1735d793ab05387a3","name":"New Test User","email":"teste_login_invalido_1761763040@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhMyIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.A7Pq6n48GRdwPNmsxOszBluUXPJ8871fIkNirQaXkxQ"}} 
 </msg>
<msg time="2025-10-29T15:37:21.184206" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:20.937485" elapsed="0.246721"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.185211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.184206" elapsed="0.001005"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.185211" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.185211" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.186773" level="INFO">${body} = {'email': 'teste_login_invalido_1761763040@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.185211" elapsed="0.001562"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.326535" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '78'} 
 body=b'{"email": "teste_login_invalido_1761763040@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T15:37:21.326535" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '329', 'ETag': 'W/"149-gQ0TqI2qZ83p/SmSg4jo68y8OI8"', 'Date': 'Wed, 29 Oct 2025 18:37:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69025ee1735d793ab05387a3","name":"New Test User","email":"teste_login_invalido_1761763040@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhMyIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.A7Pq6n48GRdwPNmsxOszBluUXPJ8871fIkNirQaXkxQ"}} 
 </msg>
<msg time="2025-10-29T15:37:21.327541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:21.186773" elapsed="0.140768"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.328541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.327541" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.331056" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.330048" elapsed="0.001008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.332055" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhMyIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.A7Pq6n48GRdwPNmsxOszBluUXPJ8871fIkNirQaXkxQ</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:21.331056" elapsed="0.000999"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T15:37:21.332055" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:21.332055" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhMyIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.A7Pq6n48GRdwPNmsxOszBluUXPJ8871fIkNirQaXkxQ</msg>
<var>${token}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-29T15:37:21.185211" elapsed="0.146844"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T15:37:21.332055" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:21.333055" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhMyIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.A7Pq6n48GRdwPNmsxOszBluUXPJ8871fIkNirQaXkxQ</msg>
<var>${token}</var>
<arg>${valid_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Registra um novo usuário e faz login imediatamente.</doc>
<status status="PASS" start="2025-10-29T15:37:20.937485" elapsed="0.395570"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.335069" level="INFO">@{invalid_credentials} = [ {'email': 'naoexiste@email.com', 'password': 'senha456'} | {'email': 'teste_login_invalido_1761763040@email.com', 'password': 'senhaerrada'} ]</msg>
<var>@{invalid_credentials}</var>
<arg>${{{"email": "naoexiste@email.com", "password": "${NEW_USER_PASSWORD}"}}}</arg>
<arg>${{{"email": "${valid_email}", "password": "senhaerrada"}}}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-29T15:37:21.333055" elapsed="0.002014"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.335069" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.335069" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.403567" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"email": "naoexiste@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T15:37:21.403567" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:21.403567" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${credentials}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:21.335069" elapsed="0.068498"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.405927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.403567" elapsed="0.002360"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.406941" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.405927" elapsed="0.001014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.408937" level="INFO">Response login inválido: {'success': False, 'message': 'Invalid email or password'}</msg>
<arg>Response login inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:21.407936" elapsed="0.001001"/>
</kw>
<var name="${credentials}">{'email': 'naoexiste@email.com', 'password': 'senha456'}</var>
<status status="PASS" start="2025-10-29T15:37:21.335069" elapsed="0.073868"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.409445" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.408937" elapsed="0.000508"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.535104" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '81'} 
 body=b'{"email": "teste_login_invalido_1761763040@email.com", "password": "senhaerrada"}' 
 </msg>
<msg time="2025-10-29T15:37:21.535104" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:21.535104" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${credentials}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:21.409445" elapsed="0.125659"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.537683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.536668" elapsed="0.001015"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.538682" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.537683" elapsed="0.000999"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.539679" level="INFO">Response login inválido: {'success': False, 'message': 'Invalid email or password'}</msg>
<arg>Response login inválido: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:21.538682" elapsed="0.000997"/>
</kw>
<var name="${credentials}">{'email': 'teste_login_invalido_1761763040@email.com', 'password': 'senhaerrada'}</var>
<status status="PASS" start="2025-10-29T15:37:21.408937" elapsed="0.130742"/>
</iter>
<var>${credentials}</var>
<value>@{invalid_credentials}</value>
<status status="PASS" start="2025-10-29T15:37:21.335069" elapsed="0.204610"/>
</for>
<doc>Testa login com email/senha incorretos - CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T15:37:20.934454" elapsed="0.606235"/>
</test>
<test id="s1-s1-t4" name="TC004 - Acesso ao Perfil com Token Inválido" line="56">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.541683" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T15:37:21.541683" elapsed="0.000000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T15:37:21.541683" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.541683" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer token_invalido_123'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer token_invalido_123</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.541683" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.545182" level="INFO">GET Request : url=http://localhost:3000/api/v1/auth/me 
 path_url=/api/v1/auth/me 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer token_invalido_123'} 
 body=None 
 </msg>
<msg time="2025-10-29T15:37:21.545182" level="INFO">GET Response : url=http://localhost:3000/api/v1/auth/me 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '65', 'ETag': 'W/"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs"', 'Date': 'Wed, 29 Oct 2025 18:37:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Not authorized to access this route"} 
 </msg>
<msg time="2025-10-29T15:37:21.545182" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/me</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:21.542685" elapsed="0.002497"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.546762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.545182" elapsed="0.001580"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.548781" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.547780" elapsed="0.001001"/>
</kw>
<doc>Tenta acessar /auth/me com token inválido - CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T15:37:21.540689" elapsed="0.008092"/>
</test>
<test id="s1-s1-t5" name="TC005 - Fluxo Completo de Autenticação" line="68">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.550768" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T15:37:21.549768" elapsed="0.001000"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T15:37:21.549768" elapsed="0.001000"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.550768" level="INFO">${timestamp} = 1761763041</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:21.550768" elapsed="0.000000"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.551781" level="INFO">${flow_email} = teste_fluxo_1761763041@email.com</msg>
<var>${flow_email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_fluxo_${timestamp}@email.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-29T15:37:21.551781" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.551781" level="INFO">${new_name} = Usuário Fluxo Completo</msg>
<var>${new_name}</var>
<arg>Usuário Fluxo Completo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:21.551781" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.551781" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.551781" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.552772" level="INFO">${register_body} = {'name': 'Usuario Inicial', 'email': 'teste_fluxo_1761763041@email.com', 'password': 'senha456'}</msg>
<var>${register_body}</var>
<arg>name=Usuario Inicial</arg>
<arg>email=${flow_email}</arg>
<arg>password=${NEW_USER_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.552772" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.800288" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"name": "Usuario Inicial", "email": "teste_fluxo_1761763041@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T15:37:21.800288" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '322', 'ETag': 'W/"142-4YlcF6diEggQ7FHSWDMoeOituUQ"', 'Date': 'Wed, 29 Oct 2025 18:37:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69025ee1735d793ab05387a9","name":"Usuario Inicial","email":"teste_fluxo_1761763041@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhOSIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.VWJwUHdA0csYJl6oVtKEIAVQp4tF1NbW6IfsschJ8Vw"}} 
 </msg>
<msg time="2025-10-29T15:37:21.800288" level="INFO">${register_response} = &lt;Response [201]&gt;</msg>
<var>${register_response}</var>
<arg>cinema_api</arg>
<arg>/auth/register</arg>
<arg>json=${register_body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:21.552772" elapsed="0.247516"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.802287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${register_response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.801287" elapsed="0.001000"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.803337" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.803337" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.803337" level="INFO">${body} = {'email': 'teste_fluxo_1761763041@email.com', 'password': 'senha456'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.803337" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:21.956491" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '69'} 
 body=b'{"email": "teste_fluxo_1761763041@email.com", "password": "senha456"}' 
 </msg>
<msg time="2025-10-29T15:37:21.956491" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '322', 'ETag': 'W/"142-4YlcF6diEggQ7FHSWDMoeOituUQ"', 'Date': 'Wed, 29 Oct 2025 18:37:21 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69025ee1735d793ab05387a9","name":"Usuario Inicial","email":"teste_fluxo_1761763041@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhOSIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.VWJwUHdA0csYJl6oVtKEIAVQp4tF1NbW6IfsschJ8Vw"}} 
 </msg>
<msg time="2025-10-29T15:37:21.956491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:21.803337" elapsed="0.154161"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.958499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.957498" elapsed="0.001001"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.959566" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:21.958499" elapsed="0.001067"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.960570" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhOSIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.VWJwUHdA0csYJl6oVtKEIAVQp4tF1NbW6IfsschJ8Vw</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:21.959566" elapsed="0.001004"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T15:37:21.960570" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:21.960570" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhOSIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.VWJwUHdA0csYJl6oVtKEIAVQp4tF1NbW6IfsschJ8Vw</msg>
<var>${token}</var>
<arg>${flow_email}</arg>
<arg>${NEW_USER_PASSWORD}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-29T15:37:21.802287" elapsed="0.158283"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.961497" level="INFO">Length is 171.</msg>
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-29T15:37:21.961497" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:21.962500" level="INFO">${profile_headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhOSIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.VWJwUHdA0c...</msg>
<var>${profile_headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:21.961497" elapsed="0.001003"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:22.125438" level="INFO">GET Request : url=http://localhost:3000/api/v1/auth/me 
 path_url=/api/v1/auth/me 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhOSIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.VWJwUHdA0csYJl6oVtKEIAVQp4tF1NbW6IfsschJ8Vw'} 
 body=None 
 </msg>
<msg time="2025-10-29T15:37:22.125438" level="INFO">GET Response : url=http://localhost:3000/api/v1/auth/me 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '140', 'ETag': 'W/"8c-au87BM2ZJr2tDxssmUsxz2Mo5jw"', 'Date': 'Wed, 29 Oct 2025 18:37:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"69025ee1735d793ab05387a9","name":"Usuario Inicial","email":"teste_fluxo_1761763041@email.com","role":"user"}} 
 </msg>
<msg time="2025-10-29T15:37:22.125943" level="INFO">${profile_response} = &lt;Response [200]&gt;</msg>
<var>${profile_response}</var>
<arg>cinema_api</arg>
<arg>/auth/me</arg>
<arg>headers=${profile_headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:21.962500" elapsed="0.163443"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.126949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${profile_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:22.125943" elapsed="0.001006"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${profile_response.json()}[data][email]</arg>
<arg>${flow_email}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:22.126949" elapsed="0.002002"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.128951" level="INFO">${update_body} = {'name': 'Usuário Fluxo Completo'}</msg>
<var>${update_body}</var>
<arg>name=${new_name}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:22.128951" elapsed="0.000000"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:22.364364" level="INFO">PUT Request : url=http://localhost:3000/api/v1/auth/profile 
 path_url=/api/v1/auth/profile 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhOSIsImlhdCI6MTc2MTc2MzA0MSwiZXhwIjoxNzYxODQ5NDQxfQ.VWJwUHdA0csYJl6oVtKEIAVQp4tF1NbW6IfsschJ8Vw', 'Content-Length': '39'} 
 body=b'{"name": "Usu\\u00e1rio Fluxo Completo"}' 
 </msg>
<msg time="2025-10-29T15:37:22.364364" level="INFO">PUT Response : url=http://localhost:3000/api/v1/auth/profile 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '372', 'ETag': 'W/"174-eQn8JCr3YJZDjcJCKHpc3wcUyYk"', 'Date': 'Wed, 29 Oct 2025 18:37:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"message":"Perfil atualizado com sucesso","data":{"_id":"69025ee1735d793ab05387a9","name":"Usuário Fluxo Completo","email":"teste_fluxo_1761763041@email.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY5MDI1ZWUxNzM1ZDc5M2FiMDUzODdhOSIsImlhdCI6MTc2MTc2MzA0MiwiZXhwIjoxNzYxODQ5NDQyfQ.7gXBxvps6hRXv-m1iM8Gom7fwZnUBSail3FEzsIN5PA"}} 
 </msg>
<msg time="2025-10-29T15:37:22.364364" level="INFO">${update_response} = &lt;Response [200]&gt;</msg>
<var>${update_response}</var>
<arg>cinema_api</arg>
<arg>/auth/profile</arg>
<arg>json=${update_body}</arg>
<arg>headers=${profile_headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:22.128951" elapsed="0.235413"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.366446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${update_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:22.365363" elapsed="0.001083"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${update_response.json()}[data][name]</arg>
<arg>${new_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:22.367456" elapsed="0.001997"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.369453" level="INFO">Fluxo completo de autenticação executado com sucesso!</msg>
<arg>Fluxo completo de autenticação executado com sucesso!</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:22.369453" elapsed="0.000000"/>
</kw>
<doc>Testa fluxo completo: registro → login → perfil → update → CORRIGIDO</doc>
<status status="PASS" start="2025-10-29T15:37:21.549768" elapsed="0.820684"/>
</test>
<test id="s1-s1-t6" name="TC006 - Login com Credenciais do Raphael" line="96">
<kw name="Create API Session" owner="auth" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:22.372453" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T15:37:22.371452" elapsed="0.001001"/>
</kw>
<doc>Cria a sessão de RequestsLibrary.</doc>
<status status="PASS" start="2025-10-29T15:37:22.371452" elapsed="0.001001"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.373451" level="INFO">${specific_email} = raphaelrates.dev@gmail.com</msg>
<var>${specific_email}</var>
<arg>raphaelrates.dev@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:22.373451" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.375458" level="INFO">${specific_password} = 12345678</msg>
<var>${specific_password}</var>
<arg>12345678</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:22.375458" elapsed="0.000000"/>
</kw>
<kw name="Perform Valid Login" owner="auth">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.377476" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:22.377476" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.377476" level="INFO">${body} = {'email': 'raphaelrates.dev@gmail.com', 'password': '12345678'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:22.377476" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:22.514370" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '63'} 
 body=b'{"email": "raphaelrates.dev@gmail.com", "password": "12345678"}' 
 </msg>
<msg time="2025-10-29T15:37:22.514370" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '319', 'ETag': 'W/"13f-aASTpSA6wbqCwmoCCK0EGAoSve8"', 'Date': 'Wed, 29 Oct 2025 18:37:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"68fbbd1d5127a80a9600b456","name":"Raphael Susa Silva","email":"raphaelrates.dev@gmail.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTc2MzA0MiwiZXhwIjoxNzYxODQ5NDQyfQ.FgAmddKQwwd_qBZFqYPjp1fkGwtKkNB50KCCILiDdx8"}} 
 </msg>
<msg time="2025-10-29T15:37:22.514370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:22.377476" elapsed="0.136894"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.516414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:22.514370" elapsed="0.002044"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.517424" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:22.516414" elapsed="0.001010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.518421" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTc2MzA0MiwiZXhwIjoxNzYxODQ5NDQyfQ.FgAmddKQwwd_qBZFqYPjp1fkGwtKkNB50KCCILiDdx8</msg>
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:22.517424" elapsed="0.000997"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-10-29T15:37:22.518421" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:22.518421" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTc2MzA0MiwiZXhwIjoxNzYxODQ5NDQyfQ.FgAmddKQwwd_qBZFqYPjp1fkGwtKkNB50KCCILiDdx8</msg>
<var>${token}</var>
<arg>${specific_email}</arg>
<arg>${specific_password}</arg>
<doc>Realiza login e retorna o token JWT.</doc>
<status status="PASS" start="2025-10-29T15:37:22.376467" elapsed="0.141954"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.519419" level="INFO">Length is 171.</msg>
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-29T15:37:22.519419" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-29T15:37:22.519419" level="INFO">Login realizado com sucesso! Token obtido: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZmJiZDFkNTEyN2E4MGE5NjAwYjQ1NiIsImlhdCI6MTc2MTc2MzA0MiwiZXhwIjoxNzYxODQ5NDQyfQ.FgAmddKQwwd_qBZFqYPjp1fkGwtKkNB50KCCILiDdx8</msg>
<arg>Login realizado com sucesso! Token obtido: ${token}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-29T15:37:22.519419" elapsed="0.000000"/>
</kw>
<doc>Testa login com email: raphaelrates.dev@gmail.com e senha: 12345678</doc>
<status status="PASS" start="2025-10-29T15:37:22.370452" elapsed="0.148967"/>
</test>
<status status="PASS" start="2025-10-29T15:37:19.793312" elapsed="2.727107"/>
</suite>
<suite id="s1-s2" name="Theater" source="C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\tests\server\theater.robot">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:23.045405" level="INFO">Creating Session using : alias=cinema_api, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-29T15:37:23.045405" elapsed="0.000000"/>
</kw>
<kw name="Setup Test Environment" owner="setup">
<kw name="Create Test Users" owner="setup">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:23.046711" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:23.046711" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:23.187730" level="INFO">POST Request : url=http://localhost:3000/api/v1/setup/test-users 
 path_url=/api/v1/setup/test-users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-29T15:37:23.187730" level="INFO">POST Response : url=http://localhost:3000/api/v1/setup/test-users 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '167', 'ETag': 'W/"a7-Bosz+W/Q6GA0UjzJOObg/A7XvX4"', 'Date': 'Wed, 29 Oct 2025 18:37:23 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"message":"All test users already exist","data":{"existing":[{"email":"test@example.com","role":"user"},{"email":"admin@example.com","role":"admin"}]}} 
 </msg>
<msg time="2025-10-29T15:37:23.188730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/setup/test-users</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:23.046711" elapsed="0.142019"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T15:37:23.188730" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:23.188730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<doc>Cria usuários de teste via endpoint /setup/test-users</doc>
<status status="PASS" start="2025-10-29T15:37:23.046711" elapsed="0.142019"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T15:37:23.188730" elapsed="0.000000"/>
</return>
<doc>Cria ambiente de teste com usuários padrão</doc>
<status status="PASS" start="2025-10-29T15:37:23.045405" elapsed="0.143325"/>
</kw>
<arg>Create Session</arg>
<arg>cinema_api</arg>
<arg>${URL_API}</arg>
<arg>AND</arg>
<arg>Setup Test Environment</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2025-10-29T15:37:23.044421" elapsed="0.144309"/>
</kw>
<test id="s1-s2-t1" name="Get All Theaters Successfully" line="16">
<kw name="Get All Theaters" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:23.287615" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T15:37:23.287615" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '638', 'ETag': 'W/"27e-gI2Hjo6pFPjcVMaHnt9VibrhSe8"', 'Date': 'Wed, 29 Oct 2025 18:37:23 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"count":3,"data":[{"_id":"68f7ec484bc189e5600e8f8a","name":"Theater 1","capacity":120,"type":"standard","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8a"},{"_id":"68f7ec484bc189e5600e8f8b","name":"Theater 2","capacity":80,"type":"3D","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8b"},{"_id":"68f7ec484bc189e5600e8f8c","name":"Theater 3","capacity":60,"type":"IMAX","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8c"}]} 
 </msg>
<msg time="2025-10-29T15:37:23.287615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:23.189729" elapsed="0.098888"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T15:37:23.288617" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:23.288617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<doc>Busca todos os theaters</doc>
<status status="PASS" start="2025-10-29T15:37:23.189729" elapsed="0.098888"/>
</kw>
<kw name="Verify Theater List Structure" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:23.290623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:23.289617" elapsed="0.001006"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:23.292615" level="INFO">${json} = {'success': True, 'count': 3, 'data': [{'_id': '68f7ec484bc189e5600e8f8a', 'name': 'Theater 1', 'capacity': 120, 'type': 'standard', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '20...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:23.291615" elapsed="0.001000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:23.292615" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>count</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:23.292615" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica estrutura da lista de theaters</doc>
<status status="PASS" start="2025-10-29T15:37:23.289617" elapsed="0.002998"/>
</kw>
<msg time="2025-10-29T15:37:23.323422" level="INFO">Starting Browser process C:\Users\raphael\anaconda3\Lib\site-packages\Browser\wrapper\index.js using at 127.0.0.1:55178</msg>
<doc>Test GET /theaters returns theaters list</doc>
<status status="PASS" start="2025-10-29T15:37:23.188730" elapsed="0.104884"/>
</test>
<test id="s1-s2-t2" name="Get Theaters With Type Filter" line="21">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:24.395314" level="INFO">${params} = {'type': 'IMAX'}</msg>
<var>${params}</var>
<arg>type=IMAX</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:24.394317" elapsed="0.000997"/>
</kw>
<kw name="Get All Theaters" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:24.460746" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters?type=IMAX 
 path_url=/api/v1/theaters?type=IMAX 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T15:37:24.460746" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters?type=IMAX 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '638', 'ETag': 'W/"27e-gI2Hjo6pFPjcVMaHnt9VibrhSe8"', 'Date': 'Wed, 29 Oct 2025 18:37:24 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"count":3,"data":[{"_id":"68f7ec484bc189e5600e8f8a","name":"Theater 1","capacity":120,"type":"standard","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8a"},{"_id":"68f7ec484bc189e5600e8f8b","name":"Theater 2","capacity":80,"type":"3D","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8b"},{"_id":"68f7ec484bc189e5600e8f8c","name":"Theater 3","capacity":60,"type":"IMAX","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8c"}]} 
 </msg>
<msg time="2025-10-29T15:37:24.460746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:24.395314" elapsed="0.065432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T15:37:24.460746" elapsed="0.000997"/>
</return>
<msg time="2025-10-29T15:37:24.461743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>params=${params}</arg>
<doc>Busca todos os theaters</doc>
<status status="PASS" start="2025-10-29T15:37:24.395314" elapsed="0.066429"/>
</kw>
<kw name="Verify Theater List Structure" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:24.463745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:24.462745" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:24.466398" level="INFO">${json} = {'success': True, 'count': 3, 'data': [{'_id': '68f7ec484bc189e5600e8f8a', 'name': 'Theater 1', 'capacity': 120, 'type': 'standard', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '20...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:24.463745" elapsed="0.002653"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:24.466398" elapsed="0.000507"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>count</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:24.466905" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica estrutura da lista de theaters</doc>
<status status="PASS" start="2025-10-29T15:37:24.461743" elapsed="0.005162"/>
</kw>
<doc>Test filtering theaters by type</doc>
<status status="PASS" start="2025-10-29T15:37:24.391314" elapsed="0.075591"/>
</test>
<test id="s1-s2-t3" name="Get Theaters With Pagination" line="27">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:24.479448" level="INFO">${params} = {'limit': '5', 'page': '1'}</msg>
<var>${params}</var>
<arg>limit=5</arg>
<arg>page=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:24.478447" elapsed="0.001001"/>
</kw>
<kw name="Get All Theaters" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:24.575400" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters?limit=5&amp;page=1 
 path_url=/api/v1/theaters?limit=5&amp;page=1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T15:37:24.575906" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters?limit=5&amp;page=1 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '638', 'ETag': 'W/"27e-gI2Hjo6pFPjcVMaHnt9VibrhSe8"', 'Date': 'Wed, 29 Oct 2025 18:37:24 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"count":3,"data":[{"_id":"68f7ec484bc189e5600e8f8a","name":"Theater 1","capacity":120,"type":"standard","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8a"},{"_id":"68f7ec484bc189e5600e8f8b","name":"Theater 2","capacity":80,"type":"3D","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8b"},{"_id":"68f7ec484bc189e5600e8f8c","name":"Theater 3","capacity":60,"type":"IMAX","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","id":"68f7ec484bc189e5600e8f8c"}]} 
 </msg>
<msg time="2025-10-29T15:37:24.575906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:24.480448" elapsed="0.095458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T15:37:24.575906" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:24.575906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>params=${params}</arg>
<doc>Busca todos os theaters</doc>
<status status="PASS" start="2025-10-29T15:37:24.479448" elapsed="0.096458"/>
</kw>
<kw name="Verify Theater List Structure" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:24.578437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:24.576917" elapsed="0.001520"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:24.579447" level="INFO">${json} = {'success': True, 'count': 3, 'data': [{'_id': '68f7ec484bc189e5600e8f8a', 'name': 'Theater 1', 'capacity': 120, 'type': 'standard', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '20...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:24.578437" elapsed="0.001010"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:24.580437" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>count</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:24.580437" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica estrutura da lista de theaters</doc>
<status status="PASS" start="2025-10-29T15:37:24.576917" elapsed="0.003520"/>
</kw>
<doc>Test pagination parameters</doc>
<status status="PASS" start="2025-10-29T15:37:24.474421" elapsed="0.106016"/>
</test>
<test id="s1-s2-t4" name="Get Theater By Valid ID" line="33">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:24.593582" level="INFO">${theater_id} = 68f7ec484bc189e5600e8f8c</msg>
<var>${theater_id}</var>
<arg>68f7ec484bc189e5600e8f8c</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:24.593582" elapsed="0.000000"/>
</kw>
<kw name="Get Theater By ID" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:25.421790" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters/68f7ec484bc189e5600e8f8c 
 path_url=/api/v1/theaters/68f7ec484bc189e5600e8f8c 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T15:37:25.422787" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters/68f7ec484bc189e5600e8f8c 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '812872', 'ETag': 'W/"c6748-qbwdCMuHnBj4DwE1cyvIsrT1V7s"', 'Date': 'Wed, 29 Oct 2025 18:37:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"68f7ec484bc189e5600e8f8c","name":"Theater 3","capacity":60,"type":"IMAX","createdAt":"2025-10-21T20:25:44.241Z","__v":0,"updatedAt":"2025-10-21T20:25:44.241Z","sessions":[{"_id":"68f7ec484bc189e5600e8f95","movie":"68f7ec484bc189e5600e8f86","theater":"68f7ec484bc189e5600e8f8c","datetime":"2025-10-21T19:00:00.000Z","fullPrice":15,"halfPrice":7.5,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"}],"createdAt":"2025-10-21T20:25:44.333Z","__v":0,"updatedAt":"2025-10-21T20:25:44.734Z","id":"68f7ec484bc189e5600e8f95"},{"_id":"68f7ec484bc189e5600e8f9e","movie":"68f7ec484bc189e5600e8f87","theater":"68f7ec484bc189e5600e8f8c","datetime":"2025-10-21T19:00:00.000Z","fullPrice":15,"halfPrice":7.5,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"}],"createdAt":"2025-10-21T20:25:44.356Z","__v":0,"updatedAt":"2025-10-21T20:25:44.735Z","id":"68f7ec484bc189e5600e8f9e"},{"_id":"68f7ec484bc189e5600e8fae","movie":"68f7ec484bc189e5600e8f86","theater":"68f7ec484bc189e5600e8f8c","datetime":"2025-10-22T19:00:00.000Z","fullPrice":15,"halfPrice":7.5,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"}],"createdAt":"2025-10-21T20:25:44.375Z","__v":0,"updatedAt":"2025-10-21T20:25:44.738Z","id":"68f7ec484bc189e5600e8fae"},{"_id":"68f7ec484bc189e5600e8fbf","movie":"68f7ec484bc189e5600e8f88","theater":"68f7ec484bc189e5600e8f8c","datetime":"2025-10-22T15:00:00.000Z","fullPrice":15,"halfPrice":7.5,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"av... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-10-29T15:37:25.422787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters/${theater_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-29T15:37:24.595127" elapsed="0.827660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-29T15:37:25.422787" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:25.422787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${theater_id}</arg>
<doc>Busca theater por ID</doc>
<status status="PASS" start="2025-10-29T15:37:24.595127" elapsed="0.827660"/>
</kw>
<kw name="Verify Theater Response Structure" owner="theater">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.427473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:25.425299" elapsed="0.002174"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.442766" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()}[success]</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-29T15:37:25.427473" elapsed="0.015293"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.464320" level="INFO">${json} = {'success': True, 'data': {'_id': '68f7ec484bc189e5600e8f8c', 'name': 'Theater 3', 'capacity': 60, 'type': 'IMAX', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '2025-10-21T20:25:44....</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:25.442766" elapsed="0.021554"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.464320" elapsed="0.000992"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.475361" level="INFO">${data} = {'_id': '68f7ec484bc189e5600e8f8c', 'name': 'Theater 3', 'capacity': 60, 'type': 'IMAX', 'createdAt': '2025-10-21T20:25:44.241Z', '__v': 0, 'updatedAt': '2025-10-21T20:25:44.241Z', 'sessions': [{'_id'...</msg>
<var>${data}</var>
<arg>${json}[data]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:25.465312" elapsed="0.011065"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.476377" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.476377" elapsed="0.001003"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>capacity</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.477380" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>type</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.477380" elapsed="0.000000"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${data}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.477380" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<doc>Verifica estrutura da resposta de theater</doc>
<status status="PASS" start="2025-10-29T15:37:25.424294" elapsed="0.053086"/>
</kw>
<doc>Test GET /theaters/{id} with valid theater ID</doc>
<status status="PASS" start="2025-10-29T15:37:24.590583" elapsed="0.887802"/>
</test>
<test id="s1-s2-t5" name="Get Theater By Invalid ID" line="39">
<kw name="Get Theater By ID" owner="theater">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:25.490951" level="INFO">GET Request : url=http://localhost:3000/api/v1/theaters/invalid_theater_id 
 path_url=/api/v1/theaters/invalid_theater_id 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-29T15:37:25.490951" level="INFO">GET Response : url=http://localhost:3000/api/v1/theaters/invalid_theater_id 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1810', 'ETag': 'W/"712-KT4tOivtWW9UezALsYmH0rzGwpc"', 'Date': 'Wed, 29 Oct 2025 18:37:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Resource not found","stack":"CastError: Cast to ObjectId failed for value \"invalid_theater_id\" (type string) at path \"_id\" for model \"Theater\"\n    at SchemaObjectId.cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async exports.getTheaterById (C:\\Users\\raphael\\Documents\\GitHub\\learn\\Compass\\cinema\\project\\cinema-challenge-back\\src\\controllers\\theaterController.js:29:21)"} 
 </msg>
<msg time="2025-10-29T15:37:25.490951" level="FAIL">HTTPError: 400 Client Error: Bad Request for url: http://localhost:3000/api/v1/theaters/invalid_theater_id</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters/${theater_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:25.486440" elapsed="0.006518">HTTPError: 400 Client Error: Bad Request for url: http://localhost:3000/api/v1/theaters/invalid_theater_id</status>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.492958" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>invalid_theater_id</arg>
<doc>Busca theater por ID</doc>
<status status="FAIL" start="2025-10-29T15:37:25.485431" elapsed="0.007527">HTTPError: 400 Client Error: Bad Request for url: http://localhost:3000/api/v1/theaters/invalid_theater_id</status>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>404</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.492958" elapsed="0.001511"/>
</kw>
<doc>Test GET /theaters/{id} with non-existent theater ID</doc>
<status status="FAIL" start="2025-10-29T15:37:25.481913" elapsed="0.013564">HTTPError: 400 Client Error: Bad Request for url: http://localhost:3000/api/v1/theaters/invalid_theater_id</status>
</test>
<test id="s1-s2-t6" name="Create Theater As Admin Successfully" line="44">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.509468" level="INFO">${timestamp} = 1761763045</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:25.509468" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.509468" level="INFO">${random_num} = 6514</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.509468" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:25.510467" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.511463" level="INFO">${fake_name} = Theater_1761763045_6514</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.509468" elapsed="0.001995"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.511463" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.512471" level="INFO">${fake_capacity} = 211</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.511463" elapsed="0.001008"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.512471" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.512471" level="INFO">${fake_type} = X</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.512471" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.513468" level="INFO">${theater_data} = {'name': 'Theater_1761763045_6514', 'capacity': 211, 'type': 'X'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.512471" elapsed="0.000997"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:25.513468" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:25.513468" level="INFO">${theater_data} = {'name': 'Theater_1761763045_6514', 'capacity': 211, 'type': 'X'}</msg>
<var>${theater_data}</var>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:25.508463" elapsed="0.005005"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.515473" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.515473" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.515991" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.515991" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:25.580418" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:25.580418" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:25.580418" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:25.515991" elapsed="0.065425">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.581416" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.581416" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.581416" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.582423" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:25.514463" elapsed="0.067960">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.582423" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:25.514463" elapsed="0.067960">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.582423" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:25.514463" elapsed="0.067960">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.582423" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.583415" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.583415" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:25.513468" elapsed="0.069947">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.583415" elapsed="0.000000"/>
</kw>
<doc>Test POST /theaters with valid admin token</doc>
<status status="FAIL" start="2025-10-29T15:37:25.505457" elapsed="0.078964">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t7" name="Create Theater Without Authentication" line="50">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.598387" level="INFO">${timestamp} = 1761763045</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:25.598387" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.599383" level="INFO">${random_num} = 6037</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.598387" elapsed="0.000996"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:25.599975" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.599975" level="INFO">${fake_name} = Theater_1761763045_6037</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.599383" elapsed="0.000592"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.599975" elapsed="0.001007"/>
</kw>
<msg time="2025-10-29T15:37:25.600982" level="INFO">${fake_capacity} = 169</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.599975" elapsed="0.001007"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.600982" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.602489" level="INFO">${fake_type} = P</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.600982" elapsed="0.001507"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.602489" level="INFO">${theater_data} = {'name': 'Theater_1761763045_6037', 'capacity': 169, 'type': 'P'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.602489" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:25.602489" elapsed="0.001007"/>
</return>
<msg time="2025-10-29T15:37:25.603496" level="INFO">${theater_data} = {'name': 'Theater_1761763045_6037', 'capacity': 169, 'type': 'P'}</msg>
<var>${theater_data}</var>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:25.597387" elapsed="0.006109"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.605500" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.605500" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.606518" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.605500" elapsed="0.001018"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:25.673703" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:25.675210" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:25.675210" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:25.606518" elapsed="0.068692">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.675210" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.675210" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.676734" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.676734" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:25.605500" elapsed="0.071234">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.676734" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:25.604494" elapsed="0.072240">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.676734" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:25.604494" elapsed="0.072240">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.677742" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.677742" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.677742" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>${theater_data}</arg>
<arg>${None}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:25.603496" elapsed="0.074246">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>401</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.677742" elapsed="0.001003"/>
</kw>
<doc>Test POST /theaters without admin token</doc>
<status status="FAIL" start="2025-10-29T15:37:25.591843" elapsed="0.086902">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t8" name="Create Theater With Invalid Data" line="56">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.686255" level="INFO">${invalid_data} = {'name': 'Invalid Theater'}</msg>
<var>${invalid_data}</var>
<arg>name=Invalid Theater</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.686255" elapsed="0.000000"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.688258" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.688258" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.689263" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.689263" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:25.755003" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:25.755003" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:25.755003" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:25.689263" elapsed="0.065740">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.755003" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.755003" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.755003" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.756532" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:25.688258" elapsed="0.068274">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.756532" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:25.687260" elapsed="0.069272">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.756532" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:25.687260" elapsed="0.069272">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.756532" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.756532" elapsed="0.001013"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.757545" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>${invalid_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:25.687260" elapsed="0.070285">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>400</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.757545" elapsed="0.000000"/>
</kw>
<doc>Test POST /theaters with missing required fields</doc>
<status status="FAIL" start="2025-10-29T15:37:25.682740" elapsed="0.074805">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t9" name="Create Theater With Duplicate Name" line="63">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.767661" level="INFO">${timestamp} = 1761763045</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:25.766654" elapsed="0.001007"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.767661" level="INFO">${random_num} = 6932</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.767661" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:25.768665" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.768665" level="INFO">${fake_name} = Duplicate Theater</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.768665" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.769662" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.769662" level="INFO">${fake_capacity} = 57</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.769662" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.770660" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.770660" level="INFO">${fake_type} = s</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.769662" elapsed="0.000998"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.770660" level="INFO">${theater_data} = {'name': 'Duplicate Theater', 'capacity': 57, 'type': 's'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.770660" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:25.770660" elapsed="0.001001"/>
</return>
<msg time="2025-10-29T15:37:25.771661" level="INFO">${theater_data} = {'name': 'Duplicate Theater', 'capacity': 57, 'type': 's'}</msg>
<var>${theater_data}</var>
<arg>name=Duplicate Theater</arg>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:25.765130" elapsed="0.006531"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.773664" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.773664" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.775170" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.773664" elapsed="0.001506"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:25.840362" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:25.840362" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:25.840362" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:25.775170" elapsed="0.065192">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.840362" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.840362" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.841876" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.841876" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:25.773664" elapsed="0.068212">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.841876" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:25.772665" elapsed="0.069211">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.841876" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:25.772665" elapsed="0.069211">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.841876" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.842891" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.842891" elapsed="0.000000"/>
</return>
<var>${response1}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:25.771661" elapsed="0.071230">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Theater" owner="theater">
<var>${response2}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.842891" elapsed="0.000000"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response2}</arg>
<arg>409</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.842891" elapsed="0.000000"/>
</kw>
<doc>Test POST /theaters with existing theater name</doc>
<status status="FAIL" start="2025-10-29T15:37:25.762637" elapsed="0.080254">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t10" name="Update Theater Successfully" line="70">
<kw name="Create Theater And Get ID" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.854433" level="INFO">${timestamp} = 1761763045</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:25.854433" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.855438" level="INFO">${random_num} = 9800</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.855438" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:25.855438" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.856443" level="INFO">${fake_name} = Theater_1761763045_9800</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.855438" elapsed="0.001005"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.856443" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.856443" level="INFO">${fake_capacity} = 124</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.856443" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.857443" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.858449" level="INFO">${fake_type} = d</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.856443" elapsed="0.002006"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.858449" level="INFO">${theater_data} = {'name': 'Theater_1761763045_9800', 'capacity': 124, 'type': 'd'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.858449" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:25.858449" elapsed="0.000994"/>
</return>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:25.854433" elapsed="0.005010"/>
</kw>
<msg time="2025-10-29T15:37:25.859443" level="INFO">${theater_data} = {'name': 'Theater_1761763045_9800', 'capacity': 124, 'type': 'd'}</msg>
<var>${theater_data}</var>
<arg>$theater_data is ${None}</arg>
<arg>Generate Fake Theater Data</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${theater_data}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.852927" elapsed="0.006516"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.861954" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.861954" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.862956" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.862956" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:25.949790" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:25.949790" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:25.949790" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:25.862956" elapsed="0.086834">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.950791" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.950791" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.950791" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.950791" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:25.860953" elapsed="0.089838">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.951793" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:25.860953" elapsed="0.090840">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.951793" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:25.860953" elapsed="0.090840">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.951793" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.951793" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.951793" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:25.859443" elapsed="0.092350">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.952790" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.952790" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_id}</value>
<status status="NOT RUN" start="2025-10-29T15:37:25.952790" elapsed="0.000000"/>
</return>
<var>${theater_id}</var>
<doc>Cria theater e retorna o ID</doc>
<status status="FAIL" start="2025-10-29T15:37:25.852927" elapsed="0.099863">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${update_data}</var>
<arg>capacity=200</arg>
<arg>type=VIP</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.952790" elapsed="0.000000"/>
</kw>
<kw name="Update Theater" owner="theater">
<var>${response}</var>
<arg>${theater_id}</arg>
<arg>${update_data}</arg>
<doc>Atualiza um theater existente</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.952790" elapsed="0.000000"/>
</kw>
<kw name="Verify Theater Response Structure" owner="theater">
<arg>${response}</arg>
<doc>Verifica estrutura da resposta de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:25.954295" elapsed="0.000000"/>
</kw>
<doc>Test PUT /theaters/{id} with valid data</doc>
<status status="FAIL" start="2025-10-29T15:37:25.849408" elapsed="0.104887">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t11" name="Update Theater Without Authentication" line="77">
<kw name="Create Theater And Get ID" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.964333" level="INFO">${timestamp} = 1761763045</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:25.964333" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.965340" level="INFO">${random_num} = 9653</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.964333" elapsed="0.001007"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:25.965340" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.966346" level="INFO">${fake_name} = Theater_1761763045_9653</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.965340" elapsed="0.001006"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.966346" elapsed="0.000878"/>
</kw>
<msg time="2025-10-29T15:37:25.967224" level="INFO">${fake_capacity} = 104</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.966346" elapsed="0.000878"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:25.967224" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:25.968232" level="INFO">${fake_type} = P</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.967224" elapsed="0.001008"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.968232" level="INFO">${theater_data} = {'name': 'Theater_1761763045_9653', 'capacity': 104, 'type': 'P'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.968232" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:25.968232" elapsed="0.000000"/>
</return>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:25.962826" elapsed="0.005406"/>
</kw>
<msg time="2025-10-29T15:37:25.968232" level="INFO">${theater_data} = {'name': 'Theater_1761763045_9653', 'capacity': 104, 'type': 'P'}</msg>
<var>${theater_data}</var>
<arg>$theater_data is ${None}</arg>
<arg>Generate Fake Theater Data</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${theater_data}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:25.962826" elapsed="0.005406"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.970758" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.970758" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:25.971756" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:25.970758" elapsed="0.000998"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:26.042467" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:26.042467" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:26.042467" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:25.971756" elapsed="0.071700">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.043456" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.043456" elapsed="0.001002"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.044458" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.044458" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:25.970758" elapsed="0.073700">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.044458" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:25.969743" elapsed="0.074715">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.044458" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:25.969743" elapsed="0.075727">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.045470" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.045470" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.046476" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:25.968232" elapsed="0.078244">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.046476" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.046476" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_id}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.046476" elapsed="0.000000"/>
</return>
<var>${theater_id}</var>
<doc>Cria theater e retorna o ID</doc>
<status status="FAIL" start="2025-10-29T15:37:25.961824" elapsed="0.084652">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${update_data}</var>
<arg>capacity=200</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.047482" elapsed="0.000000"/>
</kw>
<kw name="Update Theater" owner="theater">
<var>${response}</var>
<arg>${theater_id}</arg>
<arg>${update_data}</arg>
<arg>${None}</arg>
<doc>Atualiza um theater existente</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.047482" elapsed="0.001002"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>401</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.048484" elapsed="0.000000"/>
</kw>
<doc>Test PUT /theaters/{id} without admin token</doc>
<status status="FAIL" start="2025-10-29T15:37:25.959315" elapsed="0.089169">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t12" name="Update Non-Existent Theater" line="84">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.055986" level="INFO">${update_data} = {'capacity': '200'}</msg>
<var>${update_data}</var>
<arg>capacity=200</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.055986" elapsed="0.001008"/>
</kw>
<kw name="Update Theater" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.058999" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.058999" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.058999" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.058999" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:26.126749" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:26.126749" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:26.126749" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:26.058999" elapsed="0.068766">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.127765" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.127765" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.127765" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.128756" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:26.058999" elapsed="0.069757">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.128756" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:26.057998" elapsed="0.070758">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.128756" elapsed="0.000000"/>
</return>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:26.057998" elapsed="0.070758">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<var>${token}</var>
<arg>$auth_token is ${None}</arg>
<arg>Get Admin Token For Theaters</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-10-29T15:37:26.057998" elapsed="0.070758">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.128756" elapsed="0.000000"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters/${theater_id}</arg>
<arg>json=${update_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.129758" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.129758" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>invalid_theater_id</arg>
<arg>${update_data}</arg>
<doc>Atualiza um theater existente</doc>
<status status="FAIL" start="2025-10-29T15:37:26.056994" elapsed="0.072764">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>404</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.129758" elapsed="0.000000"/>
</kw>
<doc>Test PUT /theaters/{id} with invalid theater ID</doc>
<status status="FAIL" start="2025-10-29T15:37:26.053482" elapsed="0.077273">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t13" name="Delete Theater Successfully" line="90">
<kw name="Create Theater And Get ID" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.140324" level="INFO">${timestamp} = 1761763046</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:26.140324" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.141311" level="INFO">${random_num} = 8195</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.140324" elapsed="0.000987"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:26.141311" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:26.141311" level="INFO">${fake_name} = Theater_1761763046_8195</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.141311" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.144313" elapsed="0.001286"/>
</kw>
<msg time="2025-10-29T15:37:26.145599" level="INFO">${fake_capacity} = 201</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.142308" elapsed="0.003291"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.147423" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:26.147423" level="INFO">${fake_type} = D</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.145599" elapsed="0.001824"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.147423" level="INFO">${theater_data} = {'name': 'Theater_1761763046_8195', 'capacity': 201, 'type': 'D'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.147423" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:26.147423" elapsed="0.001013"/>
</return>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:26.139312" elapsed="0.009124"/>
</kw>
<msg time="2025-10-29T15:37:26.148436" level="INFO">${theater_data} = {'name': 'Theater_1761763046_8195', 'capacity': 201, 'type': 'D'}</msg>
<var>${theater_data}</var>
<arg>$theater_data is ${None}</arg>
<arg>Generate Fake Theater Data</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${theater_data}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.139312" elapsed="0.009124"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.150429" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.150429" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.151446" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.151446" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:26.216892" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:26.216892" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:26.216892" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:26.151446" elapsed="0.066444">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.218884" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.218884" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.218884" elapsed="0.001005"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.219889" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:26.149427" elapsed="0.070462">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.219889" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:26.149427" elapsed="0.070462">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.219889" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:26.148436" elapsed="0.071453">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.219889" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.220899" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.220899" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:26.148436" elapsed="0.072463">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.220899" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.220899" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_id}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.220899" elapsed="0.000991"/>
</return>
<var>${theater_id}</var>
<doc>Cria theater e retorna o ID</doc>
<status status="FAIL" start="2025-10-29T15:37:26.138307" elapsed="0.083583">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Delete Theater" owner="theater">
<var>${response}</var>
<arg>${theater_id}</arg>
<doc>Deleta um theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.221890" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.221890" elapsed="0.000000"/>
</kw>
<doc>Test DELETE /theaters/{id} with valid theater ID</doc>
<status status="FAIL" start="2025-10-29T15:37:26.136303" elapsed="0.085587">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t14" name="Delete Theater Without Authentication" line="96">
<kw name="Create Theater And Get ID" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.231423" level="INFO">${timestamp} = 1761763046</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:26.230433" elapsed="0.000990"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.231423" level="INFO">${random_num} = 1096</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.231423" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:26.232424" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:26.232424" level="INFO">${fake_name} = Theater_1761763046_1096</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.231423" elapsed="0.001001"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.232424" elapsed="0.001000"/>
</kw>
<msg time="2025-10-29T15:37:26.233424" level="INFO">${fake_capacity} = 243</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.232424" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.233424" elapsed="0.001005"/>
</kw>
<msg time="2025-10-29T15:37:26.234429" level="INFO">${fake_type} = s</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.233424" elapsed="0.001005"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.235435" level="INFO">${theater_data} = {'name': 'Theater_1761763046_1096', 'capacity': 243, 'type': 's'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.234429" elapsed="0.001006"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:26.235435" elapsed="0.000000"/>
</return>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:26.230433" elapsed="0.005002"/>
</kw>
<msg time="2025-10-29T15:37:26.235435" level="INFO">${theater_data} = {'name': 'Theater_1761763046_1096', 'capacity': 243, 'type': 's'}</msg>
<var>${theater_data}</var>
<arg>$theater_data is ${None}</arg>
<arg>Generate Fake Theater Data</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${theater_data}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.230433" elapsed="0.005002"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.237441" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.237441" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.238448" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.237441" elapsed="0.001007"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:26.319639" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:26.319639" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:26.319639" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:26.238448" elapsed="0.081191">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.320689" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.320689" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.320689" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.320689" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:26.237441" elapsed="0.083248">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.320689" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:26.236444" elapsed="0.085241">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.321685" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:26.236444" elapsed="0.085241">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.321685" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.321685" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.321685" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:26.236444" elapsed="0.085241">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.321685" elapsed="0.001276"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.322961" elapsed="0.000000"/>
</kw>
<return>
<value>${theater_id}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.322961" elapsed="0.000000"/>
</return>
<var>${theater_id}</var>
<doc>Cria theater e retorna o ID</doc>
<status status="FAIL" start="2025-10-29T15:37:26.229425" elapsed="0.093536">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Delete Theater" owner="theater">
<var>${response}</var>
<arg>${theater_id}</arg>
<arg>${None}</arg>
<doc>Deleta um theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.322961" elapsed="0.001509"/>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>401</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.324470" elapsed="0.000000"/>
</kw>
<doc>Test DELETE /theaters/{id} without admin token</doc>
<status status="FAIL" start="2025-10-29T15:37:26.227424" elapsed="0.097046">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t15" name="Delete Non-Existent Theater" line="102">
<kw name="Delete Theater" owner="theater">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.338996" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.337995" elapsed="0.001001"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.338996" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.338996" elapsed="0.001011"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:26.409910" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:26.409910" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:26.410915" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:26.340007" elapsed="0.070908">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.410915" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.411910" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.411910" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.411910" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:26.337995" elapsed="0.073915">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.411910" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:26.336995" elapsed="0.074915">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.411910" elapsed="0.000000"/>
</return>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:26.336995" elapsed="0.074915">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<var>${token}</var>
<arg>$auth_token is ${None}</arg>
<arg>Get Admin Token For Theaters</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-10-29T15:37:26.335992" elapsed="0.075918">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.412909" elapsed="0.000000"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters/${theater_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.412909" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.412909" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>invalid_theater_id</arg>
<doc>Deleta um theater</doc>
<status status="FAIL" start="2025-10-29T15:37:26.335485" elapsed="0.077424">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Error Response" owner="theater">
<arg>${response}</arg>
<arg>404</arg>
<doc>Verifica resposta de erro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.412909" elapsed="0.000000"/>
</kw>
<doc>Test DELETE /theaters/{id} with invalid theater ID</doc>
<status status="FAIL" start="2025-10-29T15:37:26.331483" elapsed="0.082939">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t16" name="Theater CRUD Flow" line="108">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.425455" level="INFO">${timestamp} = 1761763046</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:26.424450" elapsed="0.001005"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.425455" level="INFO">${random_num} = 6833</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.425455" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:26.426463" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:26.426463" level="INFO">${fake_name} = Theater_1761763046_6833</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.426463" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.randint(50, 300)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.427462" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:26.427462" level="INFO">${fake_capacity} = 150</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.426463" elapsed="0.000999"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.428462" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:26.428462" level="INFO">${fake_type} = D</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.427462" elapsed="0.001000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.429472" level="INFO">${theater_data} = {'name': 'Theater_1761763046_6833', 'capacity': 150, 'type': 'D'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.428462" elapsed="0.001010"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:26.429472" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:26.429472" level="INFO">${theater_data} = {'name': 'Theater_1761763046_6833', 'capacity': 150, 'type': 'D'}</msg>
<var>${theater_data}</var>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:26.423452" elapsed="0.006020"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.432463" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.432463" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.432463" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.432463" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:26.499551" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:26.499551" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:26.499551" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:26.432463" elapsed="0.068092">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.500555" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.500555" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.500555" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.500555" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:26.431466" elapsed="0.069089">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.501555" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:26.431466" elapsed="0.070089">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.501555" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:26.431466" elapsed="0.070089">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.501555" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.501555" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.501555" elapsed="0.000000"/>
</return>
<var>${create_response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:26.430466" elapsed="0.071089">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${create_response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.502549" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${theater_id}</var>
<arg>${create_response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.503552" elapsed="0.000000"/>
</kw>
<kw name="Get Theater By ID" owner="theater">
<var>${get_response}</var>
<arg>${theater_id}</arg>
<doc>Busca theater por ID</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.503552" elapsed="0.000000"/>
</kw>
<kw name="Verify Theater Response Structure" owner="theater">
<arg>${get_response}</arg>
<doc>Verifica estrutura da resposta de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.503552" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${update_data}</var>
<arg>capacity=250</arg>
<arg>type=3D</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.505734" elapsed="0.000000"/>
</kw>
<kw name="Update Theater" owner="theater">
<var>${update_response}</var>
<arg>${theater_id}</arg>
<arg>${update_data}</arg>
<doc>Atualiza um theater existente</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.505734" elapsed="0.000000"/>
</kw>
<kw name="Verify Theater Response Structure" owner="theater">
<arg>${update_response}</arg>
<doc>Verifica estrutura da resposta de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.506749" elapsed="0.000000"/>
</kw>
<kw name="Delete Theater" owner="theater">
<var>${delete_response}</var>
<arg>${theater_id}</arg>
<doc>Deleta um theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.507759" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${delete_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.507759" elapsed="0.000000"/>
</kw>
<doc>Complete CRUD flow for theaters</doc>
<status status="FAIL" start="2025-10-29T15:37:26.418448" elapsed="0.089311">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<test id="s1-s2-t17" name="Create Multiple Theaters With Different Types" line="129">
<for flavor="IN">
<iter>
<kw name="Generate Fake Theater Data" owner="theater">
<var>${theater_data}</var>
<arg>type=${type}</arg>
<doc>Gera dados fake para theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.516283" elapsed="0.000000"/>
</kw>
<kw name="Create Theater" owner="theater">
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.516283" elapsed="0.000000"/>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.517282" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response.json()}[type]</arg>
<arg>${type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.517282" elapsed="0.000000"/>
</kw>
<var name="${type}"/>
<status status="NOT RUN" start="2025-10-29T15:37:26.516283" elapsed="0.000999"/>
</iter>
<msg time="2025-10-29T15:37:26.517282" level="FAIL">Value of variable '@{THEATER_TYPES}' is not list or list-like.</msg>
<var>${type}</var>
<value>@{THEATER_TYPES}</value>
<status status="FAIL" start="2025-10-29T15:37:26.515271" elapsed="0.002011">Value of variable '@{THEATER_TYPES}' is not list or list-like.</status>
</for>
<doc>Test creating theaters with all available types</doc>
<status status="FAIL" start="2025-10-29T15:37:26.512758" elapsed="0.004524">Value of variable '@{THEATER_TYPES}' is not list or list-like.</status>
</test>
<test id="s1-s2-t18" name="Theater Capacity Validation" line="138">
<kw name="Generate Fake Theater Data" owner="theater">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.528567" level="INFO">${timestamp} = 1761763046</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-29T15:37:26.528567" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.529561" level="INFO">${random_num} = 1359</msg>
<var>${random_num}</var>
<arg>random.randint(1000, 9999)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.528567" elapsed="0.000994"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>Theater_${timestamp}_${random_num}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:26.529561" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:26.529561" level="INFO">${fake_name} = Theater_1761763046_1359</msg>
<var>${fake_name}</var>
<arg>$name is ${None}</arg>
<arg>Set Variable</arg>
<arg>Theater_${timestamp}_${random_num}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.529561" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${capacity}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-29T15:37:26.530561" elapsed="0.000000"/>
</kw>
<msg time="2025-10-29T15:37:26.530561" level="INFO">${fake_capacity} = 10</msg>
<var>${fake_capacity}</var>
<arg>$capacity is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.randint(50, 300)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${capacity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.529561" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Evaluate" owner="BuiltIn">
<arg>random.choice($THEATER_TYPES)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-29T15:37:26.530561" elapsed="0.001000"/>
</kw>
<msg time="2025-10-29T15:37:26.531561" level="INFO">${fake_type} = a</msg>
<var>${fake_type}</var>
<arg>$type is ${None}</arg>
<arg>Evaluate</arg>
<arg>random.choice($THEATER_TYPES)</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-29T15:37:26.530561" elapsed="0.001000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.532560" level="INFO">${theater_data} = {'name': 'Theater_1761763046_1359', 'capacity': '10', 'type': 'a'}</msg>
<var>${theater_data}</var>
<arg>name=${fake_name}</arg>
<arg>capacity=${fake_capacity}</arg>
<arg>type=${fake_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.531561" elapsed="0.000999"/>
</kw>
<return>
<value>${theater_data}</value>
<status status="PASS" start="2025-10-29T15:37:26.532560" elapsed="0.000000"/>
</return>
<msg time="2025-10-29T15:37:26.532560" level="INFO">${theater_data} = {'name': 'Theater_1761763046_1359', 'capacity': '10', 'type': 'a'}</msg>
<var>${theater_data}</var>
<arg>capacity=10</arg>
<doc>Gera dados fake para theater</doc>
<status status="PASS" start="2025-10-29T15:37:26.527560" elapsed="0.005000"/>
</kw>
<kw name="Create Theater" owner="theater">
<kw name="Get Admin Token For Theaters" owner="theater">
<kw name="Get Admin Token" owner="base">
<kw name="Get Auth Token" owner="base">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.535081" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.534561" elapsed="0.000520"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-29T15:37:26.535081" level="INFO">${body} = {'email': 'admin@example.com', 'password': 'admin123'}</msg>
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-29T15:37:26.535081" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-29T15:37:26.603566" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "admin@example.com", "password": "admin123"}' 
 </msg>
<msg time="2025-10-29T15:37:26.603566" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 29 Oct 2025 18:37:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-10-29T15:37:26.603566" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</msg>
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/auth/login</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-29T15:37:26.535081" elapsed="0.069485">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.604566" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[data][token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.605078" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.605078" elapsed="0.000000"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.605078" elapsed="0.000000"/>
</return>
<var>${token}</var>
<arg>${ADMIN_EMAIL}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Obtém token de autenticação</doc>
<status status="FAIL" start="2025-10-29T15:37:26.534561" elapsed="0.070517">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.605078" elapsed="0.000000"/>
</return>
<var>${token}</var>
<doc>Obtém token de administrador</doc>
<status status="FAIL" start="2025-10-29T15:37:26.533559" elapsed="0.071519">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.605078" elapsed="0.000000"/>
</return>
<var>${auth_token}</var>
<doc>Obtém token JWT para admin</doc>
<status status="FAIL" start="2025-10-29T15:37:26.533559" elapsed="0.071519">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${auth_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.605078" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>cinema_api</arg>
<arg>/theaters</arg>
<arg>json=${theater_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.605078" elapsed="0.000000"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-29T15:37:26.605078" elapsed="0.000000"/>
</return>
<var>${response}</var>
<arg>${theater_data}</arg>
<doc>Cria um novo teatro</doc>
<status status="FAIL" start="2025-10-29T15:37:26.533559" elapsed="0.071519">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</kw>
<kw name="Verify Theater Created Successfully" owner="theater">
<arg>${response}</arg>
<doc>Verifica criação bem-sucedida de theater</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.606632" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<arg>${response.json()}[capacity]</arg>
<arg>10</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" start="2025-10-29T15:37:26.607641" elapsed="0.000000"/>
</kw>
<doc>Test theater capacity validation</doc>
<status status="FAIL" start="2025-10-29T15:37:26.523282" elapsed="0.084359">HTTPError: 401 Client Error: Unauthorized for url: http://localhost:3000/api/v1/auth/login</status>
</test>
<status status="FAIL" start="2025-10-29T15:37:22.520419" elapsed="4.092227"/>
</suite>
<status status="FAIL" start="2025-10-29T15:37:19.759824" elapsed="6.859989"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="14" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Server" id="s1" pass="10" fail="14" skip="0">Server</stat>
<stat name="Auth" id="s1-s1" pass="6" fail="0" skip="0">Server.Auth</stat>
<stat name="Theater" id="s1-s2" pass="4" fail="14" skip="0">Server.Theater</stat>
</suite>
</statistics>
<errors>
<msg time="2025-10-29T15:37:20.138456" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 28: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:20.139459" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 43: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:20.140454" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 79: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:20.140454" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 89: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:20.140454" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\auth.resource' on line 101: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.533171" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 18: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.533171" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 24: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.533171" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 30: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.534682" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 39: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.535190" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 50: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.535190" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 59: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.535190" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 79: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.536720" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 130: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.543725" level="ERROR">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\theater.resource' on line 5: Importing library 'Faker' failed: ModuleNotFoundError: No module named 'Faker'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\raphael\anaconda3\Scripts\robot.exe
  C:\Users\raphael\anaconda3\python312.zip
  C:\Users\raphael\anaconda3\DLLs
  C:\Users\raphael\anaconda3\Lib
  C:\Users\raphael\anaconda3
  C:\Users\raphael\anaconda3\Lib\site-packages
  C:\Users\raphael\anaconda3\Lib\site-packages\win32
  C:\Users\raphael\anaconda3\Lib\site-packages\win32\lib
  C:\Users\raphael\anaconda3\Lib\site-packages\Pythonwin</msg>
<msg time="2025-10-29T15:37:22.548839" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 16: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.549853" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 22: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.549853" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 31: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.550840" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 85: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.556377" level="ERROR">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\api\setup.resource' on line 4: Importing library 'Faker' failed: ModuleNotFoundError: No module named 'Faker'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\raphael\anaconda3\Scripts\robot.exe
  C:\Users\raphael\anaconda3\python312.zip
  C:\Users\raphael\anaconda3\DLLs
  C:\Users\raphael\anaconda3\Lib
  C:\Users\raphael\anaconda3
  C:\Users\raphael\anaconda3\Lib\site-packages
  C:\Users\raphael\anaconda3\Lib\site-packages\win32
  C:\Users\raphael\anaconda3\Lib\site-packages\win32\lib
  C:\Users\raphael\anaconda3\Lib\site-packages\Pythonwin</msg>
<msg time="2025-10-29T15:37:22.571436" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 136: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.572437" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 167: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.572437" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 174: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.573429" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 186: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.573429" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 191: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.573429" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 196: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.574438" level="WARN">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 203: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2025-10-29T15:37:22.945413" level="ERROR">Error in file 'C:\Users\raphael\Documents\GitHub\learn\Compass\cinema\test-ciname-challenge\resources\base.resource' on line 12: Importing library 'Faker' failed: ModuleNotFoundError: No module named 'Faker'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\raphael\anaconda3\Scripts\robot.exe
  C:\Users\raphael\anaconda3\python312.zip
  C:\Users\raphael\anaconda3\DLLs
  C:\Users\raphael\anaconda3\Lib
  C:\Users\raphael\anaconda3
  C:\Users\raphael\anaconda3\Lib\site-packages
  C:\Users\raphael\anaconda3\Lib\site-packages\win32
  C:\Users\raphael\anaconda3\Lib\site-packages\win32\lib
  C:\Users\raphael\anaconda3\Lib\site-packages\Pythonwin</msg>
</errors>
</robot>
